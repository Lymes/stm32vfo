ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	_Z18SystemClock_Configv
  19              		.arch armv7-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu softvfp
  25              	_Z18SystemClock_Configv:
  26              		.fnstart
  27              	.LFB534:
  28              		.file 1 "Src/main.cpp"
   1:Src/main.cpp  **** /* USER CODE BEGIN Header */
   2:Src/main.cpp  **** /**
   3:Src/main.cpp  ****   ******************************************************************************
   4:Src/main.cpp  ****   * @file           : main.c
   5:Src/main.cpp  ****   * @brief          : Main program body
   6:Src/main.cpp  ****   ******************************************************************************
   7:Src/main.cpp  ****   * @attention
   8:Src/main.cpp  ****   *
   9:Src/main.cpp  ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.cpp  ****   * All rights reserved.</center></h2>
  11:Src/main.cpp  ****   *
  12:Src/main.cpp  ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.cpp  ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.cpp  ****   * License. You may obtain a copy of the License at:
  15:Src/main.cpp  ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.cpp  ****   *
  17:Src/main.cpp  ****   ******************************************************************************
  18:Src/main.cpp  ****   */
  19:Src/main.cpp  **** /* USER CODE END Header */
  20:Src/main.cpp  **** 
  21:Src/main.cpp  **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.cpp  **** #include "main.h"
  23:Src/main.cpp  **** 
  24:Src/main.cpp  **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.cpp  **** /* USER CODE BEGIN Includes */
  26:Src/main.cpp  **** #include "VFO.h"
  27:Src/main.cpp  **** /* USER CODE END Includes */
  28:Src/main.cpp  **** 
  29:Src/main.cpp  **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.cpp  **** /* USER CODE BEGIN PTD */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 2


  31:Src/main.cpp  **** 
  32:Src/main.cpp  **** /* USER CODE END PTD */
  33:Src/main.cpp  **** 
  34:Src/main.cpp  **** /* Private define ------------------------------------------------------------*/
  35:Src/main.cpp  **** /* USER CODE BEGIN PD */
  36:Src/main.cpp  **** 
  37:Src/main.cpp  **** /* USER CODE END PD */
  38:Src/main.cpp  **** 
  39:Src/main.cpp  **** /* Private macro -------------------------------------------------------------*/
  40:Src/main.cpp  **** /* USER CODE BEGIN PM */
  41:Src/main.cpp  **** 
  42:Src/main.cpp  **** /* USER CODE END PM */
  43:Src/main.cpp  **** 
  44:Src/main.cpp  **** /* Private variables ---------------------------------------------------------*/
  45:Src/main.cpp  **** 
  46:Src/main.cpp  **** I2C_HandleTypeDef hi2c2;
  47:Src/main.cpp  **** 
  48:Src/main.cpp  **** TIM_HandleTypeDef htim3;
  49:Src/main.cpp  **** TIM_HandleTypeDef htim4;
  50:Src/main.cpp  **** 
  51:Src/main.cpp  **** /* USER CODE BEGIN PV */
  52:Src/main.cpp  **** 
  53:Src/main.cpp  **** /* USER CODE END PV */
  54:Src/main.cpp  **** 
  55:Src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.cpp  **** void SystemClock_Config(void);
  57:Src/main.cpp  **** static void MX_GPIO_Init(void);
  58:Src/main.cpp  **** static void MX_TIM4_Init(void);
  59:Src/main.cpp  **** static void MX_SPI2_Init(void);
  60:Src/main.cpp  **** static void MX_I2C2_Init(void);
  61:Src/main.cpp  **** static void MX_ADC1_Init(void);
  62:Src/main.cpp  **** static void MX_TIM3_Init(void);
  63:Src/main.cpp  **** /* USER CODE BEGIN PFP */
  64:Src/main.cpp  **** 
  65:Src/main.cpp  **** /* USER CODE END PFP */
  66:Src/main.cpp  **** 
  67:Src/main.cpp  **** /* Private user code ---------------------------------------------------------*/
  68:Src/main.cpp  **** /* USER CODE BEGIN 0 */
  69:Src/main.cpp  **** 
  70:Src/main.cpp  **** 
  71:Src/main.cpp  **** /* USER CODE END 0 */
  72:Src/main.cpp  **** 
  73:Src/main.cpp  **** /**
  74:Src/main.cpp  ****   * @brief  The application entry point.
  75:Src/main.cpp  ****   * @retval int
  76:Src/main.cpp  ****   */
  77:Src/main.cpp  **** int main(void)
  78:Src/main.cpp  **** {
  79:Src/main.cpp  ****   /* USER CODE BEGIN 1 */
  80:Src/main.cpp  **** 
  81:Src/main.cpp  ****   /* USER CODE END 1 */
  82:Src/main.cpp  ****   
  83:Src/main.cpp  **** 
  84:Src/main.cpp  ****   /* MCU Configuration--------------------------------------------------------*/
  85:Src/main.cpp  **** 
  86:Src/main.cpp  ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Src/main.cpp  ****   HAL_Init();
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 3


  88:Src/main.cpp  **** 
  89:Src/main.cpp  ****   /* USER CODE BEGIN Init */
  90:Src/main.cpp  **** 
  91:Src/main.cpp  ****   /* USER CODE END Init */
  92:Src/main.cpp  **** 
  93:Src/main.cpp  ****   /* Configure the system clock */
  94:Src/main.cpp  ****   SystemClock_Config();
  95:Src/main.cpp  **** 
  96:Src/main.cpp  ****   /* USER CODE BEGIN SysInit */
  97:Src/main.cpp  **** 
  98:Src/main.cpp  ****   /* USER CODE END SysInit */
  99:Src/main.cpp  **** 
 100:Src/main.cpp  ****   /* Initialize all configured peripherals */
 101:Src/main.cpp  ****   MX_GPIO_Init();
 102:Src/main.cpp  ****   MX_TIM4_Init();
 103:Src/main.cpp  ****   MX_SPI2_Init();
 104:Src/main.cpp  ****   MX_I2C2_Init();
 105:Src/main.cpp  ****   MX_ADC1_Init();
 106:Src/main.cpp  ****   MX_TIM3_Init();
 107:Src/main.cpp  ****   /* USER CODE BEGIN 2 */
 108:Src/main.cpp  **** 
 109:Src/main.cpp  ****   vfoSetup();
 110:Src/main.cpp  **** 
 111:Src/main.cpp  ****   /* USER CODE END 2 */
 112:Src/main.cpp  **** 
 113:Src/main.cpp  ****   /* Infinite loop */
 114:Src/main.cpp  ****   /* USER CODE BEGIN WHILE */
 115:Src/main.cpp  ****   while (1)
 116:Src/main.cpp  ****   {
 117:Src/main.cpp  **** 	  vfoLoopIteration();
 118:Src/main.cpp  **** 
 119:Src/main.cpp  ****     /* USER CODE END WHILE */
 120:Src/main.cpp  **** 
 121:Src/main.cpp  ****     /* USER CODE BEGIN 3 */
 122:Src/main.cpp  ****   }
 123:Src/main.cpp  ****   /* USER CODE END 3 */
 124:Src/main.cpp  **** }
 125:Src/main.cpp  **** 
 126:Src/main.cpp  **** 
 127:Src/main.cpp  **** /**
 128:Src/main.cpp  ****   * @brief System Clock Configuration
 129:Src/main.cpp  ****   * @retval None
 130:Src/main.cpp  ****   */
 131:Src/main.cpp  **** void SystemClock_Config(void)
 132:Src/main.cpp  **** {
  29              		.loc 1 132 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 80
  32              		@ frame_needed = 0, uses_anonymous_args = 0
 133:Src/main.cpp  ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  33              		.loc 1 133 3 view .LVU1
 132:Src/main.cpp  ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  34              		.loc 1 132 1 is_stmt 0 view .LVU2
  35 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  36              		.save {r4, r5, r6, r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 20
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 4


  39              		.cfi_offset 4, -20
  40              		.cfi_offset 5, -16
  41              		.cfi_offset 6, -12
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
 134:Src/main.cpp  ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 135:Src/main.cpp  ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 136:Src/main.cpp  **** 
 137:Src/main.cpp  ****   /** Initializes the CPU, AHB and APB busses clocks 
 138:Src/main.cpp  ****   */
 139:Src/main.cpp  ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 140:Src/main.cpp  ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 141:Src/main.cpp  ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 142:Src/main.cpp  ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  44              		.loc 1 142 30 view .LVU3
  45 0002 0121     		movs	r1, #1
 133:Src/main.cpp  ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  46              		.loc 1 133 22 view .LVU4
  47 0004 0024     		movs	r4, #0
 143:Src/main.cpp  ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  48              		.loc 1 143 34 view .LVU5
  49 0006 0225     		movs	r5, #2
 144:Src/main.cpp  ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  50              		.loc 1 144 35 view .LVU6
  51 0008 4FF48032 		mov	r2, #65536
 145:Src/main.cpp  ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  52              		.loc 1 145 32 view .LVU7
  53 000c 4FF4E013 		mov	r3, #1835008
 139:Src/main.cpp  ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  54              		.loc 1 139 36 view .LVU8
  55 0010 0126     		movs	r6, #1
  56 0012 4FF48037 		mov	r7, #65536
 132:Src/main.cpp  ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  57              		.loc 1 132 1 view .LVU9
  58              		.pad #84
  59 0016 95B0     		sub	sp, sp, #84
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 104
 146:Src/main.cpp  ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  62              		.loc 1 146 24 view .LVU10
  63 0018 0AA8     		add	r0, sp, #40
 139:Src/main.cpp  ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  64              		.loc 1 139 36 view .LVU11
  65 001a CDE90A67 		strd	r6, [sp, #40]
 142:Src/main.cpp  ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  66              		.loc 1 142 30 view .LVU12
  67 001e 0E91     		str	r1, [sp, #56]
 144:Src/main.cpp  ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  68              		.loc 1 144 35 view .LVU13
  69 0020 CDE91152 		strd	r5, r2, [sp, #68]
 145:Src/main.cpp  ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  70              		.loc 1 145 32 view .LVU14
  71 0024 1393     		str	r3, [sp, #76]
 133:Src/main.cpp  ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  72              		.loc 1 133 22 view .LVU15
  73 0026 0C94     		str	r4, [sp, #48]
 134:Src/main.cpp  ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 5


  74              		.loc 1 134 22 view .LVU16
  75 0028 0494     		str	r4, [sp, #16]
 135:Src/main.cpp  **** 
  76              		.loc 1 135 28 view .LVU17
  77 002a 0094     		str	r4, [sp]
 133:Src/main.cpp  ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 133 22 view .LVU18
  79 002c 0D94     		str	r4, [sp, #52]
  80 002e CDE90F44 		strd	r4, r4, [sp, #60]
 134:Src/main.cpp  ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  81              		.loc 1 134 3 is_stmt 1 view .LVU19
 134:Src/main.cpp  ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  82              		.loc 1 134 22 is_stmt 0 view .LVU20
  83 0032 CDE90544 		strd	r4, r4, [sp, #20]
  84 0036 CDE90744 		strd	r4, r4, [sp, #28]
 135:Src/main.cpp  **** 
  85              		.loc 1 135 3 is_stmt 1 view .LVU21
 135:Src/main.cpp  **** 
  86              		.loc 1 135 28 is_stmt 0 view .LVU22
  87 003a CDE90144 		strd	r4, r4, [sp, #4]
  88 003e 0394     		str	r4, [sp, #12]
 139:Src/main.cpp  ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  89              		.loc 1 139 3 is_stmt 1 view .LVU23
 140:Src/main.cpp  ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  90              		.loc 1 140 3 view .LVU24
 141:Src/main.cpp  ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  91              		.loc 1 141 3 view .LVU25
 142:Src/main.cpp  ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  92              		.loc 1 142 3 view .LVU26
 143:Src/main.cpp  ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  93              		.loc 1 143 3 view .LVU27
 145:Src/main.cpp  ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  94              		.loc 1 145 3 view .LVU28
  95              		.loc 1 146 3 view .LVU29
 147:Src/main.cpp  ****   {
 148:Src/main.cpp  ****     Error_Handler();
 149:Src/main.cpp  ****   }
 150:Src/main.cpp  ****   /** Initializes the CPU, AHB and APB busses clocks 
 151:Src/main.cpp  ****   */
 152:Src/main.cpp  ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  96              		.loc 1 152 31 is_stmt 0 view .LVU30
  97 0040 0F26     		movs	r6, #15
 146:Src/main.cpp  ****   {
  98              		.loc 1 146 24 view .LVU31
  99 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 100              	.LVL0:
 101              		.loc 1 152 3 is_stmt 1 view .LVU32
 153:Src/main.cpp  ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 154:Src/main.cpp  ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 102              		.loc 1 154 3 view .LVU33
 155:Src/main.cpp  ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 103              		.loc 1 155 3 view .LVU34
 156:Src/main.cpp  ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 104              		.loc 1 156 3 view .LVU35
 152:Src/main.cpp  ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 105              		.loc 1 152 31 is_stmt 0 view .LVU36
 106 0046 0227     		movs	r7, #2
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 6


 107 0048 0022     		movs	r2, #0
 108 004a 4FF48063 		mov	r3, #1024
 157:Src/main.cpp  ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 158:Src/main.cpp  **** 
 159:Src/main.cpp  ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 109              		.loc 1 159 26 view .LVU37
 110 004e 2946     		mov	r1, r5
 111 0050 04A8     		add	r0, sp, #16
 152:Src/main.cpp  ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 112              		.loc 1 152 31 view .LVU38
 113 0052 CDE90623 		strd	r2, [sp, #24]
 157:Src/main.cpp  ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 114              		.loc 1 157 3 is_stmt 1 view .LVU39
 115              		.loc 1 159 3 view .LVU40
 157:Src/main.cpp  ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 116              		.loc 1 157 36 is_stmt 0 view .LVU41
 117 0056 0894     		str	r4, [sp, #32]
 152:Src/main.cpp  ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 118              		.loc 1 152 31 view .LVU42
 119 0058 CDE90467 		strd	r6, [sp, #16]
 120              		.loc 1 159 26 view .LVU43
 121 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 122              	.LVL1:
 160:Src/main.cpp  ****   {
 161:Src/main.cpp  ****     Error_Handler();
 162:Src/main.cpp  ****   }
 163:Src/main.cpp  ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 123              		.loc 1 163 3 is_stmt 1 view .LVU44
 164:Src/main.cpp  ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV8;
 124              		.loc 1 164 35 is_stmt 0 view .LVU45
 125 0060 4FF44043 		mov	r3, #49152
 165:Src/main.cpp  ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 126              		.loc 1 165 32 view .LVU46
 127 0064 6846     		mov	r0, sp
 163:Src/main.cpp  ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV8;
 128              		.loc 1 163 38 view .LVU47
 129 0066 0095     		str	r5, [sp]
 164:Src/main.cpp  ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV8;
 130              		.loc 1 164 3 is_stmt 1 view .LVU48
 164:Src/main.cpp  ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV8;
 131              		.loc 1 164 35 is_stmt 0 view .LVU49
 132 0068 0293     		str	r3, [sp, #8]
 133              		.loc 1 165 3 is_stmt 1 view .LVU50
 134              		.loc 1 165 32 is_stmt 0 view .LVU51
 135 006a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 136              	.LVL2:
 166:Src/main.cpp  ****   {
 167:Src/main.cpp  ****     Error_Handler();
 168:Src/main.cpp  ****   }
 169:Src/main.cpp  **** }
 137              		.loc 1 169 1 view .LVU52
 138 006e 15B0     		add	sp, sp, #84
 139              	.LCFI2:
 140              		.cfi_def_cfa_offset 20
 141              		@ sp needed
 142 0070 F0BD     		pop	{r4, r5, r6, r7, pc}
 143              		.cfi_endproc
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 7


 144              	.LFE534:
 145              		.fnend
 147 0072 00BF     		.section	.text.startup.main,"ax",%progbits
 148              		.align	1
 149              		.p2align 2,,3
 150              		.global	main
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu softvfp
 156              	main:
 157              		.fnstart
 158              	.LFB533:
  78:Src/main.cpp  ****   /* USER CODE BEGIN 1 */
 159              		.loc 1 78 1 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 112
 162              		@ frame_needed = 0, uses_anonymous_args = 0
  87:Src/main.cpp  **** 
 163              		.loc 1 87 3 view .LVU54
  78:Src/main.cpp  ****   /* USER CODE BEGIN 1 */
 164              		.loc 1 78 1 is_stmt 0 view .LVU55
 165 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 166              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 167              	.LCFI3:
 168              		.cfi_def_cfa_offset 36
 169              		.cfi_offset 4, -36
 170              		.cfi_offset 5, -32
 171              		.cfi_offset 6, -28
 172              		.cfi_offset 7, -24
 173              		.cfi_offset 8, -20
 174              		.cfi_offset 9, -16
 175              		.cfi_offset 10, -12
 176              		.cfi_offset 11, -8
 177              		.cfi_offset 14, -4
 178              	.LBB87:
 179              	.LBB88:
 170:Src/main.cpp  **** 
 171:Src/main.cpp  **** /**
 172:Src/main.cpp  ****   * @brief ADC1 Initialization Function
 173:Src/main.cpp  ****   * @param None
 174:Src/main.cpp  ****   * @retval None
 175:Src/main.cpp  ****   */
 176:Src/main.cpp  **** static void MX_ADC1_Init(void)
 177:Src/main.cpp  **** {
 178:Src/main.cpp  **** 
 179:Src/main.cpp  ****   /* USER CODE BEGIN ADC1_Init 0 */
 180:Src/main.cpp  **** 
 181:Src/main.cpp  ****   /* USER CODE END ADC1_Init 0 */
 182:Src/main.cpp  **** 
 183:Src/main.cpp  ****   LL_ADC_InitTypeDef ADC_InitStruct = {0};
 184:Src/main.cpp  ****   LL_ADC_CommonInitTypeDef ADC_CommonInitStruct = {0};
 185:Src/main.cpp  ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 186:Src/main.cpp  **** 
 187:Src/main.cpp  ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 188:Src/main.cpp  **** 
 189:Src/main.cpp  ****   /* Peripheral clock enable */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 8


 190:Src/main.cpp  ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_ADC1);
 191:Src/main.cpp  ****   
 192:Src/main.cpp  ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOA);
 193:Src/main.cpp  ****   /**ADC1 GPIO Configuration  
 194:Src/main.cpp  ****   PA3   ------> ADC1_IN3
 195:Src/main.cpp  ****   PA4   ------> ADC1_IN4 
 196:Src/main.cpp  ****   */
 197:Src/main.cpp  ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_3|LL_GPIO_PIN_4;
 198:Src/main.cpp  ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 199:Src/main.cpp  ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 200:Src/main.cpp  **** 
 201:Src/main.cpp  ****   /* USER CODE BEGIN ADC1_Init 1 */
 202:Src/main.cpp  **** 
 203:Src/main.cpp  ****   /* USER CODE END ADC1_Init 1 */
 204:Src/main.cpp  ****   /** Common config 
 205:Src/main.cpp  ****   */
 206:Src/main.cpp  ****   ADC_InitStruct.DataAlignment = LL_ADC_DATA_ALIGN_RIGHT;
 207:Src/main.cpp  ****   ADC_InitStruct.SequencersScanMode = LL_ADC_SEQ_SCAN_DISABLE;
 208:Src/main.cpp  ****   LL_ADC_Init(ADC1, &ADC_InitStruct);
 209:Src/main.cpp  ****   ADC_CommonInitStruct.Multimode = LL_ADC_MULTI_INDEPENDENT;
 210:Src/main.cpp  ****   LL_ADC_CommonInit(__LL_ADC_COMMON_INSTANCE(ADC1), &ADC_CommonInitStruct);
 211:Src/main.cpp  ****   ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_SOFTWARE;
 212:Src/main.cpp  ****   ADC_REG_InitStruct.SequencerLength = LL_ADC_REG_SEQ_SCAN_DISABLE;
 213:Src/main.cpp  ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 214:Src/main.cpp  ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 215:Src/main.cpp  ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_NONE;
 216:Src/main.cpp  ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 217:Src/main.cpp  ****   /** Configure Regular Channel 
 218:Src/main.cpp  ****   */
 219:Src/main.cpp  ****   LL_ADC_REG_SetSequencerRanks(ADC1, LL_ADC_REG_RANK_1, LL_ADC_CHANNEL_3);
 220:Src/main.cpp  ****   LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_3, LL_ADC_SAMPLINGTIME_1CYCLE_5);
 221:Src/main.cpp  ****   /* USER CODE BEGIN ADC1_Init 2 */
 222:Src/main.cpp  **** 
 223:Src/main.cpp  ****   /* USER CODE END ADC1_Init 2 */
 224:Src/main.cpp  **** }
 225:Src/main.cpp  **** 
 226:Src/main.cpp  **** /**
 227:Src/main.cpp  ****   * @brief I2C2 Initialization Function
 228:Src/main.cpp  ****   * @param None
 229:Src/main.cpp  ****   * @retval None
 230:Src/main.cpp  ****   */
 231:Src/main.cpp  **** static void MX_I2C2_Init(void)
 232:Src/main.cpp  **** {
 233:Src/main.cpp  **** 	/* Peripheral clock enable */
 234:Src/main.cpp  **** 	__HAL_RCC_I2C2_CLK_ENABLE();
 235:Src/main.cpp  **** 
 236:Src/main.cpp  **** 	/* DMA1 clock enable */
 237:Src/main.cpp  **** 	__HAL_RCC_DMA1_CLK_ENABLE();
 238:Src/main.cpp  **** 
 239:Src/main.cpp  ****   /* USER CODE BEGIN I2C2_Init 0 */
 240:Src/main.cpp  ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 241:Src/main.cpp  ****   GPIO_InitStruct.Pin = I2C2_SCL_Pin|I2C2_SDA_Pin;
 242:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 243:Src/main.cpp  ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 244:Src/main.cpp  ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 245:Src/main.cpp  **** 
 246:Src/main.cpp  ****   /* USER CODE END I2C2_Init 0 */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 9


 247:Src/main.cpp  **** 
 248:Src/main.cpp  ****   /* USER CODE BEGIN I2C2_Init 1 */
 249:Src/main.cpp  **** 
 250:Src/main.cpp  ****   /* USER CODE END I2C2_Init 1 */
 251:Src/main.cpp  ****   hi2c2.Instance = I2C2;
 252:Src/main.cpp  ****   hi2c2.Init.ClockSpeed = 100000;
 253:Src/main.cpp  ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 254:Src/main.cpp  ****   hi2c2.Init.OwnAddress1 = 0;
 255:Src/main.cpp  ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 256:Src/main.cpp  ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 257:Src/main.cpp  ****   hi2c2.Init.OwnAddress2 = 0;
 258:Src/main.cpp  ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 259:Src/main.cpp  ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 260:Src/main.cpp  ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 261:Src/main.cpp  ****   {
 262:Src/main.cpp  ****     Error_Handler();
 263:Src/main.cpp  ****   }
 264:Src/main.cpp  ****   /* USER CODE BEGIN I2C2_Init 2 */
 265:Src/main.cpp  **** 
 266:Src/main.cpp  ****   /* USER CODE END I2C2_Init 2 */
 267:Src/main.cpp  **** 
 268:Src/main.cpp  **** }
 269:Src/main.cpp  **** 
 270:Src/main.cpp  **** /**
 271:Src/main.cpp  ****   * @brief SPI2 Initialization Function
 272:Src/main.cpp  ****   * @param None
 273:Src/main.cpp  ****   * @retval None
 274:Src/main.cpp  ****   */
 275:Src/main.cpp  **** static void MX_SPI2_Init(void)
 276:Src/main.cpp  **** {
 277:Src/main.cpp  **** 
 278:Src/main.cpp  ****   /* USER CODE BEGIN SPI2_Init 0 */
 279:Src/main.cpp  **** 
 280:Src/main.cpp  ****   /* USER CODE END SPI2_Init 0 */
 281:Src/main.cpp  **** 
 282:Src/main.cpp  ****   LL_SPI_InitTypeDef SPI_InitStruct = {0};
 283:Src/main.cpp  **** 
 284:Src/main.cpp  ****   LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 285:Src/main.cpp  **** 
 286:Src/main.cpp  ****   /* Peripheral clock enable */
 287:Src/main.cpp  ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_SPI2);
 288:Src/main.cpp  **** 
 289:Src/main.cpp  ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOB);
 290:Src/main.cpp  ****   /**SPI2 GPIO Configuration
 291:Src/main.cpp  ****   PB13   ------> SPI2_SCK
 292:Src/main.cpp  ****   PB15   ------> SPI2_MOSI
 293:Src/main.cpp  ****   */
 294:Src/main.cpp  ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_13|LL_GPIO_PIN_15;
 295:Src/main.cpp  ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 296:Src/main.cpp  ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 297:Src/main.cpp  ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 298:Src/main.cpp  ****   LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 299:Src/main.cpp  **** 
 300:Src/main.cpp  ****   /* USER CODE BEGIN SPI2_Init 1 */
 301:Src/main.cpp  **** 
 302:Src/main.cpp  ****   /* USER CODE END SPI2_Init 1 */
 303:Src/main.cpp  ****   /* SPI2 parameter configuration*/
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 10


 304:Src/main.cpp  ****   SPI_InitStruct.TransferDirection = LL_SPI_FULL_DUPLEX;
 305:Src/main.cpp  ****   SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 306:Src/main.cpp  ****   SPI_InitStruct.DataWidth = LL_SPI_DATAWIDTH_8BIT;
 307:Src/main.cpp  ****   SPI_InitStruct.ClockPolarity = LL_SPI_POLARITY_LOW;
 308:Src/main.cpp  ****   SPI_InitStruct.ClockPhase = LL_SPI_PHASE_1EDGE;
 309:Src/main.cpp  ****   SPI_InitStruct.NSS = LL_SPI_NSS_SOFT;
 310:Src/main.cpp  ****   SPI_InitStruct.BaudRate = LL_SPI_BAUDRATEPRESCALER_DIV2;
 311:Src/main.cpp  ****   SPI_InitStruct.BitOrder = LL_SPI_MSB_FIRST;
 312:Src/main.cpp  ****   SPI_InitStruct.CRCCalculation = LL_SPI_CRCCALCULATION_DISABLE;
 313:Src/main.cpp  ****   SPI_InitStruct.CRCPoly = 10;
 314:Src/main.cpp  ****   LL_SPI_Init(SPI2, &SPI_InitStruct);
 315:Src/main.cpp  ****   /* USER CODE BEGIN SPI2_Init 2 */
 316:Src/main.cpp  **** 
 317:Src/main.cpp  ****   /* USER CODE END SPI2_Init 2 */
 318:Src/main.cpp  **** 
 319:Src/main.cpp  **** }
 320:Src/main.cpp  **** 
 321:Src/main.cpp  **** /**
 322:Src/main.cpp  ****   * @brief TIM3 Initialization Function
 323:Src/main.cpp  ****   * @param None
 324:Src/main.cpp  ****   * @retval None
 325:Src/main.cpp  ****   */
 326:Src/main.cpp  **** static void MX_TIM3_Init(void)
 327:Src/main.cpp  **** {
 328:Src/main.cpp  **** 
 329:Src/main.cpp  ****   /* USER CODE BEGIN TIM3_Init 0 */
 330:Src/main.cpp  ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 331:Src/main.cpp  ****   GPIO_InitStruct.Pin = TFT_LED_Pin;
 332:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 333:Src/main.cpp  ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 334:Src/main.cpp  ****   HAL_GPIO_Init(TFT_LED_GPIO_Port, &GPIO_InitStruct);
 335:Src/main.cpp  **** 
 336:Src/main.cpp  ****   /* USER CODE END TIM3_Init 0 */
 337:Src/main.cpp  **** 
 338:Src/main.cpp  ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 339:Src/main.cpp  ****   TIM_OC_InitTypeDef sConfigOC = {0};
 340:Src/main.cpp  **** 
 341:Src/main.cpp  ****   /* USER CODE BEGIN TIM3_Init 1 */
 342:Src/main.cpp  **** 
 343:Src/main.cpp  ****   /* USER CODE END TIM3_Init 1 */
 344:Src/main.cpp  ****   htim3.Instance = TIM3;
 345:Src/main.cpp  ****   htim3.Init.Prescaler = 100;
 346:Src/main.cpp  ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 347:Src/main.cpp  ****   htim3.Init.Period = 255;
 348:Src/main.cpp  ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 349:Src/main.cpp  ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 350:Src/main.cpp  ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 351:Src/main.cpp  ****   {
 352:Src/main.cpp  ****     Error_Handler();
 353:Src/main.cpp  ****   }
 354:Src/main.cpp  ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 355:Src/main.cpp  ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 356:Src/main.cpp  ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 357:Src/main.cpp  ****   {
 358:Src/main.cpp  ****     Error_Handler();
 359:Src/main.cpp  ****   }
 360:Src/main.cpp  ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 11


 361:Src/main.cpp  ****   sConfigOC.Pulse = 0;
 362:Src/main.cpp  ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 363:Src/main.cpp  ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 364:Src/main.cpp  ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 365:Src/main.cpp  ****   {
 366:Src/main.cpp  ****     Error_Handler();
 367:Src/main.cpp  ****   }
 368:Src/main.cpp  ****   /* USER CODE BEGIN TIM3_Init 2 */
 369:Src/main.cpp  **** 
 370:Src/main.cpp  ****   /* USER CODE END TIM3_Init 2 */
 371:Src/main.cpp  ****   HAL_TIM_MspPostInit(&htim3);
 372:Src/main.cpp  **** 
 373:Src/main.cpp  **** }
 374:Src/main.cpp  **** 
 375:Src/main.cpp  **** /**
 376:Src/main.cpp  ****   * @brief TIM4 Initialization Function
 377:Src/main.cpp  ****   * @param None
 378:Src/main.cpp  ****   * @retval None
 379:Src/main.cpp  ****   */
 380:Src/main.cpp  **** static void MX_TIM4_Init(void)
 381:Src/main.cpp  **** {
 382:Src/main.cpp  **** 
 383:Src/main.cpp  ****   /* USER CODE BEGIN TIM4_Init 0 */
 384:Src/main.cpp  **** 
 385:Src/main.cpp  ****   /* USER CODE END TIM4_Init 0 */
 386:Src/main.cpp  **** 
 387:Src/main.cpp  ****   TIM_Encoder_InitTypeDef sConfig = {0};
 388:Src/main.cpp  ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 389:Src/main.cpp  **** 
 390:Src/main.cpp  ****   /* USER CODE BEGIN TIM4_Init 1 */
 391:Src/main.cpp  **** 
 392:Src/main.cpp  ****   /* USER CODE END TIM4_Init 1 */
 393:Src/main.cpp  ****   htim4.Instance = TIM4;
 394:Src/main.cpp  ****   htim4.Init.Prescaler = 0;
 395:Src/main.cpp  ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 396:Src/main.cpp  ****   htim4.Init.Period = 1000;
 397:Src/main.cpp  ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 398:Src/main.cpp  ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 399:Src/main.cpp  ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 400:Src/main.cpp  ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 401:Src/main.cpp  ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 402:Src/main.cpp  ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 403:Src/main.cpp  ****   sConfig.IC1Filter = 0;
 404:Src/main.cpp  ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 405:Src/main.cpp  ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 406:Src/main.cpp  ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 407:Src/main.cpp  ****   sConfig.IC2Filter = 0;
 408:Src/main.cpp  ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 409:Src/main.cpp  ****   {
 410:Src/main.cpp  ****     Error_Handler();
 411:Src/main.cpp  ****   }
 412:Src/main.cpp  ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 413:Src/main.cpp  ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 414:Src/main.cpp  ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 415:Src/main.cpp  ****   {
 416:Src/main.cpp  ****     Error_Handler();
 417:Src/main.cpp  ****   }
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 12


 418:Src/main.cpp  ****   /* USER CODE BEGIN TIM4_Init 2 */
 419:Src/main.cpp  **** 
 420:Src/main.cpp  ****   /* USER CODE END TIM4_Init 2 */
 421:Src/main.cpp  **** 
 422:Src/main.cpp  **** }
 423:Src/main.cpp  **** 
 424:Src/main.cpp  **** /**
 425:Src/main.cpp  ****   * @brief GPIO Initialization Function
 426:Src/main.cpp  ****   * @param None
 427:Src/main.cpp  ****   * @retval None
 428:Src/main.cpp  ****   */
 429:Src/main.cpp  **** static void MX_GPIO_Init(void)
 430:Src/main.cpp  **** {
 431:Src/main.cpp  ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 180              		.loc 1 431 20 view .LVU56
 181 0004 0024     		movs	r4, #0
 182              	.LBE88:
 183              	.LBE87:
  78:Src/main.cpp  ****   /* USER CODE BEGIN 1 */
 184              		.loc 1 78 1 view .LVU57
 185              		.pad #116
 186 0006 9DB0     		sub	sp, sp, #116
 187              	.LCFI4:
 188              		.cfi_def_cfa_offset 152
  87:Src/main.cpp  **** 
 189              		.loc 1 87 11 view .LVU58
 190 0008 FFF7FEFF 		bl	HAL_Init
 191              	.LVL3:
  94:Src/main.cpp  **** 
 192              		.loc 1 94 3 is_stmt 1 view .LVU59
  94:Src/main.cpp  **** 
 193              		.loc 1 94 21 is_stmt 0 view .LVU60
 194 000c FFF7FEFF 		bl	_Z18SystemClock_Configv
 195              	.LVL4:
 101:Src/main.cpp  ****   MX_TIM4_Init();
 196              		.loc 1 101 3 is_stmt 1 view .LVU61
 197              	.LBB101:
 198              	.LBI87:
 429:Src/main.cpp  **** {
 199              		.loc 1 429 13 view .LVU62
 200              	.LBB99:
 201              		.loc 1 431 3 view .LVU63
 202              		.loc 1 431 20 is_stmt 0 view .LVU64
 203 0010 CDE91244 		strd	r4, r4, [sp, #72]
 204 0014 CDE91444 		strd	r4, r4, [sp, #80]
 432:Src/main.cpp  **** 
 433:Src/main.cpp  ****   /* GPIO Ports Clock Enable */
 434:Src/main.cpp  ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 205              		.loc 1 434 3 is_stmt 1 view .LVU65
 206              	.LBB89:
 207              		.loc 1 434 3 view .LVU66
 208              		.loc 1 434 3 view .LVU67
 209 0018 BC4D     		ldr	r5, .L7
 210              	.LBE89:
 435:Src/main.cpp  ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 436:Src/main.cpp  ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 437:Src/main.cpp  **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 13


 438:Src/main.cpp  ****   /*Configure GPIO pin Output Level */
 439:Src/main.cpp  ****   HAL_GPIO_WritePin(GPIOA, TFT_A0_Pin|TFT_RESET_Pin|TFT_CS_Pin, GPIO_PIN_RESET);
 211              		.loc 1 439 20 is_stmt 0 view .LVU68
 212 001a 2246     		mov	r2, r4
 213              	.LBB90:
 434:Src/main.cpp  ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 214              		.loc 1 434 3 view .LVU69
 215 001c AB69     		ldr	r3, [r5, #24]
 216              	.LBE90:
 217              		.loc 1 439 20 view .LVU70
 218 001e 4FF4B051 		mov	r1, #5632
 219              	.LBB91:
 434:Src/main.cpp  ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 220              		.loc 1 434 3 view .LVU71
 221 0022 43F02003 		orr	r3, r3, #32
 222 0026 AB61     		str	r3, [r5, #24]
 434:Src/main.cpp  ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 223              		.loc 1 434 3 is_stmt 1 view .LVU72
 224 0028 AB69     		ldr	r3, [r5, #24]
 225              	.LBE91:
 226              		.loc 1 439 20 is_stmt 0 view .LVU73
 227 002a B948     		ldr	r0, .L7+4
 228              	.LBB92:
 434:Src/main.cpp  ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 229              		.loc 1 434 3 view .LVU74
 230 002c 03F02003 		and	r3, r3, #32
 231 0030 0793     		str	r3, [sp, #28]
 434:Src/main.cpp  ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 232              		.loc 1 434 3 is_stmt 1 view .LVU75
 233 0032 079B     		ldr	r3, [sp, #28]
 234              	.LBE92:
 435:Src/main.cpp  ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 235              		.loc 1 435 3 view .LVU76
 236              	.LBB93:
 435:Src/main.cpp  ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 237              		.loc 1 435 3 view .LVU77
 435:Src/main.cpp  ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 238              		.loc 1 435 3 view .LVU78
 239 0034 AB69     		ldr	r3, [r5, #24]
 240              	.LBE93:
 440:Src/main.cpp  **** 
 441:Src/main.cpp  ****   /*Configure GPIO pins : TFT_A0_Pin TFT_RESET_Pin TFT_CS_Pin */
 442:Src/main.cpp  ****   GPIO_InitStruct.Pin = TFT_A0_Pin|TFT_RESET_Pin|TFT_CS_Pin;
 241              		.loc 1 442 23 is_stmt 0 view .LVU79
 242 0036 0026     		movs	r6, #0
 243              	.LBB94:
 435:Src/main.cpp  ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 244              		.loc 1 435 3 view .LVU80
 245 0038 43F00403 		orr	r3, r3, #4
 246 003c AB61     		str	r3, [r5, #24]
 435:Src/main.cpp  ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 247              		.loc 1 435 3 is_stmt 1 view .LVU81
 248 003e AB69     		ldr	r3, [r5, #24]
 249              	.LBE94:
 250              		.loc 1 442 23 is_stmt 0 view .LVU82
 251 0040 0327     		movs	r7, #3
 252              	.LBB95:
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 14


 435:Src/main.cpp  ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 253              		.loc 1 435 3 view .LVU83
 254 0042 03F00403 		and	r3, r3, #4
 255 0046 0893     		str	r3, [sp, #32]
 435:Src/main.cpp  ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 256              		.loc 1 435 3 is_stmt 1 view .LVU84
 257 0048 089B     		ldr	r3, [sp, #32]
 258              	.LBE95:
 436:Src/main.cpp  **** 
 259              		.loc 1 436 3 view .LVU85
 260              	.LBB96:
 436:Src/main.cpp  **** 
 261              		.loc 1 436 3 view .LVU86
 436:Src/main.cpp  **** 
 262              		.loc 1 436 3 view .LVU87
 263 004a AB69     		ldr	r3, [r5, #24]
 264              	.LBE96:
 443:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 444:Src/main.cpp  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 445:Src/main.cpp  ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 446:Src/main.cpp  ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 447:Src/main.cpp  **** 
 448:Src/main.cpp  ****   /*Configure GPIO pin : BTN_STP_Pin */
 449:Src/main.cpp  ****   GPIO_InitStruct.Pin = BTN_STP_Pin;
 450:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 451:Src/main.cpp  ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 265              		.loc 1 451 24 is_stmt 0 view .LVU88
 266 004c 4FF00108 		mov	r8, #1
 267              	.LBB97:
 436:Src/main.cpp  **** 
 268              		.loc 1 436 3 view .LVU89
 269 0050 43F00803 		orr	r3, r3, #8
 270 0054 AB61     		str	r3, [r5, #24]
 436:Src/main.cpp  **** 
 271              		.loc 1 436 3 is_stmt 1 view .LVU90
 272 0056 AB69     		ldr	r3, [r5, #24]
 273              	.LBE97:
 274              	.LBE99:
 275              	.LBE101:
 276              	.LBB102:
 277              	.LBB103:
 399:Src/main.cpp  ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 278              		.loc 1 399 23 is_stmt 0 view .LVU91
 279 0058 4FF00309 		mov	r9, #3
 280              	.LBE103:
 281              	.LBE102:
 282              	.LBB105:
 283              	.LBB100:
 284              	.LBB98:
 436:Src/main.cpp  **** 
 285              		.loc 1 436 3 view .LVU92
 286 005c 03F00803 		and	r3, r3, #8
 287 0060 0993     		str	r3, [sp, #36]
 436:Src/main.cpp  **** 
 288              		.loc 1 436 3 is_stmt 1 view .LVU93
 289 0062 099B     		ldr	r3, [sp, #36]
 290              	.LBE98:
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 15


 439:Src/main.cpp  **** 
 291              		.loc 1 439 3 view .LVU94
 439:Src/main.cpp  **** 
 292              		.loc 1 439 20 is_stmt 0 view .LVU95
 293 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 294              	.LVL5:
 442:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 295              		.loc 1 442 3 is_stmt 1 view .LVU96
 443:Src/main.cpp  ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 296              		.loc 1 443 3 view .LVU97
 444:Src/main.cpp  ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 297              		.loc 1 444 3 view .LVU98
 445:Src/main.cpp  ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 298              		.loc 1 445 3 view .LVU99
 442:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 299              		.loc 1 442 23 is_stmt 0 view .LVU100
 300 0068 4FF4B052 		mov	r2, #5632
 301 006c 0123     		movs	r3, #1
 446:Src/main.cpp  **** 
 302              		.loc 1 446 16 view .LVU101
 303 006e 12A9     		add	r1, sp, #72
 304 0070 A748     		ldr	r0, .L7+4
 442:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 305              		.loc 1 442 23 view .LVU102
 306 0072 CDE91223 		strd	r2, [sp, #72]
 307 0076 CDE91467 		strd	r6, [sp, #80]
 446:Src/main.cpp  **** 
 308              		.loc 1 446 3 is_stmt 1 view .LVU103
 446:Src/main.cpp  **** 
 309              		.loc 1 446 16 is_stmt 0 view .LVU104
 310 007a FFF7FEFF 		bl	HAL_GPIO_Init
 311              	.LVL6:
 449:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 312              		.loc 1 449 3 is_stmt 1 view .LVU105
 450:Src/main.cpp  ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 313              		.loc 1 450 3 view .LVU106
 449:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 314              		.loc 1 449 23 is_stmt 0 view .LVU107
 315 007e 0023     		movs	r3, #0
 316 0080 2022     		movs	r2, #32
 452:Src/main.cpp  ****   HAL_GPIO_Init(BTN_STP_GPIO_Port, &GPIO_InitStruct);
 317              		.loc 1 452 16 view .LVU108
 318 0082 12A9     		add	r1, sp, #72
 319 0084 A348     		ldr	r0, .L7+8
 449:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 320              		.loc 1 449 23 view .LVU109
 321 0086 CDE91223 		strd	r2, [sp, #72]
 451:Src/main.cpp  ****   HAL_GPIO_Init(BTN_STP_GPIO_Port, &GPIO_InitStruct);
 322              		.loc 1 451 3 is_stmt 1 view .LVU110
 451:Src/main.cpp  ****   HAL_GPIO_Init(BTN_STP_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 451 24 is_stmt 0 view .LVU111
 324 008a CDF85080 		str	r8, [sp, #80]
 325              		.loc 1 452 3 is_stmt 1 view .LVU112
 326              		.loc 1 452 16 is_stmt 0 view .LVU113
 327 008e FFF7FEFF 		bl	HAL_GPIO_Init
 328              	.LVL7:
 329              	.LBE100:
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 16


 330              	.LBE105:
 102:Src/main.cpp  ****   MX_SPI2_Init();
 331              		.loc 1 102 3 is_stmt 1 view .LVU114
 332              	.LBB106:
 333              	.LBI102:
 380:Src/main.cpp  **** {
 334              		.loc 1 380 13 view .LVU115
 335              	.LBB104:
 387:Src/main.cpp  ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 336              		.loc 1 387 3 view .LVU116
 387:Src/main.cpp  ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 337              		.loc 1 387 27 is_stmt 0 view .LVU117
 338 0092 2146     		mov	r1, r4
 339 0094 13A8     		add	r0, sp, #76
 340 0096 2022     		movs	r2, #32
 341 0098 FFF7FEFF 		bl	memset
 342              	.LVL8:
 388:Src/main.cpp  **** 
 343              		.loc 1 388 3 is_stmt 1 view .LVU118
 396:Src/main.cpp  ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 344              		.loc 1 396 21 is_stmt 0 view .LVU119
 345 009c 4FF47A73 		mov	r3, #1000
 412:Src/main.cpp  ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 346              		.loc 1 412 37 view .LVU120
 347 00a0 0026     		movs	r6, #0
 348 00a2 0027     		movs	r7, #0
 393:Src/main.cpp  ****   htim4.Init.Prescaler = 0;
 349              		.loc 1 393 18 view .LVU121
 350 00a4 DFF894A2 		ldr	r10, .L7+48
 351 00a8 9B4A     		ldr	r2, .L7+12
 408:Src/main.cpp  ****   {
 352              		.loc 1 408 27 view .LVU122
 353 00aa 12A9     		add	r1, sp, #72
 354 00ac 5046     		mov	r0, r10
 396:Src/main.cpp  ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 355              		.loc 1 396 21 view .LVU123
 356 00ae CAF80C30 		str	r3, [r10, #12]
 393:Src/main.cpp  ****   htim4.Init.Prescaler = 0;
 357              		.loc 1 393 18 view .LVU124
 358 00b2 CAF80020 		str	r2, [r10]
 401:Src/main.cpp  ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 359              		.loc 1 401 24 view .LVU125
 360 00b6 CDF85080 		str	r8, [sp, #80]
 405:Src/main.cpp  ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 361              		.loc 1 405 24 view .LVU126
 362 00ba CDF86080 		str	r8, [sp, #96]
 395:Src/main.cpp  ****   htim4.Init.Period = 1000;
 363              		.loc 1 395 26 view .LVU127
 364 00be CAE90144 		strd	r4, r4, [r10, #4]
 397:Src/main.cpp  ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 365              		.loc 1 397 28 view .LVU128
 366 00c2 CAF81040 		str	r4, [r10, #16]
 398:Src/main.cpp  ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 367              		.loc 1 398 32 view .LVU129
 368 00c6 CAF81840 		str	r4, [r10, #24]
 399:Src/main.cpp  ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 369              		.loc 1 399 23 view .LVU130
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 17


 370 00ca CDF84890 		str	r9, [sp, #72]
 388:Src/main.cpp  **** 
 371              		.loc 1 388 27 view .LVU131
 372 00ce 0C94     		str	r4, [sp, #48]
 373 00d0 0D94     		str	r4, [sp, #52]
 393:Src/main.cpp  ****   htim4.Init.Prescaler = 0;
 374              		.loc 1 393 3 is_stmt 1 view .LVU132
 394:Src/main.cpp  ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 375              		.loc 1 394 3 view .LVU133
 395:Src/main.cpp  ****   htim4.Init.Period = 1000;
 376              		.loc 1 395 3 view .LVU134
 396:Src/main.cpp  ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 377              		.loc 1 396 3 view .LVU135
 397:Src/main.cpp  ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 378              		.loc 1 397 3 view .LVU136
 398:Src/main.cpp  ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 379              		.loc 1 398 3 view .LVU137
 399:Src/main.cpp  ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 380              		.loc 1 399 3 view .LVU138
 400:Src/main.cpp  ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 381              		.loc 1 400 3 view .LVU139
 401:Src/main.cpp  ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 382              		.loc 1 401 3 view .LVU140
 402:Src/main.cpp  ****   sConfig.IC1Filter = 0;
 383              		.loc 1 402 3 view .LVU141
 403:Src/main.cpp  ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 384              		.loc 1 403 3 view .LVU142
 404:Src/main.cpp  ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 385              		.loc 1 404 3 view .LVU143
 405:Src/main.cpp  ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 386              		.loc 1 405 3 view .LVU144
 406:Src/main.cpp  ****   sConfig.IC2Filter = 0;
 387              		.loc 1 406 3 view .LVU145
 407:Src/main.cpp  ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 388              		.loc 1 407 3 view .LVU146
 408:Src/main.cpp  ****   {
 389              		.loc 1 408 3 view .LVU147
 408:Src/main.cpp  ****   {
 390              		.loc 1 408 27 is_stmt 0 view .LVU148
 391 00d2 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 392              	.LVL9:
 412:Src/main.cpp  ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 393              		.loc 1 412 3 is_stmt 1 view .LVU149
 413:Src/main.cpp  ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 394              		.loc 1 413 3 view .LVU150
 414:Src/main.cpp  ****   {
 395              		.loc 1 414 44 is_stmt 0 view .LVU151
 396 00d6 0CA9     		add	r1, sp, #48
 397 00d8 5046     		mov	r0, r10
 412:Src/main.cpp  ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 398              		.loc 1 412 37 view .LVU152
 399 00da CDE90C67 		strd	r6, [sp, #48]
 414:Src/main.cpp  ****   {
 400              		.loc 1 414 3 is_stmt 1 view .LVU153
 414:Src/main.cpp  ****   {
 401              		.loc 1 414 44 is_stmt 0 view .LVU154
 402 00de FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 18


 403              	.LVL10:
 404              	.LBE104:
 405              	.LBE106:
 103:Src/main.cpp  ****   MX_I2C2_Init();
 406              		.loc 1 103 3 is_stmt 1 view .LVU155
 407              	.LBB107:
 408              	.LBI107:
 275:Src/main.cpp  **** {
 409              		.loc 1 275 13 view .LVU156
 410              	.LBB108:
 282:Src/main.cpp  **** 
 411              		.loc 1 282 3 view .LVU157
 282:Src/main.cpp  **** 
 412              		.loc 1 282 22 is_stmt 0 view .LVU158
 413 00e2 2146     		mov	r1, r4
 414 00e4 12A8     		add	r0, sp, #72
 415 00e6 2822     		movs	r2, #40
 416 00e8 FFF7FEFF 		bl	memset
 417              	.LVL11:
 284:Src/main.cpp  **** 
 418              		.loc 1 284 3 is_stmt 1 view .LVU159
 295:Src/main.cpp  ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 419              		.loc 1 295 24 is_stmt 0 view .LVU160
 420 00ec 4FF0090C 		mov	ip, #9
 284:Src/main.cpp  **** 
 421              		.loc 1 284 23 view .LVU161
 422 00f0 CDE90F44 		strd	r4, r4, [sp, #60]
 287:Src/main.cpp  **** 
 423              		.loc 1 287 3 is_stmt 1 view .LVU162
 424              	.LVL12:
 425              	.LBB109:
 426              	.LBI109:
 427              		.file 2 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @file    stm32f1xx_ll_bus.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****     [..]
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****     [..]
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @attention
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 19


  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #ifndef __STM32F1xx_LL_BUS_H
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define __STM32F1xx_LL_BUS_H
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #include "stm32f1xx.h"
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @addtogroup STM32F1xx_LL_Driver
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(RCC_AHBRSTR_OTGFSRST) || defined(RCC_AHBRSTR_ETHMACRST)
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define RCC_AHBRSTR_SUPPORT
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /* RCC_AHBRSTR_OTGFSRST || RCC_AHBRSTR_ETHMACRST */
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(DMA2)
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHBENR_DMA2EN
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 20


  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*DMA2*/
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(ETH)
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMAC         RCC_AHBENR_ETHMACEN
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMACRX       RCC_AHBENR_ETHMACRXEN
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMACTX       RCC_AHBENR_ETHMACTXEN
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*ETH*/
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLITFEN
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(FSMC_Bank1)
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FSMC           RCC_AHBENR_FSMCEN
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*FSMC_Bank1*/
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(USB_OTG_FS)
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_OTGFS          RCC_AHBENR_OTGFSEN
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*USB_OTG_FS*/
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(SDIO)
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SDIO           RCC_AHBENR_SDIOEN
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*SDIO*/
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBENR_SRAMEN
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_BKP            RCC_APB1ENR_BKPEN
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(CAN1)
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN1           RCC_APB1ENR_CAN1EN
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*CAN1*/
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(CAN2)
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN2           RCC_APB1ENR_CAN2EN
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*CAN2*/
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(CEC)
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APB1ENR_CECEN
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*CEC*/
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(DAC)
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*DAC*/
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(I2C2)
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*I2C2*/
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(SPI2)
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*SPI2*/
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(SPI3)
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI3           RCC_APB1ENR_SPI3EN
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*SPI3*/
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM12)
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM12          RCC_APB1ENR_TIM12EN
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM12*/
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM13)
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM13          RCC_APB1ENR_TIM13EN
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM13*/
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM14)
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM14          RCC_APB1ENR_TIM14EN
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 21


 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM14*/
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM4)
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM4           RCC_APB1ENR_TIM4EN
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM4*/
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM5)
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM5           RCC_APB1ENR_TIM5EN
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM5*/
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM6)
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM6*/
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM7)
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM7*/
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(UART4)
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART4          RCC_APB1ENR_UART4EN
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*UART4*/
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(UART5)
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART5          RCC_APB1ENR_UART5EN
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*UART5*/
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(USART3)
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*USART3*/
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(USB)
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*USB*/
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1           RCC_APB2ENR_ADC1EN
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(ADC2)
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC2           RCC_APB2ENR_ADC2EN
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*ADC2*/
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(ADC3)
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC3           RCC_APB2ENR_ADC3EN
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*ADC3*/
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_AFIO           RCC_APB2ENR_AFIOEN
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOA          RCC_APB2ENR_IOPAEN
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOB          RCC_APB2ENR_IOPBEN
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOC          RCC_APB2ENR_IOPCEN
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOD          RCC_APB2ENR_IOPDEN
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(GPIOE)
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOE          RCC_APB2ENR_IOPEEN
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*GPIOE*/
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(GPIOF)
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOF          RCC_APB2ENR_IOPFEN
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*GPIOF*/
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(GPIOG)
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOG          RCC_APB2ENR_IOPGEN
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 22


 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*GPIOG*/
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM10)
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM10          RCC_APB2ENR_TIM10EN
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM10*/
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM11)
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM11          RCC_APB2ENR_TIM11EN
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM11*/
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM15)
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM15*/
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM16)
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM16*/
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM17)
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM17*/
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM8)
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM8           RCC_APB2ENR_TIM8EN
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM8*/
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM9)
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM9           RCC_APB2ENR_TIM9EN
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM9*/
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_EnableClock\n
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACEN      LL_AHB1_GRP1_EnableClock\n
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACRXEN    LL_AHB1_GRP1_EnableClock\n
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACTXEN    LL_AHB1_GRP1_EnableClock\n
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_EnableClock\n
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FSMCEN        LL_AHB1_GRP1_EnableClock\n
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       OTGFSEN       LL_AHB1_GRP1_EnableClock\n
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SDIOEN        LL_AHB1_GRP1_EnableClock\n
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_EnableClock
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 23


 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SDIO (*)
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACEN      LL_AHB1_GRP1_IsEnabledClock\n
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACRXEN    LL_AHB1_GRP1_IsEnabledClock\n
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACTXEN    LL_AHB1_GRP1_IsEnabledClock\n
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_IsEnabledClock\n
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FSMCEN        LL_AHB1_GRP1_IsEnabledClock\n
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       OTGFSEN       LL_AHB1_GRP1_IsEnabledClock\n
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SDIOEN        LL_AHB1_GRP1_IsEnabledClock\n
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_IsEnabledClock
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SDIO (*)
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   return (READ_BIT(RCC->AHBENR, Periphs) == Periphs);
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 24


 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_DisableClock\n
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACEN      LL_AHB1_GRP1_DisableClock\n
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACRXEN    LL_AHB1_GRP1_DisableClock\n
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACTXEN    LL_AHB1_GRP1_DisableClock\n
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_DisableClock\n
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FSMCEN        LL_AHB1_GRP1_DisableClock\n
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       OTGFSEN       LL_AHB1_GRP1_DisableClock\n
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SDIOEN        LL_AHB1_GRP1_DisableClock\n
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_DisableClock
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SDIO (*)
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(RCC_AHBRSTR_SUPPORT)
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBRSTR      ETHMACRST     LL_AHB1_GRP1_ForceReset\n
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBRSTR      OTGFSRST      LL_AHB1_GRP1_ForceReset
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBRSTR      ETHMACRST     LL_AHB1_GRP1_ReleaseReset\n
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 25


 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBRSTR      OTGFSRST      LL_AHB1_GRP1_ReleaseReset
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /* RCC_AHBRSTR_SUPPORT */
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1ENR      BKPEN         LL_APB1_GRP1_EnableClock\n
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN1EN        LL_APB1_GRP1_EnableClock\n
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN2EN        LL_APB1_GRP1_EnableClock\n
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_EnableClock\n
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_EnableClock\n
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_EnableClock\n
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_EnableClock\n
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_EnableClock\n
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_EnableClock\n
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI3EN        LL_APB1_GRP1_EnableClock\n
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM12EN       LL_APB1_GRP1_EnableClock\n
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM13EN       LL_APB1_GRP1_EnableClock\n
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_EnableClock\n
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM2EN        LL_APB1_GRP1_EnableClock\n
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_EnableClock\n
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM4EN        LL_APB1_GRP1_EnableClock\n
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM5EN        LL_APB1_GRP1_EnableClock\n
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_EnableClock\n
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_EnableClock\n
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART4EN       LL_APB1_GRP1_EnableClock\n
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART5EN       LL_APB1_GRP1_EnableClock\n
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_EnableClock\n
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_EnableClock\n
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_EnableClock\n
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_EnableClock
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 26


 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 428              		.loc 2 447 22 view .LVU163
 429              	.LBB110:
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 430              		.loc 2 449 3 view .LVU164
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 431              		.loc 2 450 3 view .LVU165
 432 00f4 EB69     		ldr	r3, [r5, #28]
 433              	.LBE110:
 434              	.LBE109:
 294:Src/main.cpp  ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 435              		.loc 1 294 23 is_stmt 0 view .LVU166
 436 00f6 894A     		ldr	r2, .L7+16
 437              	.LBB113:
 438              	.LBB111:
 439              		.loc 2 450 3 view .LVU167
 440 00f8 43F48043 		orr	r3, r3, #16384
 441 00fc EB61     		str	r3, [r5, #28]
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 442              		.loc 2 452 3 is_stmt 1 view .LVU168
 443              		.loc 2 452 12 is_stmt 0 view .LVU169
 444 00fe EB69     		ldr	r3, [r5, #28]
 445              	.LBE111:
 446              	.LBE113:
 298:Src/main.cpp  **** 
 447              		.loc 1 298 15 view .LVU170
 448 0100 0CA9     		add	r1, sp, #48
 449              	.LBB114:
 450              	.LBB112:
 451              		.loc 2 452 12 view .LVU171
 452 0102 03F48043 		and	r3, r3, #16384
 453              		.loc 2 452 10 view .LVU172
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 27


 454 0106 0593     		str	r3, [sp, #20]
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 455              		.loc 2 453 3 is_stmt 1 view .LVU173
 456 0108 059B     		ldr	r3, [sp, #20]
 457              	.LVL13:
 458              		.loc 2 453 3 is_stmt 0 view .LVU174
 459              	.LBE112:
 460              	.LBE114:
 289:Src/main.cpp  ****   /**SPI2 GPIO Configuration
 461              		.loc 1 289 3 is_stmt 1 view .LVU175
 462              	.LBB115:
 463              	.LBI115:
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1ENR      BKPEN         LL_APB1_GRP1_IsEnabledClock\n
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN1EN        LL_APB1_GRP1_IsEnabledClock\n
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN2EN        LL_APB1_GRP1_IsEnabledClock\n
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_IsEnabledClock\n
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_IsEnabledClock\n
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI3EN        LL_APB1_GRP1_IsEnabledClock\n
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM12EN       LL_APB1_GRP1_IsEnabledClock\n
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM13EN       LL_APB1_GRP1_IsEnabledClock\n
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_IsEnabledClock\n
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM4EN        LL_APB1_GRP1_IsEnabledClock\n
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM5EN        LL_APB1_GRP1_IsEnabledClock\n
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART4EN       LL_APB1_GRP1_IsEnabledClock\n
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART5EN       LL_APB1_GRP1_IsEnabledClock\n
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_IsEnabledClock\n
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_IsEnabledClock
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 28


 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   return (READ_BIT(RCC->APB1ENR, Periphs) == Periphs);
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1ENR      BKPEN         LL_APB1_GRP1_DisableClock\n
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN1EN        LL_APB1_GRP1_DisableClock\n
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN2EN        LL_APB1_GRP1_DisableClock\n
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_DisableClock\n
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_DisableClock\n
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_DisableClock\n
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_DisableClock\n
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_DisableClock\n
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_DisableClock\n
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI3EN        LL_APB1_GRP1_DisableClock\n
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM12EN       LL_APB1_GRP1_DisableClock\n
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM13EN       LL_APB1_GRP1_DisableClock\n
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_DisableClock\n
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM2EN        LL_APB1_GRP1_DisableClock\n
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_DisableClock\n
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM4EN        LL_APB1_GRP1_DisableClock\n
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM5EN        LL_APB1_GRP1_DisableClock\n
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_DisableClock\n
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_DisableClock\n
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART4EN       LL_APB1_GRP1_DisableClock\n
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART5EN       LL_APB1_GRP1_DisableClock\n
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_DisableClock\n
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_DisableClock\n
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_DisableClock\n
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_DisableClock
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 29


 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1RSTR     BKPRST        LL_APB1_GRP1_ForceReset\n
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CAN1RST       LL_APB1_GRP1_ForceReset\n
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CAN2RST       LL_APB1_GRP1_ForceReset\n
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ForceReset\n
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ForceReset\n
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ForceReset\n
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ForceReset\n
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ForceReset\n
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ForceReset\n
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     SPI3RST       LL_APB1_GRP1_ForceReset\n
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM12RST      LL_APB1_GRP1_ForceReset\n
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM13RST      LL_APB1_GRP1_ForceReset\n
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ForceReset\n
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM2RST       LL_APB1_GRP1_ForceReset\n
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ForceReset\n
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM4RST       LL_APB1_GRP1_ForceReset\n
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM5RST       LL_APB1_GRP1_ForceReset\n
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ForceReset\n
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ForceReset\n
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     UART4RST      LL_APB1_GRP1_ForceReset\n
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     UART5RST      LL_APB1_GRP1_ForceReset\n
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ForceReset\n
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ForceReset\n
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ForceReset\n
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ForceReset
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 30


 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1RSTR     BKPRST        LL_APB1_GRP1_ReleaseReset\n
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CAN1RST       LL_APB1_GRP1_ReleaseReset\n
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CAN2RST       LL_APB1_GRP1_ReleaseReset\n
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ReleaseReset\n
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ReleaseReset\n
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     SPI3RST       LL_APB1_GRP1_ReleaseReset\n
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM12RST      LL_APB1_GRP1_ReleaseReset\n
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM13RST      LL_APB1_GRP1_ReleaseReset\n
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ReleaseReset\n
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM4RST       LL_APB1_GRP1_ReleaseReset\n
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM5RST       LL_APB1_GRP1_ReleaseReset\n
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     UART4RST      LL_APB1_GRP1_ReleaseReset\n
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     UART5RST      LL_APB1_GRP1_ReleaseReset\n
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ReleaseReset\n
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ReleaseReset\n
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ReleaseReset\n
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ReleaseReset
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 31


 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB2ENR      ADC1EN        LL_APB2_GRP1_EnableClock\n
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      ADC2EN        LL_APB2_GRP1_EnableClock\n
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      ADC3EN        LL_APB2_GRP1_EnableClock\n
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      AFIOEN        LL_APB2_GRP1_EnableClock\n
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPAEN        LL_APB2_GRP1_EnableClock\n
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPBEN        LL_APB2_GRP1_EnableClock\n
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPCEN        LL_APB2_GRP1_EnableClock\n
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPDEN        LL_APB2_GRP1_EnableClock\n
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPEEN        LL_APB2_GRP1_EnableClock\n
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPFEN        LL_APB2_GRP1_EnableClock\n
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPGEN        LL_APB2_GRP1_EnableClock\n
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 32


 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM10EN       LL_APB2_GRP1_EnableClock\n
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM11EN       LL_APB2_GRP1_EnableClock\n
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB2_GRP1_EnableClock\n
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB2_GRP1_EnableClock\n
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB2_GRP1_EnableClock\n
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB2_GRP1_EnableClock\n
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM8EN        LL_APB2_GRP1_EnableClock\n
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM9EN        LL_APB2_GRP1_EnableClock\n
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC2 (*)
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC3 (*)
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_AFIO
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOA
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOB
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOC
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOD
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOE (*)
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOF (*)
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOG (*)
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM10 (*)
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM11 (*)
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16 (*)
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17 (*)
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM8 (*)
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM9 (*)
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 464              		.loc 2 763 22 view .LVU176
 465              	.LBB116:
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 466              		.loc 2 765 3 view .LVU177
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 467              		.loc 2 766 3 view .LVU178
 468 010a AB69     		ldr	r3, [r5, #24]
 469              	.LBE116:
 470              	.LBE115:
 298:Src/main.cpp  **** 
 471              		.loc 1 298 15 is_stmt 0 view .LVU179
 472 010c 8148     		ldr	r0, .L7+8
 473              	.LBB120:
 474              	.LBB117:
 475              		.loc 2 766 3 view .LVU180
 476 010e 43F00803 		orr	r3, r3, #8
 477 0112 AB61     		str	r3, [r5, #24]
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 33


 478              		.loc 2 768 3 is_stmt 1 view .LVU181
 479              		.loc 2 768 12 is_stmt 0 view .LVU182
 480 0114 AB69     		ldr	r3, [r5, #24]
 481              	.LBE117:
 482              	.LBE120:
 304:Src/main.cpp  ****   SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 483              		.loc 1 304 36 view .LVU183
 484 0116 4FF00008 		mov	r8, #0
 485              	.LBB121:
 486              	.LBB118:
 487              		.loc 2 768 12 view .LVU184
 488 011a 03F00803 		and	r3, r3, #8
 489              		.loc 2 768 10 view .LVU185
 490 011e 0693     		str	r3, [sp, #24]
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 491              		.loc 2 769 3 is_stmt 1 view .LVU186
 492              	.LBE118:
 493              	.LBE121:
 294:Src/main.cpp  ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 494              		.loc 1 294 23 is_stmt 0 view .LVU187
 495 0120 CDE90C2C 		strd	r2, ip, [sp, #48]
 296:Src/main.cpp  ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 496              		.loc 1 296 25 view .LVU188
 497 0124 CDF83890 		str	r9, [sp, #56]
 498              	.LBB122:
 499              	.LBB119:
 500              		.loc 2 769 3 view .LVU189
 501 0128 069B     		ldr	r3, [sp, #24]
 502              	.LVL14:
 503              		.loc 2 769 3 view .LVU190
 504              	.LBE119:
 505              	.LBE122:
 294:Src/main.cpp  ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 506              		.loc 1 294 3 is_stmt 1 view .LVU191
 295:Src/main.cpp  ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 507              		.loc 1 295 3 view .LVU192
 296:Src/main.cpp  ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 508              		.loc 1 296 3 view .LVU193
 297:Src/main.cpp  ****   LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 509              		.loc 1 297 3 view .LVU194
 298:Src/main.cpp  **** 
 510              		.loc 1 298 3 view .LVU195
 304:Src/main.cpp  ****   SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 511              		.loc 1 304 36 is_stmt 0 view .LVU196
 512 012a 4FF48279 		mov	r9, #260
 298:Src/main.cpp  **** 
 513              		.loc 1 298 15 view .LVU197
 514 012e FFF7FEFF 		bl	LL_GPIO_Init
 515              	.LVL15:
 304:Src/main.cpp  ****   SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 516              		.loc 1 304 3 is_stmt 1 view .LVU198
 305:Src/main.cpp  ****   SPI_InitStruct.DataWidth = LL_SPI_DATAWIDTH_8BIT;
 517              		.loc 1 305 3 view .LVU199
 306:Src/main.cpp  ****   SPI_InitStruct.ClockPolarity = LL_SPI_POLARITY_LOW;
 518              		.loc 1 306 3 view .LVU200
 307:Src/main.cpp  ****   SPI_InitStruct.ClockPhase = LL_SPI_PHASE_1EDGE;
 519              		.loc 1 307 3 view .LVU201
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 34


 308:Src/main.cpp  ****   SPI_InitStruct.NSS = LL_SPI_NSS_SOFT;
 520              		.loc 1 308 3 view .LVU202
 309:Src/main.cpp  ****   SPI_InitStruct.BaudRate = LL_SPI_BAUDRATEPRESCALER_DIV2;
 521              		.loc 1 309 3 view .LVU203
 310:Src/main.cpp  ****   SPI_InitStruct.BitOrder = LL_SPI_MSB_FIRST;
 522              		.loc 1 310 3 view .LVU204
 311:Src/main.cpp  ****   SPI_InitStruct.CRCCalculation = LL_SPI_CRCCALCULATION_DISABLE;
 523              		.loc 1 311 3 view .LVU205
 312:Src/main.cpp  ****   SPI_InitStruct.CRCPoly = 10;
 524              		.loc 1 312 3 view .LVU206
 313:Src/main.cpp  ****   LL_SPI_Init(SPI2, &SPI_InitStruct);
 525              		.loc 1 313 3 view .LVU207
 304:Src/main.cpp  ****   SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 526              		.loc 1 304 36 is_stmt 0 view .LVU208
 527 0132 4FF0000A 		mov	r10, #0
 528 0136 0022     		movs	r2, #0
 529 0138 4FF40073 		mov	r3, #512
 530 013c 4FF00A0B 		mov	fp, #10
 314:Src/main.cpp  ****   /* USER CODE BEGIN SPI2_Init 2 */
 531              		.loc 1 314 14 view .LVU209
 532 0140 12A9     		add	r1, sp, #72
 533 0142 7748     		ldr	r0, .L7+20
 304:Src/main.cpp  ****   SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 534              		.loc 1 304 36 view .LVU210
 535 0144 CDE91623 		strd	r2, [sp, #88]
 536 0148 CDE91289 		strd	r8, [sp, #72]
 537 014c CDE91467 		strd	r6, [sp, #80]
 538              	.LBE108:
 539              	.LBE107:
 540              	.LBB124:
 541              	.LBB125:
 242:Src/main.cpp  ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 542              		.loc 1 242 24 view .LVU211
 543 0150 4FF00208 		mov	r8, #2
 544              	.LBE125:
 545              	.LBE124:
 546              	.LBB133:
 547              	.LBB123:
 304:Src/main.cpp  ****   SPI_InitStruct.Mode = LL_SPI_MODE_MASTER;
 548              		.loc 1 304 36 view .LVU212
 549 0154 CDE91867 		strd	r6, [sp, #96]
 550 0158 CDE91AAB 		strd	r10, [sp, #104]
 314:Src/main.cpp  ****   /* USER CODE BEGIN SPI2_Init 2 */
 551              		.loc 1 314 3 is_stmt 1 view .LVU213
 314:Src/main.cpp  ****   /* USER CODE BEGIN SPI2_Init 2 */
 552              		.loc 1 314 14 is_stmt 0 view .LVU214
 553 015c FFF7FEFF 		bl	LL_SPI_Init
 554              	.LVL16:
 555              	.LBE123:
 556              	.LBE133:
 104:Src/main.cpp  ****   MX_ADC1_Init();
 557              		.loc 1 104 3 is_stmt 1 view .LVU215
 558              	.LBB134:
 559              	.LBI124:
 231:Src/main.cpp  **** {
 560              		.loc 1 231 13 view .LVU216
 561              	.LBB132:
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 35


 234:Src/main.cpp  **** 
 562              		.loc 1 234 2 view .LVU217
 563              	.LBB126:
 234:Src/main.cpp  **** 
 564              		.loc 1 234 2 view .LVU218
 234:Src/main.cpp  **** 
 565              		.loc 1 234 2 view .LVU219
 566              	.LBE126:
 241:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 567              		.loc 1 241 23 is_stmt 0 view .LVU220
 568 0160 4FF44062 		mov	r2, #3072
 569              	.LBB127:
 234:Src/main.cpp  **** 
 570              		.loc 1 234 2 view .LVU221
 571 0164 EB69     		ldr	r3, [r5, #28]
 572              	.LBE127:
 244:Src/main.cpp  **** 
 573              		.loc 1 244 16 view .LVU222
 574 0166 12A9     		add	r1, sp, #72
 575              	.LBB128:
 234:Src/main.cpp  **** 
 576              		.loc 1 234 2 view .LVU223
 577 0168 43F48003 		orr	r3, r3, #4194304
 578 016c EB61     		str	r3, [r5, #28]
 234:Src/main.cpp  **** 
 579              		.loc 1 234 2 is_stmt 1 view .LVU224
 580 016e EB69     		ldr	r3, [r5, #28]
 581              	.LBE128:
 244:Src/main.cpp  **** 
 582              		.loc 1 244 16 is_stmt 0 view .LVU225
 583 0170 6848     		ldr	r0, .L7+8
 584              	.LBB129:
 234:Src/main.cpp  **** 
 585              		.loc 1 234 2 view .LVU226
 586 0172 03F48003 		and	r3, r3, #4194304
 587 0176 0393     		str	r3, [sp, #12]
 234:Src/main.cpp  **** 
 588              		.loc 1 234 2 is_stmt 1 view .LVU227
 589 0178 039B     		ldr	r3, [sp, #12]
 590              	.LBE129:
 237:Src/main.cpp  **** 
 591              		.loc 1 237 2 view .LVU228
 592              	.LBB130:
 237:Src/main.cpp  **** 
 593              		.loc 1 237 2 view .LVU229
 237:Src/main.cpp  **** 
 594              		.loc 1 237 2 view .LVU230
 595 017a 6B69     		ldr	r3, [r5, #20]
 596 017c 43F00103 		orr	r3, r3, #1
 597 0180 6B61     		str	r3, [r5, #20]
 237:Src/main.cpp  **** 
 598              		.loc 1 237 2 view .LVU231
 599 0182 6B69     		ldr	r3, [r5, #20]
 600              	.LBE130:
 242:Src/main.cpp  ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 601              		.loc 1 242 24 is_stmt 0 view .LVU232
 602 0184 CDE91228 		strd	r2, r8, [sp, #72]
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 36


 603              	.LBB131:
 237:Src/main.cpp  **** 
 604              		.loc 1 237 2 view .LVU233
 605 0188 03F00103 		and	r3, r3, #1
 606 018c 0493     		str	r3, [sp, #16]
 237:Src/main.cpp  **** 
 607              		.loc 1 237 2 is_stmt 1 view .LVU234
 608 018e 049B     		ldr	r3, [sp, #16]
 609              	.LBE131:
 240:Src/main.cpp  ****   GPIO_InitStruct.Pin = I2C2_SCL_Pin|I2C2_SDA_Pin;
 610              		.loc 1 240 3 view .LVU235
 241:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 611              		.loc 1 241 3 view .LVU236
 243:Src/main.cpp  ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 612              		.loc 1 243 3 view .LVU237
 240:Src/main.cpp  ****   GPIO_InitStruct.Pin = I2C2_SCL_Pin|I2C2_SDA_Pin;
 613              		.loc 1 240 20 is_stmt 0 view .LVU238
 614 0190 1494     		str	r4, [sp, #80]
 243:Src/main.cpp  ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 615              		.loc 1 243 25 view .LVU239
 616 0192 CDF85480 		str	r8, [sp, #84]
 244:Src/main.cpp  **** 
 617              		.loc 1 244 3 is_stmt 1 view .LVU240
 244:Src/main.cpp  **** 
 618              		.loc 1 244 16 is_stmt 0 view .LVU241
 619 0196 FFF7FEFF 		bl	HAL_GPIO_Init
 620              	.LVL17:
 251:Src/main.cpp  ****   hi2c2.Init.ClockSpeed = 100000;
 621              		.loc 1 251 3 is_stmt 1 view .LVU242
 255:Src/main.cpp  ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 622              		.loc 1 255 29 is_stmt 0 view .LVU243
 623 019a 4FF48042 		mov	r2, #16384
 251:Src/main.cpp  ****   hi2c2.Init.ClockSpeed = 100000;
 624              		.loc 1 251 18 view .LVU244
 625 019e 614B     		ldr	r3, .L7+24
 626 01a0 DFF89CC1 		ldr	ip, .L7+52
 252:Src/main.cpp  ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 627              		.loc 1 252 25 view .LVU245
 628 01a4 6049     		ldr	r1, .L7+28
 260:Src/main.cpp  ****   {
 629              		.loc 1 260 19 view .LVU246
 630 01a6 1846     		mov	r0, r3
 252:Src/main.cpp  ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 631              		.loc 1 252 25 view .LVU247
 632 01a8 C3E900C1 		strd	ip, r1, [r3]
 253:Src/main.cpp  ****   hi2c2.Init.OwnAddress1 = 0;
 633              		.loc 1 253 3 is_stmt 1 view .LVU248
 254:Src/main.cpp  ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 634              		.loc 1 254 3 view .LVU249
 255:Src/main.cpp  ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 635              		.loc 1 255 3 view .LVU250
 254:Src/main.cpp  ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 636              		.loc 1 254 26 is_stmt 0 view .LVU251
 637 01ac C3E90244 		strd	r4, r4, [r3, #8]
 257:Src/main.cpp  ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 638              		.loc 1 257 26 view .LVU252
 639 01b0 C3E90544 		strd	r4, r4, [r3, #20]
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 37


 259:Src/main.cpp  ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 640              		.loc 1 259 28 view .LVU253
 641 01b4 C3E90744 		strd	r4, r4, [r3, #28]
 255:Src/main.cpp  ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 642              		.loc 1 255 29 view .LVU254
 643 01b8 1A61     		str	r2, [r3, #16]
 256:Src/main.cpp  ****   hi2c2.Init.OwnAddress2 = 0;
 644              		.loc 1 256 3 is_stmt 1 view .LVU255
 257:Src/main.cpp  ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 645              		.loc 1 257 3 view .LVU256
 258:Src/main.cpp  ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 646              		.loc 1 258 3 view .LVU257
 259:Src/main.cpp  ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 647              		.loc 1 259 3 view .LVU258
 260:Src/main.cpp  ****   {
 648              		.loc 1 260 3 view .LVU259
 260:Src/main.cpp  ****   {
 649              		.loc 1 260 19 is_stmt 0 view .LVU260
 650 01ba FFF7FEFF 		bl	HAL_I2C_Init
 651              	.LVL18:
 652              	.LBE132:
 653              	.LBE134:
 105:Src/main.cpp  ****   MX_TIM3_Init();
 654              		.loc 1 105 3 is_stmt 1 view .LVU261
 655              	.LBB135:
 656              	.LBI135:
 176:Src/main.cpp  **** {
 657              		.loc 1 176 13 view .LVU262
 658              	.LBB136:
 183:Src/main.cpp  ****   LL_ADC_CommonInitTypeDef ADC_CommonInitStruct = {0};
 659              		.loc 1 183 3 view .LVU263
 197:Src/main.cpp  ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 660              		.loc 1 197 23 is_stmt 0 view .LVU264
 661 01be 41F61802 		movw	r2, #6168
 185:Src/main.cpp  **** 
 662              		.loc 1 185 26 view .LVU265
 663 01c2 CDE90C44 		strd	r4, r4, [sp, #48]
 664 01c6 CDE90E44 		strd	r4, r4, [sp, #56]
 187:Src/main.cpp  **** 
 665              		.loc 1 187 23 view .LVU266
 666 01ca CDE91344 		strd	r4, r4, [sp, #76]
 667 01ce CDE91544 		strd	r4, r4, [sp, #84]
 183:Src/main.cpp  ****   LL_ADC_CommonInitTypeDef ADC_CommonInitStruct = {0};
 668              		.loc 1 183 22 view .LVU267
 669 01d2 0A94     		str	r4, [sp, #40]
 184:Src/main.cpp  ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 670              		.loc 1 184 28 view .LVU268
 671 01d4 0094     		str	r4, [sp]
 185:Src/main.cpp  **** 
 672              		.loc 1 185 26 view .LVU269
 673 01d6 1094     		str	r4, [sp, #64]
 183:Src/main.cpp  ****   LL_ADC_CommonInitTypeDef ADC_CommonInitStruct = {0};
 674              		.loc 1 183 22 view .LVU270
 675 01d8 0B94     		str	r4, [sp, #44]
 184:Src/main.cpp  ****   LL_ADC_REG_InitTypeDef ADC_REG_InitStruct = {0};
 676              		.loc 1 184 3 is_stmt 1 view .LVU271
 185:Src/main.cpp  **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 38


 677              		.loc 1 185 3 view .LVU272
 187:Src/main.cpp  **** 
 678              		.loc 1 187 3 view .LVU273
 190:Src/main.cpp  ****   
 679              		.loc 1 190 3 view .LVU274
 680              	.LVL19:
 681              	.LBB137:
 682              	.LBI137:
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 683              		.loc 2 763 22 view .LVU275
 684              	.LBB138:
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 685              		.loc 2 765 3 view .LVU276
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 686              		.loc 2 766 3 view .LVU277
 687 01da AB69     		ldr	r3, [r5, #24]
 688              	.LBE138:
 689              	.LBE137:
 199:Src/main.cpp  **** 
 690              		.loc 1 199 15 is_stmt 0 view .LVU278
 691 01dc 12A9     		add	r1, sp, #72
 692              	.LBB141:
 693              	.LBB139:
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 694              		.loc 2 766 3 view .LVU279
 695 01de 43F40073 		orr	r3, r3, #512
 696 01e2 AB61     		str	r3, [r5, #24]
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 697              		.loc 2 768 3 is_stmt 1 view .LVU280
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 698              		.loc 2 768 12 is_stmt 0 view .LVU281
 699 01e4 AB69     		ldr	r3, [r5, #24]
 700              	.LBE139:
 701              	.LBE141:
 199:Src/main.cpp  **** 
 702              		.loc 1 199 15 view .LVU282
 703 01e6 4A48     		ldr	r0, .L7+4
 704              	.LBB142:
 705              	.LBB140:
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 706              		.loc 2 768 12 view .LVU283
 707 01e8 03F40073 		and	r3, r3, #512
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 708              		.loc 2 768 10 view .LVU284
 709 01ec 0193     		str	r3, [sp, #4]
 710              		.loc 2 769 3 is_stmt 1 view .LVU285
 711 01ee 019B     		ldr	r3, [sp, #4]
 712              	.LVL20:
 713              		.loc 2 769 3 is_stmt 0 view .LVU286
 714              	.LBE140:
 715              	.LBE142:
 192:Src/main.cpp  ****   /**ADC1 GPIO Configuration  
 716              		.loc 1 192 3 is_stmt 1 view .LVU287
 717              	.LBB143:
 718              	.LBI143:
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 719              		.loc 2 763 22 view .LVU288
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 39


 720              	.LBB144:
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 721              		.loc 2 765 3 view .LVU289
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 722              		.loc 2 766 3 view .LVU290
 723 01f0 AB69     		ldr	r3, [r5, #24]
 724 01f2 43F00403 		orr	r3, r3, #4
 725 01f6 AB61     		str	r3, [r5, #24]
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 726              		.loc 2 768 3 view .LVU291
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 727              		.loc 2 768 12 is_stmt 0 view .LVU292
 728 01f8 AB69     		ldr	r3, [r5, #24]
 729              	.LBE144:
 730              	.LBE143:
 197:Src/main.cpp  ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 731              		.loc 1 197 23 view .LVU293
 732 01fa 1292     		str	r2, [sp, #72]
 733              	.LBB146:
 734              	.LBB145:
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 735              		.loc 2 768 12 view .LVU294
 736 01fc 03F00403 		and	r3, r3, #4
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 737              		.loc 2 768 10 view .LVU295
 738 0200 0293     		str	r3, [sp, #8]
 739              		.loc 2 769 3 is_stmt 1 view .LVU296
 740 0202 029B     		ldr	r3, [sp, #8]
 741              	.LVL21:
 742              		.loc 2 769 3 is_stmt 0 view .LVU297
 743              	.LBE145:
 744              	.LBE146:
 197:Src/main.cpp  ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 745              		.loc 1 197 3 is_stmt 1 view .LVU298
 198:Src/main.cpp  ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 746              		.loc 1 198 3 view .LVU299
 199:Src/main.cpp  **** 
 747              		.loc 1 199 3 view .LVU300
 199:Src/main.cpp  **** 
 748              		.loc 1 199 15 is_stmt 0 view .LVU301
 749 0204 FFF7FEFF 		bl	LL_GPIO_Init
 750              	.LVL22:
 206:Src/main.cpp  ****   ADC_InitStruct.SequencersScanMode = LL_ADC_SEQ_SCAN_DISABLE;
 751              		.loc 1 206 3 is_stmt 1 view .LVU302
 207:Src/main.cpp  ****   LL_ADC_Init(ADC1, &ADC_InitStruct);
 752              		.loc 1 207 3 view .LVU303
 208:Src/main.cpp  ****   ADC_CommonInitStruct.Multimode = LL_ADC_MULTI_INDEPENDENT;
 753              		.loc 1 208 14 is_stmt 0 view .LVU304
 754 0208 0AA9     		add	r1, sp, #40
 755 020a 4848     		ldr	r0, .L7+32
 206:Src/main.cpp  ****   ADC_InitStruct.SequencersScanMode = LL_ADC_SEQ_SCAN_DISABLE;
 756              		.loc 1 206 32 view .LVU305
 757 020c CDE90A67 		strd	r6, [sp, #40]
 208:Src/main.cpp  ****   ADC_CommonInitStruct.Multimode = LL_ADC_MULTI_INDEPENDENT;
 758              		.loc 1 208 3 is_stmt 1 view .LVU306
 208:Src/main.cpp  ****   ADC_CommonInitStruct.Multimode = LL_ADC_MULTI_INDEPENDENT;
 759              		.loc 1 208 14 is_stmt 0 view .LVU307
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 40


 760 0210 FFF7FEFF 		bl	LL_ADC_Init
 761              	.LVL23:
 209:Src/main.cpp  ****   LL_ADC_CommonInit(__LL_ADC_COMMON_INSTANCE(ADC1), &ADC_CommonInitStruct);
 762              		.loc 1 209 3 is_stmt 1 view .LVU308
 210:Src/main.cpp  ****   ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_SOFTWARE;
 763              		.loc 1 210 20 is_stmt 0 view .LVU309
 764 0214 6946     		mov	r1, sp
 765 0216 4548     		ldr	r0, .L7+32
 209:Src/main.cpp  ****   LL_ADC_CommonInit(__LL_ADC_COMMON_INSTANCE(ADC1), &ADC_CommonInitStruct);
 766              		.loc 1 209 34 view .LVU310
 767 0218 0094     		str	r4, [sp]
 210:Src/main.cpp  ****   ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_SOFTWARE;
 768              		.loc 1 210 3 is_stmt 1 view .LVU311
 210:Src/main.cpp  ****   ADC_REG_InitStruct.TriggerSource = LL_ADC_REG_TRIG_SOFTWARE;
 769              		.loc 1 210 20 is_stmt 0 view .LVU312
 770 021a FFF7FEFF 		bl	LL_ADC_CommonInit
 771              	.LVL24:
 211:Src/main.cpp  ****   ADC_REG_InitStruct.SequencerLength = LL_ADC_REG_SEQ_SCAN_DISABLE;
 772              		.loc 1 211 3 is_stmt 1 view .LVU313
 212:Src/main.cpp  ****   ADC_REG_InitStruct.SequencerDiscont = LL_ADC_REG_SEQ_DISCONT_DISABLE;
 773              		.loc 1 212 3 view .LVU314
 213:Src/main.cpp  ****   ADC_REG_InitStruct.ContinuousMode = LL_ADC_REG_CONV_SINGLE;
 774              		.loc 1 213 3 view .LVU315
 214:Src/main.cpp  ****   ADC_REG_InitStruct.DMATransfer = LL_ADC_REG_DMA_TRANSFER_NONE;
 775              		.loc 1 214 3 view .LVU316
 211:Src/main.cpp  ****   ADC_REG_InitStruct.SequencerLength = LL_ADC_REG_SEQ_SCAN_DISABLE;
 776              		.loc 1 211 36 is_stmt 0 view .LVU317
 777 021e 4FF46022 		mov	r2, #917504
 778 0222 0023     		movs	r3, #0
 216:Src/main.cpp  ****   /** Configure Regular Channel 
 779              		.loc 1 216 18 view .LVU318
 780 0224 0CA9     		add	r1, sp, #48
 781 0226 4148     		ldr	r0, .L7+32
 211:Src/main.cpp  ****   ADC_REG_InitStruct.SequencerLength = LL_ADC_REG_SEQ_SCAN_DISABLE;
 782              		.loc 1 211 36 view .LVU319
 783 0228 CDE90C23 		strd	r2, [sp, #48]
 784 022c CDE90E67 		strd	r6, [sp, #56]
 215:Src/main.cpp  ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 785              		.loc 1 215 3 is_stmt 1 view .LVU320
 215:Src/main.cpp  ****   LL_ADC_REG_Init(ADC1, &ADC_REG_InitStruct);
 786              		.loc 1 215 34 is_stmt 0 view .LVU321
 787 0230 1094     		str	r4, [sp, #64]
 216:Src/main.cpp  ****   /** Configure Regular Channel 
 788              		.loc 1 216 3 is_stmt 1 view .LVU322
 216:Src/main.cpp  ****   /** Configure Regular Channel 
 789              		.loc 1 216 18 is_stmt 0 view .LVU323
 790 0232 FFF7FEFF 		bl	LL_ADC_REG_Init
 791              	.LVL25:
 219:Src/main.cpp  ****   LL_ADC_SetChannelSamplingTime(ADC1, LL_ADC_CHANNEL_3, LL_ADC_SAMPLINGTIME_1CYCLE_5);
 792              		.loc 1 219 3 is_stmt 1 view .LVU324
 793              	.LBB147:
 794              	.LBI147:
 795              		.file 3 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @file    stm32f1xx_ll_adc.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @author  MCD Application Team
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 41


   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ******************************************************************************
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #ifndef __STM32F1xx_LL_ADC_H
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __STM32F1xx_LL_ADC_H
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #ifdef __cplusplus
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** extern "C" {
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #include "stm32f1xx.h"
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @addtogroup STM32F1xx_LL_Driver
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - sequencer register offset                                                */
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 0x00000000U
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 0x00000100U
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 0x00000200U
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 0x00000300U
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET | ADC_SQR3_REGO
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 42


  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0U) /* Value equivalent to POSITION_VAL(ADC_SQR3_SQ1) 
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 5U) /* Value equivalent to POSITION_VAL(ADC_SQR3_SQ2) 
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (10U) /* Value equivalent to POSITION_VAL(ADC_SQR3_SQ3) 
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (15U) /* Value equivalent to POSITION_VAL(ADC_SQR3_SQ4) 
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (20U) /* Value equivalent to POSITION_VAL(ADC_SQR3_SQ5) 
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (25U) /* Value equivalent to POSITION_VAL(ADC_SQR3_SQ6) 
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  ( 0U) /* Value equivalent to POSITION_VAL(ADC_SQR2_SQ7) 
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  ( 5U) /* Value equivalent to POSITION_VAL(ADC_SQR2_SQ8) 
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (10U) /* Value equivalent to POSITION_VAL(ADC_SQR2_SQ9) 
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS (15U) /* Value equivalent to POSITION_VAL(ADC_SQR2_SQ10)
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS (20U) /* Value equivalent to POSITION_VAL(ADC_SQR2_SQ11)
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (25U) /* Value equivalent to POSITION_VAL(ADC_SQR2_SQ12)
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS ( 0U) /* Value equivalent to POSITION_VAL(ADC_SQR1_SQ13)
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS ( 5U) /* Value equivalent to POSITION_VAL(ADC_SQR1_SQ14)
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS (10U) /* Value equivalent to POSITION_VAL(ADC_SQR1_SQ15)
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS (15U) /* Value equivalent to POSITION_VAL(ADC_SQR1_SQ16)
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - data register offset                                                     */
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - offset register offset                                                   */
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 0x00000000U
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 0x00000100U
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 0x00000200U
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 0x00000300U
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal register offset for ADC group injected offset configuration */
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JOFR1_REGOFFSET                0x00000000U
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JOFR2_REGOFFSET                0x00001000U
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JOFR3_REGOFFSET                0x00002000U
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JOFR4_REGOFFSET                0x00003000U
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET | ADC_JDR3_REGO
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_INJ_JOFRX_REGOFFSET_MASK       (ADC_JOFR1_REGOFFSET | ADC_JOFR2_REGOFFSET | ADC_JOFR3_R
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CR1_AWDCH)
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS ( 0U)/* Value equivalent to POSITION_VAL(ADC_CHANNEL_ID
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_INTERNAL_CH
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 0x0000001FU /* Equivalent to shift: (ADC_CHANNEL_NUMBER_
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 43


 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         0x80000000U   /* Marker of internal channel */
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       0x40000000U   /* Marker of internal channel for other AD
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                0x00000000U
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                0x02000000U
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    0x01F00000U
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20U)           /* Value equivalent to POSITION_VAL(ADC_
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* channels literals definition.                                              */
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               0x00000000U
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                      A
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                      A
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                    ADC_CR1_AWDCH_2    
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                    ADC_CR1_AWDCH_2    
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                    ADC_CR1_AWDCH_2 | A
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                    ADC_CR1_AWDCH_2 | A
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                  ADC_CR1_AWDCH_3                      
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                  ADC_CR1_AWDCH_3                      
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                  ADC_CR1_AWDCH_3                   | A
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                  ADC_CR1_AWDCH_3                   | A
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                  ADC_CR1_AWDCH_3 | ADC_CR1_AWDCH_2    
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                  ADC_CR1_AWDCH_3 | ADC_CR1_AWDCH_2    
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                  ADC_CR1_AWDCH_3 | ADC_CR1_AWDCH_2 | A
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                  ADC_CR1_AWDCH_3 | ADC_CR1_AWDCH_2 | A
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CR1_AWDCH_4                                        
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CR1_AWDCH_4                                        
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* channels literals definition.                                              */
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR2_REGOFFSET | (( 0U) << ADC_CHANNEL_SMPx_BITOFF
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR2_REGOFFSET | (( 3U) << ADC_CHANNEL_SMPx_BITOFF
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR2_REGOFFSET | (( 6U) << ADC_CHANNEL_SMPx_BITOFF
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR2_REGOFFSET | (( 9U) << ADC_CHANNEL_SMPx_BITOFF
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR2_REGOFFSET | ((12U) << ADC_CHANNEL_SMPx_BITOFF
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR2_REGOFFSET | ((15U) << ADC_CHANNEL_SMPx_BITOFF
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR2_REGOFFSET | ((18U) << ADC_CHANNEL_SMPx_BITOFF
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR2_REGOFFSET | ((21U) << ADC_CHANNEL_SMPx_BITOFF
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR2_REGOFFSET | ((24U) << ADC_CHANNEL_SMPx_BITOFF
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR2_REGOFFSET | ((27U) << ADC_CHANNEL_SMPx_BITOFF
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR1_REGOFFSET | (( 0U) << ADC_CHANNEL_SMPx_BITOFF
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR1_REGOFFSET | (( 3U) << ADC_CHANNEL_SMPx_BITOFF
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR1_REGOFFSET | (( 6U) << ADC_CHANNEL_SMPx_BITOFF
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR1_REGOFFSET | (( 9U) << ADC_CHANNEL_SMPx_BITOFF
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR1_REGOFFSET | ((12U) << ADC_CHANNEL_SMPx_BITOFF
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR1_REGOFFSET | ((15U) << ADC_CHANNEL_SMPx_BITOFF
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR1_REGOFFSET | ((18U) << ADC_CHANNEL_SMPx_BITOFF
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR1_REGOFFSET | ((21U) << ADC_CHANNEL_SMPx_BITOFF
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 44


 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              0x00000000U
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET)
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CR1_AWDCH | ADC_CR1_JAWDEN | ADC_CR1_AWDEN | ADC_CR
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK)
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_TR1_HIGH_REGOFFSET         0x00000000U
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_TR1_LOW_REGOFFSET          0x00000001U
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_HIGH_REGOFFSET | ADC_AWD_TR1_LOW_REGOFFSET)
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC registers bits positions */
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CR1_DUALMOD_BITOFFSET_POS      (16U) /* Value equivalent to POSITION_VAL(ADC_CR1_DUALMO
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: isolate bits with the
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         selected mask and shift them to the register LSB
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (shift mask on register position bit 0).
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __BITS__ Bits in register 32 bits
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __MASK__ Mask in register 32 bits
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Bits in register 32 bits
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __ADC_MASK_SHIFT(__BITS__, __MASK__)                                   \
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__BITS__) & (__MASK__)) >> POSITION_VAL((__MASK__)))
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         a register from a register basis from which an offset
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is applied.
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Pointer to register address
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****  ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2U))))
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 45


 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and multimode
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sharing the same ADC common instance):
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         disabled.
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** typedef struct
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC state:
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC instance must be disabled.
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         refer to description of each function for setting
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         conditioned to ADC state.
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** typedef struct
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t SequencersScanMode;          /*!< Set ADC scan selection.
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_SCAN_S
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 46


 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (functions with prefix "REG").
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC state:
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC instance must be disabled.
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         refer to description of each function for setting
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         conditioned to ADC state.
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** typedef struct
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              @note On this STM32 serie, external trigger is set wit
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                                    (only trigger polarity available on this STM32 s
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              @note This parameter is discarded if scan mode is disa
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 47


 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (functions with prefix "INJ").
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC state:
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC instance must be disabled.
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         refer to description of each function for setting
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         conditioned to ADC state.
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** typedef struct
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              @note On this STM32 serie, external trigger is set wit
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                                    (only trigger polarity available on this STM32 s
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              @note This parameter is discarded if scan mode is disa
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 48


 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_STRT                   ADC_SR_STRT        /*!< ADC flag ADC group regular conve
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_SR_EOC         /*!< ADC flag ADC group regular end o
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_JSTRT                  ADC_SR_JSTRT       /*!< ADC flag ADC group injected conv
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_SR_JEOC        /*!< ADC flag ADC group injected end 
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_SR_AWD         /*!< ADC flag ADC analog watchdog 1 *
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_SR_EOC         /*!< ADC flag ADC multimode master gr
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_SR_EOC         /*!< ADC flag ADC multimode slave gro
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_SR_JEOC        /*!< ADC flag ADC multimode master gr
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_SR_JEOC        /*!< ADC flag ADC multimode slave gro
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_SR_AWD         /*!< ADC flag ADC multimode master an
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_SR_AWD         /*!< ADC flag ADC multimode slave ana
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_CR1_EOCIE      /*!< ADC interruption ADC group regul
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_CR1_JEOCIE     /*!< ADC interruption ADC group injec
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_CR1_AWDIE      /*!< ADC interruption ADC analog watc
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* DMA transfer.                                                              */
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          0x00000000U   /* ADC group regular conversion data reg
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    0x00000001U   /* ADC group regular conversion data reg
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          0x00000000U            /*!< ADC measurement pathes all d
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 49


 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CR2_TSVREFE)      /*!< ADC measurement path to inte
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CR2_TSVREFE)      /*!< ADC measurement path to inte
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              0x00000000U                         /*!< ADC resolution 
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            0x00000000U            /*!< ADC conversion data alignmen
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CR2_ALIGN)        /*!< ADC conversion data alignmen
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SCAN_SELECTION ADC instance - Scan selection
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SEQ_SCAN_DISABLE            0x00000000U    /*!< ADC conversion is performed in unita
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SEQ_SCAN_ENABLE             (ADC_CR1_SCAN) /*!< ADC conversions are performed in seq
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               0x00000001U   /*!< ADC group regular (available on all S
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              0x00000002U   /*!< ADC group injected (not available on 
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      0x00000003U   /*!< ADC both groups regular and injected 
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP)  /*!< ADC ex
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP)  /*!< ADC ex
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP)  /*!< ADC ex
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP)  /*!< ADC ex
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP)  /*!< ADC ex
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP)  /*!< ADC ex
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP)  /*!< ADC ex
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP)  /*!< ADC ex
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP)  /*!< ADC ex
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP)  /*!< ADC ex
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP) /*!< ADC ex
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP) /*!< ADC ex
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 50


 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP) /*!< ADC ex
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP) /*!< ADC ex
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP) /*!< ADC ex
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP) /*!< ADC ex
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP) /*!< ADC ex
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP) /*!< ADC ex
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC group regular external triggers for ADC instances: ADC1, ADC2, ADC3 (for ADC instances ADCx 
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (ADC_CR2_EXTSEL_2 | ADC_CR2_EXTSEL_1 | ADC_CR2_EXTSEL_0)
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CR2_EXTSEL_1)                                      
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC group regular external triggers for ADC instances: ADC1, ADC2 (for ADC instances ADCx availa
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       0x00000000U                                             
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CR2_EXTSEL_0)                                      
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CR2_EXTSEL_1 | ADC_CR2_EXTSEL_0)                   
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CR2_EXTSEL_2)                                      
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CR2_EXTSEL_2 | ADC_CR2_EXTSEL_0)                   
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CR2_EXTSEL_2 | ADC_CR2_EXTSEL_1)                   
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined (STM32F101xE) || defined (STM32F103xE) || defined (STM32F103xG) || defined (STM32F105xC
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: TIM8_TRGO is available on ADC1 and ADC2 only in high-density and     */
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       XL-density devices.                                                  */
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: To use TIM8_TRGO on ADC1 or ADC2, a remap of trigger must be done    */
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       A remap of trigger must be done at top level (refer to               */
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       AFIO peripheral).                                                    */
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (LL_ADC_REG_TRIG_EXT_EXTI_LINE11)                       
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif /* STM32F101xE || STM32F103xE || STM32F103xG || STM32F105xC || STM32F107xC */
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined (STM32F103xE) || defined (STM32F103xG)
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC group regular external triggers for ADC instances: ADC3 (for ADC instances ADCx available on
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH1       (LL_ADC_REG_TRIG_EXT_TIM1_CH1)                          
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (LL_ADC_REG_TRIG_EXT_TIM1_CH2)                          
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_CH1       (LL_ADC_REG_TRIG_EXT_TIM2_CH2)                          
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO_ADC3 (LL_ADC_REG_TRIG_EXT_TIM3_TRGO)                         
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM5_CH1       (LL_ADC_REG_TRIG_EXT_TIM4_CH4)                          
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM5_CH3       (LL_ADC_REG_TRIG_EXT_EXTI_LINE11)                       
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         ADC_CR2_EXTTRIG                         /*!< ADC group r
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** * @{
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 51


 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             0x00000000U             /*!< ADC conversions are perform
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CR2_CONT)          /*!< ADC conversions are perform
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       0x00000000U              /*!< ADC conversions are not tr
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CR2_DMA)                        /*!< ADC conversion
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        0x00000000U                                             
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     0x00000000U                                             
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                        ADC_CR1_DISCNUM
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                    ADC_CR1_DISCNUM_1                  
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                    ADC_CR1_DISCNUM_1 | ADC_CR1_DISCNUM
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CR1_DISCNUM_2                                      
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CR1_DISCNUM_2                     | ADC_CR1_DISCNUM
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CR1_DISCNUM_2 | ADC_CR1_DISCNUM_1                  
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CR1_DISCNUM_2 | ADC_CR1_DISCNUM_1 | ADC_CR1_DISCNUM
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 52


 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR3_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR3_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR3_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR3_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR3_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR3_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR2_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR2_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR2_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR1_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR1_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR1_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR1_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC group injected external triggers for ADC instances: ADC1, ADC2, ADC3 (for ADC instances ADCx
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (ADC_CR2_JEXTSEL_2 | ADC_CR2_JEXTSEL_1 | ADC_CR2_JEXTSEL
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      0x00000000U                                             
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_CR2_JEXTSEL_0)                                     
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC group injected external triggers for ADC instances: ADC1, ADC2 (for ADC instances ADCx avail
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_CR2_JEXTSEL_1)                                     
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_CR2_JEXTSEL_1 | ADC_CR2_JEXTSEL_0)                 
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_CR2_JEXTSEL_2)                                     
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_CR2_JEXTSEL_2 | ADC_CR2_JEXTSEL_0)                 
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_CR2_JEXTSEL_2 | ADC_CR2_JEXTSEL_1)                 
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined (STM32F101xE) || defined (STM32F103xE) || defined (STM32F103xG) || defined (STM32F105xC
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: TIM8_CH4 is available on ADC1 and ADC2 only in high-density and      */
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       XL-density devices.                                                  */
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: To use TIM8_TRGO on ADC1 or ADC2, a remap of trigger must be done    */
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       A remap of trigger must be done at top level (refer to               */
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       AFIO peripheral).                                                    */
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4        (LL_ADC_INJ_TRIG_EXT_EXTI_LINE15)                      
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif /* STM32F101xE || STM32F103xE || STM32F103xG || STM32F105xC || STM32F107xC */
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined (STM32F103xE) || defined (STM32F103xG)
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC group injected external triggers for ADC instances: ADC3 (for ADC instances ADCx available o
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_CH3        (LL_ADC_INJ_TRIG_EXT_TIM2_TRGO)                        
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH2        (LL_ADC_INJ_TRIG_EXT_TIM2_CH1)                         
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4_ADC3   (LL_ADC_INJ_TRIG_EXT_TIM3_CH4)                         
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM5_TRGO       (LL_ADC_INJ_TRIG_EXT_TIM4_TRGO)                        
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM5_CH4        (LL_ADC_INJ_TRIG_EXT_EXTI_LINE15)                      
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         ADC_CR2_JEXTTRIG                        /*!< ADC group i
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 53


 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** * @{
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** */
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        0x00000000U            /*!< ADC group injected conversio
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CR1_JAUTO)        /*!< ADC group injected conversio
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        0x00000000U                     /*!< ADC group injected 
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     0x00000000U            /*!< ADC group injected sequencer
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CR1_JDISCEN)      /*!< ADC group injected sequencer
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_JOFR1_REGOFFSET | 0x00000001U)
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_JOFR2_REGOFFSET | 0x00000002U)
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_JOFR3_REGOFFSET | 0x00000003U)
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_JOFR4_REGOFFSET | 0x00000004U)
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       0x00000000U                                             
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR2_SMP0_0)                                      
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_13CYCLES_5     (ADC_SMPR2_SMP0_1)                                      
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_28CYCLES_5     (ADC_SMPR2_SMP0_1 | ADC_SMPR2_SMP0_0)                   
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_41CYCLES_5     (ADC_SMPR2_SMP0_2)                                      
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_55CYCLES_5     (ADC_SMPR2_SMP0_2 | ADC_SMPR2_SMP0_0)                   
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_71CYCLES_5     (ADC_SMPR2_SMP0_2 | ADC_SMPR2_SMP0_1)                   
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_239CYCLES_5    (ADC_SMPR2_SMP0_2 | ADC_SMPR2_SMP0_1 | ADC_SMPR2_SMP0_0)
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 54


 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 0x00000000U                                             
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (                                                       
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (                                            ADC_CR1_JAW
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (                                            ADC_CR1_JAW
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 55


 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK)      
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK)      
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_AWD_TR1_HIGH_REGOFFSET) /*!< ADC analog watchdog th
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (ADC_AWD_TR1_LOW_REGOFFSET)  /*!< ADC analog watchdog th
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if !defined(ADC_MULTIMODE_SUPPORT)
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE Multimode - Mode
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT              0x00000000U                                          
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT              0x00000000U                                          
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT          (                    ADC_CR1_DUALMOD_2 | ADC_CR1_DUAL
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL_FAST     (                    ADC_CR1_DUALMOD_2 | ADC_CR1_DUAL
 853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL_SLOW     (ADC_CR1_DUALMOD_3                                   
 854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT          (                    ADC_CR1_DUALMOD_2               
 855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN          (ADC_CR1_DUALMOD_3                                   
 856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM     (                                                    
 857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT     (                                        ADC_CR1_DUAL
 858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTFAST_INJ_SIM (                                        ADC_CR1_DUAL
 859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTSLOW_INJ_SIM (                    ADC_CR1_DUALMOD_2               
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 56


 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
 866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                  ADC_DR_DATA) /*!< In multimode, selec
 869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_DR_ADC2DATA              ) /*!< In multimode, selec
 870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_DR_ADC2DATA | ADC_DR_DATA) /*!< In multimode, selec
 871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
 879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Only ADC IP HW delays are defined in ADC LL driver driver,
 880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         not timeout values.
 881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
 882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         above each literal definition.
 883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
 886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: Only ADC IP HW delays are defined in ADC LL driver driver,           */
 887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       not timeout values.                                                  */
 888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
 889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
 890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
 891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
 892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       STM32 serie:                                                         */
 893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1us                              */
 894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
 895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*         configuration.                                                     */
 897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
 900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* parameter "tSTART").                                                       */
 902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Unit: us                                                                   */
 903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US       (10U)  /*!< Delay for internal voltage reference stab
 904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Delay required between ADC disable and ADC calibration start.              */
 906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: On this STM32 serie, before starting a calibration,                  */
 907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       ADC must be disabled.                                                */
 908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       A minimum number of ADC clock cycles are required                    */
 909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       between ADC disable state and calibration start.                     */
 910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       Refer to literal @ref LL_ADC_DELAY_ENABLE_CALIB_ADC_CYCLES.          */
 911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DELAY_DISABLE_CALIB_ADC_CYCLES  (2U)  /*!< Delay required between ADC disable and AD
 916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 57


 917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Delay required between end of ADC Enable and the start of ADC calibration. */
 918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: On this STM32 serie, a minimum number of ADC clock cycles            */
 919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       are required between the end of ADC enable and the start of ADC      */
 920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       calibration.                                                         */
 921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DELAY_ENABLE_CALIB_ADC_CYCLES  (2U)  /*!< Delay required between end of ADC enable a
 926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
 937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
 938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
 942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Write a value in ADC register
 947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __REG__ Register to be written
 949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
 950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
 951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Read a value in ADC register
 956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __REG__ Register to be read
 958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Register value
 959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
 966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
 971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
 972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Example:
 973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 58


 974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           will return decimal number "4".
 975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
 976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number is returned, either defined with number
 977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
 978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
 995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
 996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
 997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
 998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
 999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
1001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
1005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         from number in decimal format.
1009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Example:
1010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __DECIMAL_NB__: Value between Min_Data=0 and Max_Data=18
1013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 59


1031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.\n
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) For ADC channel read back from ADC register,
1037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9U)                                                                        
1042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     ? (                                                                                            
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((uint32_t) (3U * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_P
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                                            
1046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       :                                                                                            
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       (                                                                                            
1048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((uint32_t) (3U * ((__DECIMAL_NB__) - 10U))) << ADC_CHANNEL_SMPx_BIT
1050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                                            
1051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - ADC internal channel:
1058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         returned from ADC registers,
1067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         because internal and external channels share the same channel
1068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         parameters definitions of driver.
1070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 60


1088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
1093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0U)
1098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         a value defined from parameter definition of
1109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         from ADC registers.
1112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
1135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 61


1145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or a value from functions where a channel number is
1167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         returned from ADC registers,
1168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         because internal and external channels share the same channel
1169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         parameters definitions of driver.
1171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
1177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1)                                                \
1182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     ? (                                                                        \
1183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                         \
1184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)                            \
1185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                        \
1186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       :                                                                        \
1187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       (0U)                                                                     \
1188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Example:
1196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 62


1202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.\n
1222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) For ADC channel read back from ADC register,
1223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ
1233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
1235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ 
1236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
1238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ 
1239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
1241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ 
1242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
1243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
1244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ 
1245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
1247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ 
1248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
1250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ 
1251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
1252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
1253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ 
1254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
1255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
1256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ 
1257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
1258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 63


1259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ 
1260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
1261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
1262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ 
1263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
1264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ
1266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ
1269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
1270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ
1272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
1273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ
1275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
1276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ
1278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
1279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ
1281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
1282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ
1284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
1285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ
1287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
1288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (1)
1289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (1)
1290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ      (1)
1291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (1)
1292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (1)
1293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   (1)
1294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
1296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
1299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CR1_AWDEN | ADC_CR1_AWDSGL)                     
1300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       :                                                                                            
1301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                       
1302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAWDEN | ADC_CR1_AWDSGL)                 
1303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****          :                                                                                         
1304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAWDEN | ADC_CR1_AWDEN | ADC_CR1_AWDSGL) 
1305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         different of 12 bits.
1311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDThresholds().
1312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *            (< ADCx param >,
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 64


1316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *            );
1318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: On this STM32 serie, ADC is fixed to resolution 12 bits.            */
1324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       This macro has been kept anyway for compatibility with other         */
1325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       STM32 families featuring different ADC resolutions.                  */
1326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << (0U))
1328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is 
1332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         different of 12 bits.
1333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *            );
1340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: On this STM32 serie, ADC is fixed to resolution 12 bits.            */
1346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       This macro has been kept anyway for compatibility with other         */
1347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       STM32 families featuring different ADC resolutions.                  */
1348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (__AWD_THRESHOLD_12_BITS__)
1350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
1354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
1355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
1356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is enabled.
1357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
1358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
1359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
1360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
1361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
1362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
1363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
1366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> POSITION_VAL((__ADC_MULTI_MASTER_SLAVE__))) & ADC_DR_DATA)
1367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
1368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 65


1373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On STM32F1, there is no common ADC instance.
1377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         However, ADC instance ADC1 has a role of common ADC instance
1378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         for ADC1 and ADC2:
1379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         this instance is used to manage internal channels
1380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and multimode (these features are managed in ADC common
1381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         instances on some other STM32 devices).
1382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC instance ADC3 (if available on the selected device)
1383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         has no ADC common instance.
1384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval ADC common register instance
1386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
1388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ((((__ADCx__) == ADC1) || ((__ADCx__) == ADC2))                              \
1390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     ? (                                                                        \
1391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (ADC12_COMMON)                                                          \
1392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                        \
1393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       :                                                                        \
1394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       (                                                                        \
1395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (0U)                                                                    \
1396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                        \
1397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
1399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (ADC12_COMMON)
1401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #else
1402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (ADC1_COMMON)
1404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
1405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC common instance are disabled.
1409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC state:
1411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On STM32F1, there is no common ADC instance.
1417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         However, ADC instance ADC1 has a role of common ADC instance
1418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         for ADC1 and ADC2:
1419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         this instance is used to manage internal channels
1420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and multimode (these features are managed in ADC common
1421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         instances on some other STM32 devices).
1422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC instance ADC3 (if available on the selected device)
1423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         has no ADC common instance.
1424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         are disabled.
1428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is enabled.
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 66


1430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
1432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
1434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     ? (                                                                        \
1435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
1436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
1437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                        \
1438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       :                                                                        \
1439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       (                                                                        \
1440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        LL_ADC_IsEnabled(ADC3)                                                  \
1441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                        \
1442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
1444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
1446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
1447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #else
1448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
1451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (refer to reference manual).
1458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (0xFFFU)
1464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be known from
1470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement.
1471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                       (unit: digital value).
1474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                       __ADC_DATA__,\
1480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
1481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 67


1487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (refer to device datasheet).
1491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Calculation formula:
1492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                   (unit: digital value)
1496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                  datasheet typical values.
1503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be known from
1510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement.
1511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12bits
1512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                       On STM32F1, refer to device datasheet parameter "Avg_Slop
1516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                       On STM32F1, refer to device datasheet parameter "V25".
1518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
1520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         This parameter can be one of the following values:
1523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
1532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ((( (                                                                        \
1533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                  * 1000)                                                       \
1535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        -                                                                       \
1536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                  * 1000)                                                       \
1539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                        \
1540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     ) / (__TEMPSENSOR_TYP_AVGSLOPE__)                                          \
1541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****    ) + (__TEMPSENSOR_CALX_TEMP__)                                              \
1542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 68


1544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
1546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
1550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
1556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
1560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Example:
1575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On STM32F1, only ADC instances ADC1 and ADC3 have DMA transfer
1585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         capability, not ADC2 (ADC2 and ADC3 instances not available on
1586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all devices).
1587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On STM32F1, multimode can be used only with ADC1 and ADC2, not ADC3.
1588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Therefore, the corresponding parameter of data transfer
1589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         for multimode can be used only with ADC1 and ADC2.
1590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (ADC2 and ADC3 instances not available on all devices).
1591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
1596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
1598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval ADC register address
1599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 69


1601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register uint32_t data_reg_addr = 0U;
1604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
1605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
1606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   {
1607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     /* Retrieve address of register DR */
1608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     data_reg_addr = (uint32_t)&(ADCx->DR);
1609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   }
1610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
1611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   {
1612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     /* Retrieve address of register of multimode data */
1613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     data_reg_addr = (uint32_t)&(ADC12_COMMON->DR);
1614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   }
1615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
1616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return data_reg_addr;
1617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #else
1619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Retrieve address of register DR */
1622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)&(ADCx->DR);
1623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
1625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
1628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
1632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
1636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   One or several values can be selected.
1638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         temperature sensor stabilization time.
1644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet.
1645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
1646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         For ADC conversion of internal channels,
1648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         a sampling time minimum value is required.
1649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet.
1650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      TSVREFE        LL_ADC_SetCommonPathInternalCh
1651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 70


1658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
1660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CR2, (ADC_CR2_TSVREFE), PathInternal);
1662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
1666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   One or several values can be selected.
1668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      TSVREFE        LL_ADC_GetCommonPathInternalCh
1671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
1674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
1679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CR2, ADC_CR2_TSVREFE));
1681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
1685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
1688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
1689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
1693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      ALIGN          LL_ADC_SetDataAlignment
1696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
1698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
1701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
1703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR2, ADC_CR2_ALIGN, DataAlignment);
1705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
1709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      ALIGN          LL_ADC_SetDataAlignment
1712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 71


1715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
1718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR2, ADC_CR2_ALIGN));
1720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC sequencers scan mode, for all ADC groups
1724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (group regular, group injected).
1725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note  According to sequencers scan mode :
1726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - If disabled: ADC conversion is performed in unitary conversion
1727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           mode (one channel converted, that defined in rank 1).
1728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Configuration of sequencers of all ADC groups
1729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (sequencer scan length, ...) is discarded: equivalent to
1730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           scan length of 1 rank.
1731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - If enabled: ADC conversions are performed in sequence conversions
1732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           mode, according to configuration of sequencers of
1733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           each ADC group (sequencer scan length, ...).
1734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Refer to function @ref LL_ADC_REG_SetSequencerLength()
1735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           and to function @ref LL_ADC_INJ_SetSequencerLength().
1736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      SCAN           LL_ADC_SetSequencersScanMode
1737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ScanMode This parameter can be one of the following values:
1739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SEQ_SCAN_DISABLE
1740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SEQ_SCAN_ENABLE
1741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
1742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSequencersScanMode(ADC_TypeDef *ADCx, uint32_t ScanMode)
1744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR1, ADC_CR1_SCAN, ScanMode);
1746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC sequencers scan mode, for all ADC groups
1750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (group regular, group injected).
1751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note  According to sequencers scan mode :
1752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - If disabled: ADC conversion is performed in unitary conversion
1753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           mode (one channel converted, that defined in rank 1).
1754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Configuration of sequencers of all ADC groups
1755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (sequencer scan length, ...) is discarded: equivalent to
1756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           scan length of 1 rank.
1757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - If enabled: ADC conversions are performed in sequence conversions
1758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           mode, according to configuration of sequencers of
1759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           each ADC group (sequencer scan length, ...).
1760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Refer to function @ref LL_ADC_REG_SetSequencerLength()
1761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           and to function @ref LL_ADC_INJ_SetSequencerLength().
1762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      SCAN           LL_ADC_GetSequencersScanMode
1763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SEQ_SCAN_DISABLE
1766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SEQ_SCAN_ENABLE
1767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSequencersScanMode(ADC_TypeDef *ADCx)
1769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR1, ADC_CR1_SCAN));
1771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 72


1772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
1775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
1778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
1779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
1783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal (SW start) or from external IP (timer event,
1784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         external interrupt line).
1785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, external trigger is set with trigger polarity:
1786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         rising edge (only trigger polarity available on this STM32 serie).
1787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
1788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         depends on timers availability on the selected device.
1789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      EXTSEL         LL_ADC_REG_SetTriggerSource
1790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
1792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
1793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3       (1)
1794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1       (2)
1795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2       (2)
1796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2       (2)
1797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (2)
1798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4       (2)
1799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (2)
1800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (2)(4)
1801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO_ADC3 (3)
1802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1       (3)
1803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3       (3)
1804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1       (3)
1805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (3)
1806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM5_CH1       (3)
1807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM5_CH3       (3)
1808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available on all ADC instances: ADC1, ADC2, ADC3 (for ADC ins
1810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (2) On STM32F1, parameter available only on ADC instances: ADC1, ADC2 (for ADC instance
1811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (3) On STM32F1, parameter available only on ADC instances: ADC3 (for ADC instances ADCx
1812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (4) On STM32F1, parameter available only on high-density and XL-density devices. A rema
1813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
1814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
1816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: On this STM32 serie, ADC group regular external trigger edge        */
1818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       is used to perform a ADC conversion start.                           */
1819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       This function does not set external trigger edge.                    */
1820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       This feature is set using function                                   */
1821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       @ref LL_ADC_REG_StartConversionExtTrig().                            */
1822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR2, ADC_CR2_EXTSEL, (TriggerSource & ADC_CR2_EXTSEL));
1823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
1827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal (SW start) or from external IP (timer event,
1828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         external interrupt line).
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 73


1829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
1830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal (SW start) or external, without detail
1831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
1832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (equivalent to 
1833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
1834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
1835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
1836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         depends on timers availability on the selected device.
1837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      EXTSEL         LL_ADC_REG_GetTriggerSource
1838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
1841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3       (1)
1842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1       (2)
1843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2       (2)
1844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2       (2)
1845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (2)
1846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4       (2)
1847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (2)
1848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (2)(4)
1849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO_ADC3 (3)
1850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1       (3)
1851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3       (3)
1852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1       (3)
1853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (3)
1854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM5_CH1       (3)
1855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM5_CH3       (3)
1856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available on all ADC instances: ADC1, ADC2, ADC3 (for ADC ins
1858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (2) On STM32F1, parameter available only on ADC instances: ADC1, ADC2 (for ADC instance
1859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (3) On STM32F1, parameter available only on ADC instances: ADC3 (for ADC instances ADCx
1860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (4) On STM32F1, parameter available only on high-density and XL-density devices. A rema
1861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
1863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR2, ADC_CR2_EXTSEL));
1865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
1869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****             or external.
1870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
1871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
1872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
1873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      EXTSEL         LL_ADC_REG_IsTriggerSourceSWStart
1874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
1876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
1877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
1879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (READ_BIT(ADCx->CR2, ADC_CR2_EXTSEL) == (LL_ADC_REG_TRIG_SOFTWARE));
1881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 74


1886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
1887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
1888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
1889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
1890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           are configurable.
1891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This function performs configuration of:
1892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
1893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
1894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
1895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Sequencer ranks are selected using
1896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
1897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
1898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
1899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
1900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           are defined by channel number.
1901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This function performs configuration of:
1902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
1903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
1904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
1905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
1906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
1907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
1908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             highest channel number).
1909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Sequencer ranks are selected using
1910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
1911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, group regular sequencer configuration
1912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC instance sequencer mode.
1913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         If ADC instance sequencer mode is disabled, sequencers of
1914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all groups (group regular, group injected) can be configured
1915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         but their execution is disabled (limited to rank 1).
1916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetSequencersScanMode().
1917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
1918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
1919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
1920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
1922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
1923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
1924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
1925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
1926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
1927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
1928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
1929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
1930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
1931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
1932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
1933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
1934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
1935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
1936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
1937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
1938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
1939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
1941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 75


1943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
1947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
1948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
1949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
1950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
1951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           are configurable.
1952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This function retrieves:
1953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
1954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
1955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
1956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Sequencer ranks are selected using
1957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
1958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
1959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
1960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
1961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           are defined by channel number.
1962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This function retrieves:
1963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
1964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
1965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
1966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
1967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
1968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
1969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             highest channel number).
1970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Sequencer ranks are selected using
1971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
1972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, group regular sequencer configuration
1973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC instance sequencer mode.
1974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         If ADC instance sequencer mode is disabled, sequencers of
1975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all groups (group regular, group injected) can be configured
1976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         but their execution is disabled (limited to rank 1).
1977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetSequencersScanMode().
1978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
1979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
1980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
1981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
1984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
1985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
1986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
1987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
1988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
1989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
1990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
1991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
1992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
1993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
1994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
1995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
1996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
1997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
1998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
1999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 76


2000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
2001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
2003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number of ranks.
2009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular 
2010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
2012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
2013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         CR1      DISCNUM        LL_ADC_REG_SetSequencerDiscont
2015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
2020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
2021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
2022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
2023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
2024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
2025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
2026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR1, ADC_CR1_DISCEN | ADC_CR1_DISCNUM, SeqDiscont);
2031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number of ranks.
2037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         CR1      DISCNUM        LL_ADC_REG_GetSequencerDiscont
2039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
2044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
2045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
2046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
2047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
2048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
2049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
2050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR1, ADC_CR1_DISCEN | ADC_CR1_DISCNUM));
2054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 77


2057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
2058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         scan sequence rank.
2059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This function performs configuration of:
2060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
2062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         affectation to a channel are configurable.
2065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         enabled separately.
2071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SQR3     SQ1            LL_ADC_REG_SetSequencerRanks\n
2073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ2            LL_ADC_REG_SetSequencerRanks\n
2074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ3            LL_ADC_REG_SetSequencerRanks\n
2075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ4            LL_ADC_REG_SetSequencerRanks\n
2076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ5            LL_ADC_REG_SetSequencerRanks\n
2077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ6            LL_ADC_REG_SetSequencerRanks\n
2078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
2079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
2080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
2081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ10           LL_ADC_REG_SetSequencerRanks\n
2082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ11           LL_ADC_REG_SetSequencerRanks\n
2083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ12           LL_ADC_REG_SetSequencerRanks\n
2084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ13           LL_ADC_REG_SetSequencerRanks\n
2085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ14           LL_ADC_REG_SetSequencerRanks\n
2086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ15           LL_ADC_REG_SetSequencerRanks\n
2087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ16           LL_ADC_REG_SetSequencerRanks
2088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
2099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
2100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
2101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
2102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
2103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
2104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
2105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
2106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 78


2114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
2129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
 796              		.loc 3 2131 22 view .LVU325
 797              	.LBB148:
2132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
2134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
2135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
2136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, __ADC_MASK_SHIFT(Rank, ADC_REG_SQ
 798              		.loc 3 2137 3 view .LVU326
 799              	.LBB149:
 800              	.LBI149:
 801              		.file 4 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 79


  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 80


  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 81


 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 82


 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 83


 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 84


 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 85


 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 86


 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 87


 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 88


 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 89


 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 90


 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 91


 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 92


 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 93


 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 94


 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 95


 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 802              		.loc 4 981 31 view .LVU327
 803              	.LBB150:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 804              		.loc 4 983 3 view .LVU328
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 805              		.loc 4 988 4 view .LVU329
 806              		.loc 4 988 65 is_stmt 0 view .LVU330
 807 0236 4FF44073 		mov	r3, #768
 808              		.syntax unified
 809              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 96


 810 023a 93FAA3F3 		rbit r3, r3
 811              	@ 0 "" 2
 812              	.LVL26:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 813              		.loc 4 1001 3 is_stmt 1 view .LVU331
 814              		.loc 4 1001 3 is_stmt 0 view .LVU332
 815              		.thumb
 816              		.syntax unified
 817              	.LBE150:
 818              	.LBE149:
 819              		.loc 3 2137 34 view .LVU333
 820 023e 4FF40072 		mov	r2, #512
 821 0242 B3FA83F3 		clz	r3, r3
 822 0246 3A48     		ldr	r0, .L7+36
 823 0248 22FA03F3 		lsr	r3, r2, r3
 824              	.LVL27:
2138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(*preg,
 825              		.loc 3 2139 3 is_stmt 1 view .LVU334
 826 024c 50F82320 		ldr	r2, [r0, r3, lsl #2]
 827              	.LBE148:
 828              	.LBE147:
 829              	.LBB152:
 830              	.LBB153:
 831              	.LBB154:
 832              	.LBB155:
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 833              		.loc 4 988 65 is_stmt 0 view .LVU335
 834 0250 4FF00071 		mov	r1, #33554432
 835              	.LBE155:
 836              	.LBE154:
 837              	.LBE153:
 838              	.LBE152:
 839              	.LBB164:
 840              	.LBB151:
 841              		.loc 3 2139 3 view .LVU336
 842 0254 22F01F02 		bic	r2, r2, #31
 843 0258 42F00302 		orr	r2, r2, #3
 844 025c 40F82320 		str	r2, [r0, r3, lsl #2]
 845              	.LVL28:
 846              		.loc 3 2139 3 view .LVU337
 847              	.LBE151:
 848              	.LBE164:
 220:Src/main.cpp  ****   /* USER CODE BEGIN ADC1_Init 2 */
 849              		.loc 1 220 3 is_stmt 1 view .LVU338
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 97


 850              	.LBB165:
 851              	.LBI152:
2140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
2141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              (Channel & ADC_CHANNEL_ID_NUMBER_MASK) << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
2142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
2146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         scan sequence rank.
2147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         affectation to a channel are configurable.
2150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           as parameter for another function.
2161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           process the returned value with the helper macro
2163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SQR3     SQ1            LL_ADC_REG_GetSequencerRanks\n
2165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ2            LL_ADC_REG_GetSequencerRanks\n
2166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ3            LL_ADC_REG_GetSequencerRanks\n
2167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ4            LL_ADC_REG_GetSequencerRanks\n
2168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ5            LL_ADC_REG_GetSequencerRanks\n
2169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ6            LL_ADC_REG_GetSequencerRanks\n
2170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
2171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
2172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
2173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ10           LL_ADC_REG_GetSequencerRanks\n
2174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ11           LL_ADC_REG_GetSequencerRanks\n
2175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ12           LL_ADC_REG_GetSequencerRanks\n
2176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ13           LL_ADC_REG_GetSequencerRanks\n
2177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ14           LL_ADC_REG_GetSequencerRanks\n
2178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ15           LL_ADC_REG_GetSequencerRanks\n
2179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ16           LL_ADC_REG_GetSequencerRanks
2180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
2191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
2192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
2193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
2194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 98


2195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
2196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
2197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
2198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.\n
2221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) For ADC channel read back from ADC register,
2222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
2226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, __ADC_MASK_SHIFT(Rank, ADC_REG_SQ
2228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t) (READ_BIT(*preg,
2230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
2231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
2232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                     );
2233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
2237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           conversions launched successively automatically.
2241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular 
2242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      CONT           LL_ADC_REG_SetContinuousMode
2244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
2246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
2251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 99


2252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR2, ADC_CR2_CONT, Continuous);
2253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
2257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           conversions launched successively automatically.
2261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      CONT           LL_ADC_REG_GetContinuousMode
2262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
2268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR2, ADC_CR2_CONT));
2270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
2274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         mode:
2277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           ADC conversions) is reached.
2280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           ADC conversions).
2284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         mode non-circular:
2287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
2290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      DMA            LL_ADC_REG_SetDMATransfer
2293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
2295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
2300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR2, ADC_CR2_DMA, DMATransfer);
2302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
2306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         mode:
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 100


2309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           ADC conversions) is reached.
2312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           ADC conversions).
2316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         mode non-circular:
2319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
2322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      DMA            LL_ADC_REG_GetDMATransfer
2325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
2331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR2, ADC_CR2_DMA));
2333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
2337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
2340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
2341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
2345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal (SW start) or from external IP (timer event,
2346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         external interrupt line).
2347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, external trigger is set with trigger polarity:
2348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         rising edge (only trigger polarity available on this STM32 serie).
2349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
2350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      JEXTSEL        LL_ADC_INJ_SetTriggerSource
2352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
2355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO     (1)
2356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4      (1)
2357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO     (2)
2358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1      (2)
2359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4      (2)
2360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO     (2)
2361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15   (2)
2362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4      (2)(4)
2363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4_ADC3 (3)
2364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3      (3)
2365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2      (3)
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 101


2366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4      (3)
2367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM5_TRGO     (3)
2368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM5_CH4      (3)
2369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available on all ADC instances: ADC1, ADC2, ADC3 (for ADC ins
2371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (2) On STM32F1, parameter available only on ADC instances: ADC1, ADC2 (for ADC instance
2372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (3) On STM32F1, parameter available only on ADC instances: ADC3 (for ADC instances ADCx
2373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (4) On STM32F1, parameter available only on high-density and XL-density devices. A rema
2374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: On this STM32 serie, ADC group injected external trigger edge       */
2379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       is used to perform a ADC conversion start.                           */
2380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       This function does not set external trigger edge.                    */
2381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       This feature is set using function                                   */
2382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       @ref LL_ADC_INJ_StartConversionExtTrig().                            */
2383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR2, ADC_CR2_JEXTSEL, (TriggerSource & ADC_CR2_JEXTSEL));
2384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
2388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal (SW start) or from external IP (timer event,
2389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         external interrupt line).
2390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
2391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal (SW start) or external, without detail
2392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (equivalent to 
2394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
2395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
2396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
2397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      JEXTSEL        LL_ADC_INJ_GetTriggerSource
2399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
2402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO     (1)
2403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4      (1)
2404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO     (2)
2405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1      (2)
2406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4      (2)
2407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO     (2)
2408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15   (2)
2409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4      (2)(4)
2410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4_ADC3 (3)
2411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3      (3)
2412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2      (3)
2413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4      (3)
2414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM5_TRGO     (3)
2415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM5_CH4      (3)
2416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available on all ADC instances: ADC1, ADC2, ADC3 (for ADC ins
2418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (2) On STM32F1, parameter available only on ADC instances: ADC1, ADC2 (for ADC instance
2419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (3) On STM32F1, parameter available only on ADC instances: ADC3 (for ADC instances ADCx
2420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (4) On STM32F1, parameter available only on high-density and XL-density devices. A rema
2421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 102


2423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR2, ADC_CR2_JEXTSEL));
2425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
2429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****             or external
2430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
2431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
2433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      JEXTSEL        LL_ADC_INJ_IsTriggerSourceSWStart
2434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
2439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (READ_BIT(ADCx->CR2, ADC_CR2_JEXTSEL) == LL_ADC_INJ_TRIG_SOFTWARE);
2441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
2445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This function performs configuration of:
2446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
2447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
2448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
2449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, group injected sequencer configuration
2450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC instance sequencer mode.
2451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         If ADC instance sequencer mode is disabled, sequencers of
2452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all groups (group regular, group injected) can be configured
2453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         but their execution is disabled (limited to rank 1).
2454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetSequencersScanMode().
2455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
2458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
2460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
2461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
2462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
2463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
2464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
2467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
2469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
2473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This function retrieves:
2474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
2475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
2476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
2477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, group injected sequencer configuration
2478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC instance sequencer mode.
2479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         If ADC instance sequencer mode is disabled, sequencers of
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 103


2480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all groups (group regular, group injected) can be configured
2481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         but their execution is disabled (limited to rank 1).
2482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetSequencersScanMode().
2483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
2486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
2489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
2490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
2491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
2492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
2494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
2496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
2500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number of ranks.
2502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
2503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
2504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      DISCEN         LL_ADC_INJ_SetSequencerDiscont
2505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
2508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
2509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR1, ADC_CR1_JDISCEN, SeqDiscont);
2514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
2518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number of ranks.
2520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      DISCEN         LL_ADC_REG_GetSequencerDiscont
2521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
2524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
2525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
2527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR1, ADC_CR1_JDISCEN));
2529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
2533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sequence rank.
2534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 104


2537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         enabled separately.
2539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
2541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
2542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
2543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
2544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
2547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
2548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
2549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
2550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
2573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
2576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
2578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
2579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
2580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register uint32_t tmpreg1 = (READ_BIT(ADCx->JSQR, ADC_JSQR_JL) >> ADC_JSQR_JL_Pos) + 1U;
2582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
2584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK << (5U * (uint8_t)(((Rank) + 3U) - (tmpreg1))),
2585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              (Channel & ADC_CHANNEL_ID_NUMBER_MASK) << (5U * (uint8_t)(((Rank) + 3U) - (tmpreg1))))
2586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
2590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sequence rank.
2591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Usage of the returned channel number:
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 105


2594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           as parameter for another function.
2601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           process the returned value with the helper macro
2603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
2605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
2606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
2607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
2608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
2611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
2612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
2613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
2614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.\n
2637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) For ADC channel read back from ADC register,
2638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
2642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register uint32_t tmpreg1 = (READ_BIT(ADCx->JSQR, ADC_JSQR_JL) >> ADC_JSQR_JL_Pos)  + 1U;
2644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR,
2646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                              ADC_CHANNEL_ID_NUMBER_MASK << (5U * (uint8_t)(((Rank) + 3U) - (tmpreg1
2647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                     >> (5U * (uint8_t)(((Rank) + 3U) - (tmpreg1)))
2648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                    );
2649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 106


2651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
2653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         independent or from ADC group regular.
2654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
2655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data 
2656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
2657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
2658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
2659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         on ADC group injected.            
2660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
2661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
2662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         independent trigger.
2663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with 
2664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any 
2665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop: 
2666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only 
2667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         from ADC group regular.
2668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
2669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
2670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      JAUTO          LL_ADC_INJ_SetTrigAuto
2671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
2673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
2674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
2675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
2678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR1, ADC_CR1_JAUTO, TrigAuto);
2680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
2684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         independent or from ADC group regular.
2685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      JAUTO          LL_ADC_INJ_GetTrigAuto
2686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
2689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
2690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
2692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR1, ADC_CR1_JAUTO));
2694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group injected offset.
2698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It sets:
2699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - ADC group injected rank to which the offset programmed
2700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           will be applied
2701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
2702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           converted data).
2703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Caution: Offset format is dependent to ADC resolution:
2704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
2705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         are set to 0.
2706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Offset cannot be enabled or disabled.
2707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         To emulate offset disabled, set an offset value equal to 0.
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 107


2708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JOFR1    JOFFSET1       LL_ADC_INJ_SetOffset\n
2709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JOFR2    JOFFSET2       LL_ADC_INJ_SetOffset\n
2710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JOFR3    JOFFSET3       LL_ADC_INJ_SetOffset\n
2711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JOFR4    JOFFSET4       LL_ADC_INJ_SetOffset
2712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
2715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
2716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
2717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
2718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
2719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetOffset(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t OffsetLevel)
2722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JOFR1, __ADC_MASK_SHIFT(Rank, ADC_INJ_J
2724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(*preg,
2726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              ADC_JOFR1_JOFFSET1,
2727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              OffsetLevel);
2728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected offset.
2732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It gives offset level (offset to be subtracted from the raw converted data).
2733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Caution: Offset format is dependent to ADC resolution:
2734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
2735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         are set to 0.
2736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JOFR1    JOFFSET1       LL_ADC_INJ_GetOffset\n
2737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JOFR2    JOFFSET2       LL_ADC_INJ_GetOffset\n
2738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JOFR3    JOFFSET3       LL_ADC_INJ_GetOffset\n
2739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JOFR4    JOFFSET4       LL_ADC_INJ_GetOffset
2740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
2743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
2744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
2745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
2746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetOffset(ADC_TypeDef *ADCx, uint32_t Rank)
2749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JOFR1, __ADC_MASK_SHIFT(Rank, ADC_INJ_J
2751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
2753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                              ADC_JOFR1_JOFFSET1)
2754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                    );
2755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
2759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
2762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
2763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 108


2765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
2767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Unit: ADC clock cycles.
2768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
2769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
2770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         converted:
2772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         setting).
2775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         TS_temp, ...).
2777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         this STM32 serie.
2780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is required.
2783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet.
2784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SMPR1    SMP17          LL_ADC_SetChannelSamplingTime\n
2785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP16          LL_ADC_SetChannelSamplingTime\n
2786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP15          LL_ADC_SetChannelSamplingTime\n
2787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP14          LL_ADC_SetChannelSamplingTime\n
2788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP13          LL_ADC_SetChannelSamplingTime\n
2789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP12          LL_ADC_SetChannelSamplingTime\n
2790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP11          LL_ADC_SetChannelSamplingTime\n
2791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP10          LL_ADC_SetChannelSamplingTime\n
2792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP9           LL_ADC_SetChannelSamplingTime\n
2793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP8           LL_ADC_SetChannelSamplingTime\n
2794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP7           LL_ADC_SetChannelSamplingTime\n
2795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP6           LL_ADC_SetChannelSamplingTime\n
2796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP5           LL_ADC_SetChannelSamplingTime\n
2797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP4           LL_ADC_SetChannelSamplingTime\n
2798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP3           LL_ADC_SetChannelSamplingTime\n
2799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP2           LL_ADC_SetChannelSamplingTime\n
2800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP1           LL_ADC_SetChannelSamplingTime\n
2801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP0           LL_ADC_SetChannelSamplingTime
2802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 109


2822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
2826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_13CYCLES_5
2830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_28CYCLES_5
2831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_41CYCLES_5
2832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_55CYCLES_5
2833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_71CYCLES_5
2834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_239CYCLES_5
2835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
 852              		.loc 3 2837 22 view .LVU339
 853              	.LBB162:
2838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
2840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
2841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, __ADC_MASK_SHIFT(Channel, ADC_CH
 854              		.loc 3 2843 3 view .LVU340
 855              	.LBB157:
 856              	.LBI154:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 857              		.loc 4 981 31 view .LVU341
 858              	.LBB156:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859              		.loc 4 983 3 view .LVU342
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 860              		.loc 4 988 4 view .LVU343
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 861              		.loc 4 988 65 is_stmt 0 view .LVU344
 862              		.syntax unified
 863              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 864 0260 91FAA1F3 		rbit r3, r1
 865              	@ 0 "" 2
 866              	.LVL29:
 867              		.loc 4 1001 3 is_stmt 1 view .LVU345
 868              		.loc 4 1001 3 is_stmt 0 view .LVU346
 869              		.thumb
 870              		.syntax unified
 871              	.LBE156:
 872              	.LBE157:
 873              		.loc 3 2843 34 view .LVU347
 874 0264 B3FA83F3 		clz	r3, r3
 875 0268 DFF8D8C0 		ldr	ip, .L7+56
 876 026c 21FA03F3 		lsr	r3, r1, r3
 877              	.LVL30:
2844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(*preg,
 878              		.loc 3 2845 3 is_stmt 1 view .LVU348
 879 0270 5CF82320 		ldr	r2, [ip, r3, lsl #2]
 880              	.LVL31:
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 110


 881              	.LBB158:
 882              	.LBI158:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 883              		.loc 4 981 31 view .LVU349
 884              	.LBB159:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 885              		.loc 4 983 3 view .LVU350
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 886              		.loc 4 988 4 view .LVU351
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 887              		.loc 4 988 65 is_stmt 0 view .LVU352
 888 0274 4FF0F871 		mov	r1, #32505856
 889              		.syntax unified
 890              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 891 0278 91FAA1FE 		rbit lr, r1
 892              	@ 0 "" 2
 893              	.LVL32:
 894              		.loc 4 1001 3 is_stmt 1 view .LVU353
 895              		.loc 4 1001 3 is_stmt 0 view .LVU354
 896              		.thumb
 897              		.syntax unified
 898              	.LBE159:
 899              	.LBE158:
 900              		.loc 3 2845 3 view .LVU355
 901 027c 4FF41005 		mov	r5, #9437184
 902 0280 BEFA8EFE 		clz	lr, lr
 903 0284 0720     		movs	r0, #7
 904 0286 25FA0EF5 		lsr	r5, r5, lr
 905 028a A840     		lsls	r0, r0, r5
 906 028c 22EA0002 		bic	r2, r2, r0
 907              	.LVL33:
 908              	.LBB160:
 909              	.LBI160:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 910              		.loc 4 981 31 is_stmt 1 view .LVU356
 911              	.LBB161:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912              		.loc 4 983 3 view .LVU357
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 913              		.loc 4 988 4 view .LVU358
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 914              		.loc 4 988 65 is_stmt 0 view .LVU359
 915              		.syntax unified
 916              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 917 0290 91FAA1F1 		rbit r1, r1
 918              	@ 0 "" 2
 919              	.LVL34:
 920              		.loc 4 1001 3 is_stmt 1 view .LVU360
 921              		.loc 4 1001 3 is_stmt 0 view .LVU361
 922              		.thumb
 923              		.syntax unified
 924              	.LBE161:
 925              	.LBE160:
 926              	.LBE162:
 927              	.LBE165:
 928              	.LBE136:
 929              	.LBE135:
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 111


 930              	.LBB168:
 931              	.LBB169:
 331:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 932              		.loc 1 331 23 view .LVU362
 933 0294 4025     		movs	r5, #64
 934              	.LBE169:
 935              	.LBE168:
 936              	.LBB171:
 937              	.LBB167:
 938              	.LBB166:
 939              	.LBB163:
 940              		.loc 3 2845 3 view .LVU363
 941 0296 4CF82320 		str	r2, [ip, r3, lsl #2]
 942              	.LVL35:
 943              		.loc 3 2845 3 view .LVU364
 944              	.LBE163:
 945              	.LBE166:
 946              	.LBE167:
 947              	.LBE171:
 106:Src/main.cpp  ****   /* USER CODE BEGIN 2 */
 948              		.loc 1 106 3 is_stmt 1 view .LVU365
 949              	.LBB172:
 950              	.LBI168:
 326:Src/main.cpp  **** {
 951              		.loc 1 326 13 view .LVU366
 952              	.LBB170:
 330:Src/main.cpp  ****   GPIO_InitStruct.Pin = TFT_LED_Pin;
 953              		.loc 1 330 3 view .LVU367
 334:Src/main.cpp  **** 
 954              		.loc 1 334 16 is_stmt 0 view .LVU368
 955 029a 0CA9     		add	r1, sp, #48
 956 029c 1C48     		ldr	r0, .L7+4
 331:Src/main.cpp  ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 957              		.loc 1 331 23 view .LVU369
 958 029e 0C95     		str	r5, [sp, #48]
 332:Src/main.cpp  ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 959              		.loc 1 332 3 is_stmt 1 view .LVU370
 333:Src/main.cpp  ****   HAL_GPIO_Init(TFT_LED_GPIO_Port, &GPIO_InitStruct);
 960              		.loc 1 333 3 view .LVU371
 334:Src/main.cpp  **** 
 961              		.loc 1 334 3 view .LVU372
 332:Src/main.cpp  ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 962              		.loc 1 332 24 is_stmt 0 view .LVU373
 963 02a0 CDE90D84 		strd	r8, r4, [sp, #52]
 333:Src/main.cpp  ****   HAL_GPIO_Init(TFT_LED_GPIO_Port, &GPIO_InitStruct);
 964              		.loc 1 333 25 view .LVU374
 965 02a4 CDF83C80 		str	r8, [sp, #60]
 334:Src/main.cpp  **** 
 966              		.loc 1 334 16 view .LVU375
 967 02a8 FFF7FEFF 		bl	HAL_GPIO_Init
 968              	.LVL36:
 338:Src/main.cpp  ****   TIM_OC_InitTypeDef sConfigOC = {0};
 969              		.loc 1 338 3 is_stmt 1 view .LVU376
 347:Src/main.cpp  ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 970              		.loc 1 347 21 is_stmt 0 view .LVU377
 971 02ac FF23     		movs	r3, #255
 345:Src/main.cpp  ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 112


 972              		.loc 1 345 24 view .LVU378
 973 02ae 6422     		movs	r2, #100
 344:Src/main.cpp  ****   htim3.Init.Prescaler = 100;
 974              		.loc 1 344 18 view .LVU379
 975 02b0 204D     		ldr	r5, .L7+40
 976 02b2 2149     		ldr	r1, .L7+44
 350:Src/main.cpp  ****   {
 977              		.loc 1 350 23 view .LVU380
 978 02b4 2846     		mov	r0, r5
 345:Src/main.cpp  ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 979              		.loc 1 345 24 view .LVU381
 980 02b6 C5E90012 		strd	r1, r2, [r5]
 347:Src/main.cpp  ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 981              		.loc 1 347 21 view .LVU382
 982 02ba EB60     		str	r3, [r5, #12]
 338:Src/main.cpp  ****   TIM_OC_InitTypeDef sConfigOC = {0};
 983              		.loc 1 338 27 view .LVU383
 984 02bc CDE90A44 		strd	r4, r4, [sp, #40]
 339:Src/main.cpp  **** 
 985              		.loc 1 339 3 is_stmt 1 view .LVU384
 339:Src/main.cpp  **** 
 986              		.loc 1 339 22 is_stmt 0 view .LVU385
 987 02c0 CDE91244 		strd	r4, r4, [sp, #72]
 988 02c4 CDE91444 		strd	r4, r4, [sp, #80]
 989 02c8 CDE91644 		strd	r4, r4, [sp, #88]
 990 02cc 1894     		str	r4, [sp, #96]
 344:Src/main.cpp  ****   htim3.Init.Prescaler = 100;
 991              		.loc 1 344 3 is_stmt 1 view .LVU386
 346:Src/main.cpp  ****   htim3.Init.Period = 255;
 992              		.loc 1 346 3 view .LVU387
 347:Src/main.cpp  ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 993              		.loc 1 347 3 view .LVU388
 348:Src/main.cpp  ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 994              		.loc 1 348 3 view .LVU389
 349:Src/main.cpp  ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 995              		.loc 1 349 3 view .LVU390
 350:Src/main.cpp  ****   {
 996              		.loc 1 350 3 view .LVU391
 346:Src/main.cpp  ****   htim3.Init.Period = 255;
 997              		.loc 1 346 26 is_stmt 0 view .LVU392
 998 02ce AC60     		str	r4, [r5, #8]
 348:Src/main.cpp  ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 999              		.loc 1 348 28 view .LVU393
 1000 02d0 2C61     		str	r4, [r5, #16]
 349:Src/main.cpp  ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1001              		.loc 1 349 32 view .LVU394
 1002 02d2 AC61     		str	r4, [r5, #24]
 350:Src/main.cpp  ****   {
 1003              		.loc 1 350 23 view .LVU395
 1004 02d4 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1005              	.LVL37:
 354:Src/main.cpp  ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1006              		.loc 1 354 3 is_stmt 1 view .LVU396
 355:Src/main.cpp  ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1007              		.loc 1 355 3 view .LVU397
 354:Src/main.cpp  ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1008              		.loc 1 354 37 is_stmt 0 view .LVU398
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 113


 1009 02d8 CDE90A67 		strd	r6, [sp, #40]
 356:Src/main.cpp  ****   {
 1010              		.loc 1 356 3 is_stmt 1 view .LVU399
 360:Src/main.cpp  ****   sConfigOC.Pulse = 0;
 1011              		.loc 1 360 20 is_stmt 0 view .LVU400
 1012 02dc 6026     		movs	r6, #96
 1013 02de 0027     		movs	r7, #0
 356:Src/main.cpp  ****   {
 1014              		.loc 1 356 44 view .LVU401
 1015 02e0 0AA9     		add	r1, sp, #40
 1016 02e2 2846     		mov	r0, r5
 1017 02e4 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1018              	.LVL38:
 360:Src/main.cpp  ****   sConfigOC.Pulse = 0;
 1019              		.loc 1 360 3 is_stmt 1 view .LVU402
 361:Src/main.cpp  ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1020              		.loc 1 361 3 view .LVU403
 364:Src/main.cpp  ****   {
 1021              		.loc 1 364 32 is_stmt 0 view .LVU404
 1022 02e8 12A9     		add	r1, sp, #72
 1023 02ea 2246     		mov	r2, r4
 1024 02ec 2846     		mov	r0, r5
 362:Src/main.cpp  ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1025              		.loc 1 362 24 view .LVU405
 1026 02ee 1494     		str	r4, [sp, #80]
 363:Src/main.cpp  ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1027              		.loc 1 363 24 view .LVU406
 1028 02f0 1694     		str	r4, [sp, #88]
 360:Src/main.cpp  ****   sConfigOC.Pulse = 0;
 1029              		.loc 1 360 20 view .LVU407
 1030 02f2 CDE91267 		strd	r6, [sp, #72]
 362:Src/main.cpp  ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1031              		.loc 1 362 3 is_stmt 1 view .LVU408
 363:Src/main.cpp  ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1032              		.loc 1 363 3 view .LVU409
 364:Src/main.cpp  ****   {
 1033              		.loc 1 364 3 view .LVU410
 364:Src/main.cpp  ****   {
 1034              		.loc 1 364 32 is_stmt 0 view .LVU411
 1035 02f6 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1036              	.LVL39:
 371:Src/main.cpp  **** 
 1037              		.loc 1 371 3 is_stmt 1 view .LVU412
 371:Src/main.cpp  **** 
 1038              		.loc 1 371 22 is_stmt 0 view .LVU413
 1039 02fa 2846     		mov	r0, r5
 1040 02fc FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1041              	.LVL40:
 1042              	.LBE170:
 1043              	.LBE172:
 109:Src/main.cpp  **** 
 1044              		.loc 1 109 3 is_stmt 1 view .LVU414
 109:Src/main.cpp  **** 
 1045              		.loc 1 109 11 is_stmt 0 view .LVU415
 1046 0300 FFF7FEFF 		bl	vfoSetup
 1047              	.LVL41:
 1048              	.L5:
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 114


 115:Src/main.cpp  ****   {
 1049              		.loc 1 115 3 is_stmt 1 discriminator 1 view .LVU416
 117:Src/main.cpp  **** 
 1050              		.loc 1 117 4 discriminator 1 view .LVU417
 117:Src/main.cpp  **** 
 1051              		.loc 1 117 20 is_stmt 0 discriminator 1 view .LVU418
 1052 0304 FFF7FEFF 		bl	vfoLoopIteration
 1053              	.LVL42:
 1054 0308 FCE7     		b	.L5
 1055              	.L8:
 1056 030a 00BF     		.align	2
 1057              	.L7:
 1058 030c 00100240 		.word	1073876992
 1059 0310 00080140 		.word	1073809408
 1060 0314 000C0140 		.word	1073810432
 1061 0318 00080040 		.word	1073743872
 1062 031c A000A004 		.word	77594784
 1063 0320 00380040 		.word	1073756160
 1064 0324 00000000 		.word	.LANCHOR1
 1065 0328 A0860100 		.word	100000
 1066 032c 00240140 		.word	1073816576
 1067 0330 2C240140 		.word	1073816620
 1068 0334 00000000 		.word	.LANCHOR2
 1069 0338 00040040 		.word	1073742848
 1070 033c 00000000 		.word	.LANCHOR0
 1071 0340 00580040 		.word	1073764352
 1072 0344 0C240140 		.word	1073816588
 1073              		.cfi_endproc
 1074              	.LFE533:
 1075              		.fnend
 1077              		.section	.text._Error_Handler,"ax",%progbits
 1078              		.align	1
 1079              		.p2align 2,,3
 1080              		.global	_Error_Handler
 1081              		.syntax unified
 1082              		.thumb
 1083              		.thumb_func
 1084              		.fpu softvfp
 1086              	_Error_Handler:
 1087              		.fnstart
 1088              	.LVL43:
 1089              	.LFB541:
 453:Src/main.cpp  **** 
 454:Src/main.cpp  **** }
 455:Src/main.cpp  **** 
 456:Src/main.cpp  **** /* USER CODE BEGIN 4 */
 457:Src/main.cpp  **** 
 458:Src/main.cpp  **** /* USER CODE END 4 */
 459:Src/main.cpp  **** 
 460:Src/main.cpp  **** /**
 461:Src/main.cpp  ****   * @brief  This function is executed in case of error occurrence.
 462:Src/main.cpp  ****   * @retval None
 463:Src/main.cpp  ****   */
 464:Src/main.cpp  **** void Error_Handler(void)
 465:Src/main.cpp  **** {
 1090              		.loc 1 465 1 is_stmt 1 view -0
 1091              		.cfi_startproc
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 115


 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
 1094              		@ link register save eliminated.
 466:Src/main.cpp  ****   /* USER CODE BEGIN Error_Handler_Debug */
 467:Src/main.cpp  ****   /* User can add his own implementation to report the HAL error return state */
 468:Src/main.cpp  **** 
 469:Src/main.cpp  ****   /* USER CODE END Error_Handler_Debug */
 470:Src/main.cpp  **** }
 1095              		.loc 1 470 1 is_stmt 0 view .LVU420
 1096 0000 7047     		bx	lr
 1097              		.cfi_endproc
 1098              	.LFE541:
 1099              		.cantunwind
 1100              		.fnend
 1102              		.global	htim4
 1103              		.global	htim3
 1104              		.global	hi2c2
 1105 0002 00BF     		.section	.bss.hi2c2,"aw",%nobits
 1106              		.align	2
 1107              		.set	.LANCHOR1,. + 0
 1110              	hi2c2:
 1111 0000 00000000 		.space	84
 1111      00000000 
 1111      00000000 
 1111      00000000 
 1111      00000000 
 1112              		.section	.bss.htim3,"aw",%nobits
 1113              		.align	2
 1114              		.set	.LANCHOR2,. + 0
 1117              	htim3:
 1118 0000 00000000 		.space	64
 1118      00000000 
 1118      00000000 
 1118      00000000 
 1118      00000000 
 1119              		.section	.bss.htim4,"aw",%nobits
 1120              		.align	2
 1121              		.set	.LANCHOR0,. + 0
 1124              	htim4:
 1125 0000 00000000 		.space	64
 1125      00000000 
 1125      00000000 
 1125      00000000 
 1125      00000000 
 1126              		.text
 1127              	.Letext0:
 1128              		.file 5 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_type
 1129              		.file 6 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 1130              		.file 7 "Drivers/CMSIS/Include/core_cm3.h"
 1131              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1132              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1133              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1134              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1135              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1136              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1137              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1138              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 116


 1139              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1140              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1141              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_spi.h"
 1142              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h"
 1143              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h"
 1144              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1145              		.file 22 "Inc/main.h"
 1146              		.file 23 "Inc/VFO.h"
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s 			page 117


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:16     .text._Z18SystemClock_Configv:0000000000000000 $t
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:25     .text._Z18SystemClock_Configv:0000000000000000 _Z18SystemClock_Configv
.ARM.exidx.text._Z18SystemClock_Configv:0000000000000000 $d
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:148    .text.startup.main:0000000000000000 $t
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:156    .text.startup.main:0000000000000000 main
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:1058   .text.startup.main:000000000000030c $d
     .ARM.exidx.text.startup.main:0000000000000000 $d
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:1078   .text._Error_Handler:0000000000000000 $t
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:1086   .text._Error_Handler:0000000000000000 _Error_Handler
   .ARM.exidx.text._Error_Handler:0000000000000000 $d
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:1124   .bss.htim4:0000000000000000 htim4
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:1117   .bss.htim3:0000000000000000 htim3
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:1110   .bss.hi2c2:0000000000000000 hi2c2
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:1106   .bss.hi2c2:0000000000000000 $d
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:1113   .bss.htim3:0000000000000000 $d
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccSZWiEf.s:1120   .bss.htim4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_unwind_cpp_pr0
HAL_Init
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_TIM_Encoder_Init
HAL_TIMEx_MasterConfigSynchronization
LL_GPIO_Init
LL_SPI_Init
HAL_I2C_Init
LL_ADC_Init
LL_ADC_CommonInit
LL_ADC_REG_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
vfoSetup
vfoLoopIteration
