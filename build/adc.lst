ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 2
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.readVoltage,"ax",%progbits
  16              		.align	1
  17              		.p2align 2,,3
  18              		.global	readVoltage
  19              		.arch armv7-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu softvfp
  25              	readVoltage:
  26              	.LVL0:
  27              	.LFB143:
  28              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** #include "stm32f1xx_hal.h"
   2:Src/adc.c     **** #include "stm32f1xx_ll_adc.h"
   3:Src/adc.c     **** 
   4:Src/adc.c     **** uint16_t readVoltage(ADC_TypeDef *ADCx, uint8_t channel)
   5:Src/adc.c     **** {
  29              		.loc 1 5 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
   6:Src/adc.c     **** 	uint32_t ADC_value = 0;
  34              		.loc 1 6 2 view .LVU1
   7:Src/adc.c     **** 	uint32_t voltage = 0;
  35              		.loc 1 7 2 view .LVU2
   8:Src/adc.c     **** 	if (LL_ADC_IsEnabled(ADCx) == 0)
  36              		.loc 1 8 2 view .LVU3
  37              	.LBB22:
  38              	.LBI22:
  39              		.file 2 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @file    stm32f1xx_ll_adc.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 2


  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ******************************************************************************
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #ifndef __STM32F1xx_LL_ADC_H
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __STM32F1xx_LL_ADC_H
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #ifdef __cplusplus
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** extern "C" {
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #include "stm32f1xx.h"
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @addtogroup STM32F1xx_LL_Driver
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - sequencer register offset                                                */
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 0x00000000U
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 0x00000100U
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 0x00000200U
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 0x00000300U
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET | ADC_SQR3_REGO
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0U) /* Value equivalent to POSITION_VAL(ADC_SQR3_SQ1) 
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 5U) /* Value equivalent to POSITION_VAL(ADC_SQR3_SQ2) 
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (10U) /* Value equivalent to POSITION_VAL(ADC_SQR3_SQ3) 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 3


  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (15U) /* Value equivalent to POSITION_VAL(ADC_SQR3_SQ4) 
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (20U) /* Value equivalent to POSITION_VAL(ADC_SQR3_SQ5) 
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (25U) /* Value equivalent to POSITION_VAL(ADC_SQR3_SQ6) 
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  ( 0U) /* Value equivalent to POSITION_VAL(ADC_SQR2_SQ7) 
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  ( 5U) /* Value equivalent to POSITION_VAL(ADC_SQR2_SQ8) 
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (10U) /* Value equivalent to POSITION_VAL(ADC_SQR2_SQ9) 
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS (15U) /* Value equivalent to POSITION_VAL(ADC_SQR2_SQ10)
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS (20U) /* Value equivalent to POSITION_VAL(ADC_SQR2_SQ11)
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (25U) /* Value equivalent to POSITION_VAL(ADC_SQR2_SQ12)
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS ( 0U) /* Value equivalent to POSITION_VAL(ADC_SQR1_SQ13)
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS ( 5U) /* Value equivalent to POSITION_VAL(ADC_SQR1_SQ14)
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS (10U) /* Value equivalent to POSITION_VAL(ADC_SQR1_SQ15)
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS (15U) /* Value equivalent to POSITION_VAL(ADC_SQR1_SQ16)
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - data register offset                                                     */
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - offset register offset                                                   */
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 0x00000000U
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 0x00000100U
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 0x00000200U
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 0x00000300U
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal register offset for ADC group injected offset configuration */
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JOFR1_REGOFFSET                0x00000000U
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JOFR2_REGOFFSET                0x00001000U
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JOFR3_REGOFFSET                0x00002000U
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_JOFR4_REGOFFSET                0x00003000U
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET | ADC_JDR3_REGO
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_INJ_JOFRX_REGOFFSET_MASK       (ADC_JOFR1_REGOFFSET | ADC_JOFR2_REGOFFSET | ADC_JOFR3_R
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CR1_AWDCH)
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS ( 0U)/* Value equivalent to POSITION_VAL(ADC_CHANNEL_ID
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_INTERNAL_CH
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 0x0000001FU /* Equivalent to shift: (ADC_CHANNEL_NUMBER_
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         0x80000000U   /* Marker of internal channel */
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       0x40000000U   /* Marker of internal channel for other AD
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 4


 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                0x00000000U
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                0x02000000U
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    0x01F00000U
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20U)           /* Value equivalent to POSITION_VAL(ADC_
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* channels literals definition.                                              */
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               0x00000000U
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                      A
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                      A
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                    ADC_CR1_AWDCH_2    
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                    ADC_CR1_AWDCH_2    
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                    ADC_CR1_AWDCH_2 | A
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                    ADC_CR1_AWDCH_2 | A
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                  ADC_CR1_AWDCH_3                      
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                  ADC_CR1_AWDCH_3                      
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                  ADC_CR1_AWDCH_3                   | A
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                  ADC_CR1_AWDCH_3                   | A
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                  ADC_CR1_AWDCH_3 | ADC_CR1_AWDCH_2    
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                  ADC_CR1_AWDCH_3 | ADC_CR1_AWDCH_2    
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                  ADC_CR1_AWDCH_3 | ADC_CR1_AWDCH_2 | A
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                  ADC_CR1_AWDCH_3 | ADC_CR1_AWDCH_2 | A
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CR1_AWDCH_4                                        
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CR1_AWDCH_4                                        
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* channels literals definition.                                              */
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR2_REGOFFSET | (( 0U) << ADC_CHANNEL_SMPx_BITOFF
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR2_REGOFFSET | (( 3U) << ADC_CHANNEL_SMPx_BITOFF
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR2_REGOFFSET | (( 6U) << ADC_CHANNEL_SMPx_BITOFF
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR2_REGOFFSET | (( 9U) << ADC_CHANNEL_SMPx_BITOFF
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR2_REGOFFSET | ((12U) << ADC_CHANNEL_SMPx_BITOFF
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR2_REGOFFSET | ((15U) << ADC_CHANNEL_SMPx_BITOFF
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR2_REGOFFSET | ((18U) << ADC_CHANNEL_SMPx_BITOFF
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR2_REGOFFSET | ((21U) << ADC_CHANNEL_SMPx_BITOFF
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR2_REGOFFSET | ((24U) << ADC_CHANNEL_SMPx_BITOFF
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR2_REGOFFSET | ((27U) << ADC_CHANNEL_SMPx_BITOFF
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR1_REGOFFSET | (( 0U) << ADC_CHANNEL_SMPx_BITOFF
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR1_REGOFFSET | (( 3U) << ADC_CHANNEL_SMPx_BITOFF
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR1_REGOFFSET | (( 6U) << ADC_CHANNEL_SMPx_BITOFF
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR1_REGOFFSET | (( 9U) << ADC_CHANNEL_SMPx_BITOFF
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR1_REGOFFSET | ((12U) << ADC_CHANNEL_SMPx_BITOFF
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR1_REGOFFSET | ((15U) << ADC_CHANNEL_SMPx_BITOFF
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR1_REGOFFSET | ((18U) << ADC_CHANNEL_SMPx_BITOFF
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR1_REGOFFSET | ((21U) << ADC_CHANNEL_SMPx_BITOFF
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 5


 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              0x00000000U
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET)
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CR1_AWDCH | ADC_CR1_JAWDEN | ADC_CR1_AWDEN | ADC_CR
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK)
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_TR1_HIGH_REGOFFSET         0x00000000U
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_TR1_LOW_REGOFFSET          0x00000001U
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_HIGH_REGOFFSET | ADC_AWD_TR1_LOW_REGOFFSET)
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC registers bits positions */
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define ADC_CR1_DUALMOD_BITOFFSET_POS      (16U) /* Value equivalent to POSITION_VAL(ADC_CR1_DUALMO
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: isolate bits with the
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         selected mask and shift them to the register LSB
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (shift mask on register position bit 0).
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __BITS__ Bits in register 32 bits
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __MASK__ Mask in register 32 bits
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Bits in register 32 bits
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __ADC_MASK_SHIFT(__BITS__, __MASK__)                                   \
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__BITS__) & (__MASK__)) >> POSITION_VAL((__MASK__)))
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         a register from a register basis from which an offset
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is applied.
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Pointer to register address
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****  ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2U))))
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 6


 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and multimode
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sharing the same ADC common instance):
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         disabled.
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** typedef struct
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC state:
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC instance must be disabled.
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         refer to description of each function for setting
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         conditioned to ADC state.
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** typedef struct
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t SequencersScanMode;          /*!< Set ADC scan selection.
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_SCAN_S
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 7


 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (functions with prefix "REG").
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC state:
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC instance must be disabled.
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         refer to description of each function for setting
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         conditioned to ADC state.
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** typedef struct
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              @note On this STM32 serie, external trigger is set wit
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                                    (only trigger polarity available on this STM32 s
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              @note This parameter is discarded if scan mode is disa
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (functions with prefix "INJ").
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 8


 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC state:
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC instance must be disabled.
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         refer to description of each function for setting
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         conditioned to ADC state.
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** typedef struct
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              @note On this STM32 serie, external trigger is set wit
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                                    (only trigger polarity available on this STM32 s
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              @note This parameter is discarded if scan mode is disa
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_STRT                   ADC_SR_STRT        /*!< ADC flag ADC group regular conve
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 9


 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_SR_EOC         /*!< ADC flag ADC group regular end o
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_JSTRT                  ADC_SR_JSTRT       /*!< ADC flag ADC group injected conv
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_SR_JEOC        /*!< ADC flag ADC group injected end 
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_SR_AWD         /*!< ADC flag ADC analog watchdog 1 *
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_SR_EOC         /*!< ADC flag ADC multimode master gr
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_SR_EOC         /*!< ADC flag ADC multimode slave gro
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_SR_JEOC        /*!< ADC flag ADC multimode master gr
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_SR_JEOC        /*!< ADC flag ADC multimode slave gro
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_SR_AWD         /*!< ADC flag ADC multimode master an
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_SR_AWD         /*!< ADC flag ADC multimode slave ana
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_CR1_EOCIE      /*!< ADC interruption ADC group regul
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_CR1_JEOCIE     /*!< ADC interruption ADC group injec
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_CR1_AWDIE      /*!< ADC interruption ADC analog watc
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* DMA transfer.                                                              */
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          0x00000000U   /* ADC group regular conversion data reg
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    0x00000001U   /* ADC group regular conversion data reg
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          0x00000000U            /*!< ADC measurement pathes all d
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CR2_TSVREFE)      /*!< ADC measurement path to inte
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CR2_TSVREFE)      /*!< ADC measurement path to inte
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 10


 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              0x00000000U                         /*!< ADC resolution 
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            0x00000000U            /*!< ADC conversion data alignmen
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CR2_ALIGN)        /*!< ADC conversion data alignmen
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SCAN_SELECTION ADC instance - Scan selection
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SEQ_SCAN_DISABLE            0x00000000U    /*!< ADC conversion is performed in unita
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SEQ_SCAN_ENABLE             (ADC_CR1_SCAN) /*!< ADC conversions are performed in seq
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               0x00000001U   /*!< ADC group regular (available on all S
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              0x00000002U   /*!< ADC group injected (not available on 
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      0x00000003U   /*!< ADC both groups regular and injected 
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP)  /*!< ADC ex
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP)  /*!< ADC ex
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP)  /*!< ADC ex
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP)  /*!< ADC ex
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP)  /*!< ADC ex
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP)  /*!< ADC ex
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP)  /*!< ADC ex
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP)  /*!< ADC ex
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP)  /*!< ADC ex
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP)  /*!< ADC ex
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP) /*!< ADC ex
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP) /*!< ADC ex
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP) /*!< ADC ex
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP) /*!< ADC ex
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP) /*!< ADC ex
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP) /*!< ADC ex
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP) /*!< ADC ex
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP) /*!< ADC ex
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 11


 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC group regular external triggers for ADC instances: ADC1, ADC2, ADC3 (for ADC instances ADCx 
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (ADC_CR2_EXTSEL_2 | ADC_CR2_EXTSEL_1 | ADC_CR2_EXTSEL_0)
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CR2_EXTSEL_1)                                      
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC group regular external triggers for ADC instances: ADC1, ADC2 (for ADC instances ADCx availa
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       0x00000000U                                             
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CR2_EXTSEL_0)                                      
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CR2_EXTSEL_1 | ADC_CR2_EXTSEL_0)                   
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CR2_EXTSEL_2)                                      
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CR2_EXTSEL_2 | ADC_CR2_EXTSEL_0)                   
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CR2_EXTSEL_2 | ADC_CR2_EXTSEL_1)                   
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined (STM32F101xE) || defined (STM32F103xE) || defined (STM32F103xG) || defined (STM32F105xC
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: TIM8_TRGO is available on ADC1 and ADC2 only in high-density and     */
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       XL-density devices.                                                  */
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: To use TIM8_TRGO on ADC1 or ADC2, a remap of trigger must be done    */
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       A remap of trigger must be done at top level (refer to               */
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       AFIO peripheral).                                                    */
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (LL_ADC_REG_TRIG_EXT_EXTI_LINE11)                       
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif /* STM32F101xE || STM32F103xE || STM32F103xG || STM32F105xC || STM32F107xC */
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined (STM32F103xE) || defined (STM32F103xG)
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC group regular external triggers for ADC instances: ADC3 (for ADC instances ADCx available on
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH1       (LL_ADC_REG_TRIG_EXT_TIM1_CH1)                          
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (LL_ADC_REG_TRIG_EXT_TIM1_CH2)                          
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_CH1       (LL_ADC_REG_TRIG_EXT_TIM2_CH2)                          
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO_ADC3 (LL_ADC_REG_TRIG_EXT_TIM3_TRGO)                         
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM5_CH1       (LL_ADC_REG_TRIG_EXT_TIM4_CH4)                          
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM5_CH3       (LL_ADC_REG_TRIG_EXT_EXTI_LINE11)                       
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         ADC_CR2_EXTTRIG                         /*!< ADC group r
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** * @{
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** */
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             0x00000000U             /*!< ADC conversions are perform
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CR2_CONT)          /*!< ADC conversions are perform
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 12


 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       0x00000000U              /*!< ADC conversions are not tr
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CR2_DMA)                        /*!< ADC conversion
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        0x00000000U                                             
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     0x00000000U                                             
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                        ADC_CR1_DISCNUM
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                    ADC_CR1_DISCNUM_1                  
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                    ADC_CR1_DISCNUM_1 | ADC_CR1_DISCNUM
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CR1_DISCNUM_2                                      
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CR1_DISCNUM_2                     | ADC_CR1_DISCNUM
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CR1_DISCNUM_2 | ADC_CR1_DISCNUM_1                  
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CR1_DISCNUM_2 | ADC_CR1_DISCNUM_1 | ADC_CR1_DISCNUM
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR3_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR3_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR3_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR3_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR3_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR3_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 13


 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR2_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR2_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR2_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR1_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR1_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR1_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR1_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC group injected external triggers for ADC instances: ADC1, ADC2, ADC3 (for ADC instances ADCx
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (ADC_CR2_JEXTSEL_2 | ADC_CR2_JEXTSEL_1 | ADC_CR2_JEXTSEL
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      0x00000000U                                             
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_CR2_JEXTSEL_0)                                     
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC group injected external triggers for ADC instances: ADC1, ADC2 (for ADC instances ADCx avail
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_CR2_JEXTSEL_1)                                     
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_CR2_JEXTSEL_1 | ADC_CR2_JEXTSEL_0)                 
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_CR2_JEXTSEL_2)                                     
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_CR2_JEXTSEL_2 | ADC_CR2_JEXTSEL_0)                 
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_CR2_JEXTSEL_2 | ADC_CR2_JEXTSEL_1)                 
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined (STM32F101xE) || defined (STM32F103xE) || defined (STM32F103xG) || defined (STM32F105xC
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: TIM8_CH4 is available on ADC1 and ADC2 only in high-density and      */
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       XL-density devices.                                                  */
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: To use TIM8_TRGO on ADC1 or ADC2, a remap of trigger must be done    */
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       A remap of trigger must be done at top level (refer to               */
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       AFIO peripheral).                                                    */
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4        (LL_ADC_INJ_TRIG_EXT_EXTI_LINE15)                      
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif /* STM32F101xE || STM32F103xE || STM32F103xG || STM32F105xC || STM32F107xC */
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined (STM32F103xE) || defined (STM32F103xG)
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* ADC group injected external triggers for ADC instances: ADC3 (for ADC instances ADCx available o
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_CH3        (LL_ADC_INJ_TRIG_EXT_TIM2_TRGO)                        
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH2        (LL_ADC_INJ_TRIG_EXT_TIM2_CH1)                         
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4_ADC3   (LL_ADC_INJ_TRIG_EXT_TIM3_CH4)                         
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM5_TRGO       (LL_ADC_INJ_TRIG_EXT_TIM4_TRGO)                        
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM5_CH4        (LL_ADC_INJ_TRIG_EXT_EXTI_LINE15)                      
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         ADC_CR2_JEXTTRIG                        /*!< ADC group i
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** * @{
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 14


 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        0x00000000U            /*!< ADC group injected conversio
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CR1_JAUTO)        /*!< ADC group injected conversio
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        0x00000000U                     /*!< ADC group injected 
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     0x00000000U            /*!< ADC group injected sequencer
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CR1_JDISCEN)      /*!< ADC group injected sequencer
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_JOFR1_REGOFFSET | 0x00000001U)
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_JOFR2_REGOFFSET | 0x00000002U)
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_JOFR3_REGOFFSET | 0x00000003U)
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_JOFR4_REGOFFSET | 0x00000004U)
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       0x00000000U                                             
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR2_SMP0_0)                                      
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_13CYCLES_5     (ADC_SMPR2_SMP0_1)                                      
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_28CYCLES_5     (ADC_SMPR2_SMP0_1 | ADC_SMPR2_SMP0_0)                   
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_41CYCLES_5     (ADC_SMPR2_SMP0_2)                                      
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_55CYCLES_5     (ADC_SMPR2_SMP0_2 | ADC_SMPR2_SMP0_0)                   
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_71CYCLES_5     (ADC_SMPR2_SMP0_2 | ADC_SMPR2_SMP0_1)                   
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_239CYCLES_5    (ADC_SMPR2_SMP0_2 | ADC_SMPR2_SMP0_1 | ADC_SMPR2_SMP0_0)
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 15


 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 0x00000000U                                             
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (                                                       
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (                                            ADC_CR1_JAW
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (                                            ADC_CR1_JAW
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 16


 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAW
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK)      
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK)      
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_AWD_TR1_HIGH_REGOFFSET) /*!< ADC analog watchdog th
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (ADC_AWD_TR1_LOW_REGOFFSET)  /*!< ADC analog watchdog th
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if !defined(ADC_MULTIMODE_SUPPORT)
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE Multimode - Mode
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT              0x00000000U                                          
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT              0x00000000U                                          
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT          (                    ADC_CR1_DUALMOD_2 | ADC_CR1_DUAL
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL_FAST     (                    ADC_CR1_DUALMOD_2 | ADC_CR1_DUAL
 853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL_SLOW     (ADC_CR1_DUALMOD_3                                   
 854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT          (                    ADC_CR1_DUALMOD_2               
 855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN          (ADC_CR1_DUALMOD_3                                   
 856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM     (                                                    
 857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT     (                                        ADC_CR1_DUAL
 858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTFAST_INJ_SIM (                                        ADC_CR1_DUAL
 859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTSLOW_INJ_SIM (                    ADC_CR1_DUALMOD_2               
 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
 866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 17


 867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                  ADC_DR_DATA) /*!< In multimode, selec
 869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_DR_ADC2DATA              ) /*!< In multimode, selec
 870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_DR_ADC2DATA | ADC_DR_DATA) /*!< In multimode, selec
 871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
 879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Only ADC IP HW delays are defined in ADC LL driver driver,
 880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         not timeout values.
 881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
 882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         above each literal definition.
 883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
 886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: Only ADC IP HW delays are defined in ADC LL driver driver,           */
 887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       not timeout values.                                                  */
 888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
 889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
 890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
 891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
 892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       STM32 serie:                                                         */
 893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1us                              */
 894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
 895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*         configuration.                                                     */
 897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
 900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* parameter "tSTART").                                                       */
 902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Unit: us                                                                   */
 903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US       (10U)  /*!< Delay for internal voltage reference stab
 904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Delay required between ADC disable and ADC calibration start.              */
 906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: On this STM32 serie, before starting a calibration,                  */
 907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       ADC must be disabled.                                                */
 908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       A minimum number of ADC clock cycles are required                    */
 909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       between ADC disable state and calibration start.                     */
 910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       Refer to literal @ref LL_ADC_DELAY_ENABLE_CALIB_ADC_CYCLES.          */
 911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DELAY_DISABLE_CALIB_ADC_CYCLES  (2U)  /*!< Delay required between ADC disable and AD
 916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Delay required between end of ADC Enable and the start of ADC calibration. */
 918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: On this STM32 serie, a minimum number of ADC clock cycles            */
 919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       are required between the end of ADC enable and the start of ADC      */
 920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       calibration.                                                         */
 921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 18


 924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_DELAY_ENABLE_CALIB_ADC_CYCLES  (2U)  /*!< Delay required between end of ADC enable a
 926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
 937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
 938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
 942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Write a value in ADC register
 947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __REG__ Register to be written
 949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
 950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
 951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Read a value in ADC register
 956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __REG__ Register to be read
 958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Register value
 959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
 963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
 966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
 967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
 968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
 969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
 970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
 971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
 972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Example:
 973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
 974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           will return decimal number "4".
 975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
 976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number is returned, either defined with number
 977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
 978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 19


 981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
 995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
 996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
 997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
 998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
 999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
1001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
1005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         from number in decimal format.
1009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Example:
1010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __DECIMAL_NB__: Value between Min_Data=0 and Max_Data=18
1013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.\n
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) For ADC channel read back from ADC register,
1037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 20


1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9U)                                                                        
1042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     ? (                                                                                            
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((uint32_t) (3U * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_P
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                                            
1046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       :                                                                                            
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       (                                                                                            
1048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((uint32_t) (3U * ((__DECIMAL_NB__) - 10U))) << ADC_CHANNEL_SMPx_BIT
1050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                                            
1051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - ADC internal channel:
1058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         returned from ADC registers,
1067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         because internal and external channels share the same channel
1068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         parameters definitions of driver.
1070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
1093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 21


1095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0U)
1098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         a value defined from parameter definition of
1109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         from ADC registers.
1112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
1135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 22


1152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or a value from functions where a channel number is
1167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         returned from ADC registers,
1168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         because internal and external channels share the same channel
1169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         parameters definitions of driver.
1171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
1177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1)                                                \
1182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     ? (                                                                        \
1183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                         \
1184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)                            \
1185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                        \
1186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       :                                                                        \
1187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       (0U)                                                                     \
1188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Example:
1196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 23


1209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.\n
1222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) For ADC channel read back from ADC register,
1223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ
1233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
1235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ 
1236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
1238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ 
1239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
1241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ 
1242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
1243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
1244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ 
1245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
1247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ 
1248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
1250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ 
1251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
1252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
1253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ 
1254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
1255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
1256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ 
1257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
1258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
1259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ 
1260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
1261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
1262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ 
1263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
1264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 24


1266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ
1269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
1270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ
1272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
1273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ
1275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
1276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ
1278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
1279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ
1281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
1282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ
1284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
1285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ
1287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
1288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (1)
1289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (1)
1290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ      (1)
1291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (1)
1292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (1)
1293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   (1)
1294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
1296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
1299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CR1_AWDEN | ADC_CR1_AWDSGL)                     
1300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       :                                                                                            
1301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                       
1302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAWDEN | ADC_CR1_AWDSGL)                 
1303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****          :                                                                                         
1304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CR1_JAWDEN | ADC_CR1_AWDEN | ADC_CR1_AWDSGL) 
1305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         different of 12 bits.
1311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDThresholds().
1312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *            (< ADCx param >,
1316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *            );
1318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 25


1323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: On this STM32 serie, ADC is fixed to resolution 12 bits.            */
1324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       This macro has been kept anyway for compatibility with other         */
1325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       STM32 families featuring different ADC resolutions.                  */
1326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << (0U))
1328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is 
1332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         different of 12 bits.
1333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *            );
1340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: On this STM32 serie, ADC is fixed to resolution 12 bits.            */
1346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       This macro has been kept anyway for compatibility with other         */
1347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       STM32 families featuring different ADC resolutions.                  */
1348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (__AWD_THRESHOLD_12_BITS__)
1350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
1354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
1355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
1356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is enabled.
1357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
1358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
1359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
1360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
1361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
1362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
1363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
1366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> POSITION_VAL((__ADC_MULTI_MASTER_SLAVE__))) & ADC_DR_DATA)
1367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
1368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On STM32F1, there is no common ADC instance.
1377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         However, ADC instance ADC1 has a role of common ADC instance
1378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         for ADC1 and ADC2:
1379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         this instance is used to manage internal channels
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 26


1380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and multimode (these features are managed in ADC common
1381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         instances on some other STM32 devices).
1382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC instance ADC3 (if available on the selected device)
1383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         has no ADC common instance.
1384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval ADC common register instance
1386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
1388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ((((__ADCx__) == ADC1) || ((__ADCx__) == ADC2))                              \
1390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     ? (                                                                        \
1391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (ADC12_COMMON)                                                          \
1392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                        \
1393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       :                                                                        \
1394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       (                                                                        \
1395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (0U)                                                                    \
1396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                        \
1397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
1399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (ADC12_COMMON)
1401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #else
1402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (ADC1_COMMON)
1404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
1405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC common instance are disabled.
1409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC state:
1411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On STM32F1, there is no common ADC instance.
1417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         However, ADC instance ADC1 has a role of common ADC instance
1418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         for ADC1 and ADC2:
1419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         this instance is used to manage internal channels
1420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and multimode (these features are managed in ADC common
1421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         instances on some other STM32 devices).
1422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC instance ADC3 (if available on the selected device)
1423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         has no ADC common instance.
1424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         are disabled.
1428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is enabled.
1430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
1432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
1434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     ? (                                                                        \
1435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
1436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 27


1437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                        \
1438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       :                                                                        \
1439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       (                                                                        \
1440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        LL_ADC_IsEnabled(ADC3)                                                  \
1441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                        \
1442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
1444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
1446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
1447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #else
1448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
1451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (refer to reference manual).
1458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   (0xFFFU)
1464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be known from
1470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement.
1471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                       (unit: digital value).
1474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                       __ADC_DATA__,\
1480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
1481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (refer to device datasheet).
1491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Calculation formula:
1492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 28


1494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                   (unit: digital value)
1496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                  datasheet typical values.
1503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be known from
1510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement.
1511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12bits
1512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                       On STM32F1, refer to device datasheet parameter "Avg_Slop
1516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                       On STM32F1, refer to device datasheet parameter "V25".
1518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
1520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         This parameter can be one of the following values:
1523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
1532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   ((( (                                                                        \
1533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                  * 1000)                                                       \
1535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        -                                                                       \
1536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                  * 1000)                                                       \
1539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****       )                                                                        \
1540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     ) / (__TEMPSENSOR_TYP_AVGSLOPE__)                                          \
1541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****    ) + (__TEMPSENSOR_CALX_TEMP__)                                              \
1542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   )
1543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
1546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
1550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 29


1551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
1556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
1560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Example:
1575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On STM32F1, only ADC instances ADC1 and ADC3 have DMA transfer
1585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         capability, not ADC2 (ADC2 and ADC3 instances not available on
1586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all devices).
1587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On STM32F1, multimode can be used only with ADC1 and ADC2, not ADC3.
1588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Therefore, the corresponding parameter of data transfer
1589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         for multimode can be used only with ADC1 and ADC2.
1590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (ADC2 and ADC3 instances not available on all devices).
1591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
1596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
1598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval ADC register address
1599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register uint32_t data_reg_addr = 0U;
1604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
1605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
1606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   {
1607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     /* Retrieve address of register DR */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 30


1608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     data_reg_addr = (uint32_t)&(ADCx->DR);
1609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   }
1610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
1611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   {
1612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     /* Retrieve address of register of multimode data */
1613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****     data_reg_addr = (uint32_t)&(ADC12_COMMON->DR);
1614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   }
1615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
1616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return data_reg_addr;
1617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #else
1619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Retrieve address of register DR */
1622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)&(ADCx->DR);
1623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif
1625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
1628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
1632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
1636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   One or several values can be selected.
1638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         temperature sensor stabilization time.
1644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet.
1645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
1646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         For ADC conversion of internal channels,
1648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         a sampling time minimum value is required.
1649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet.
1650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      TSVREFE        LL_ADC_SetCommonPathInternalCh
1651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
1658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
1660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CR2, (ADC_CR2_TSVREFE), PathInternal);
1662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 31


1665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
1666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   One or several values can be selected.
1668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      TSVREFE        LL_ADC_GetCommonPathInternalCh
1671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
1674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
1679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CR2, ADC_CR2_TSVREFE));
1681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
1685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
1688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
1689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
1693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      ALIGN          LL_ADC_SetDataAlignment
1696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
1698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
1701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
1703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR2, ADC_CR2_ALIGN, DataAlignment);
1705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
1709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      ALIGN          LL_ADC_SetDataAlignment
1712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
1718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR2, ADC_CR2_ALIGN));
1720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 32


1722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC sequencers scan mode, for all ADC groups
1724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (group regular, group injected).
1725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note  According to sequencers scan mode :
1726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - If disabled: ADC conversion is performed in unitary conversion
1727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           mode (one channel converted, that defined in rank 1).
1728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Configuration of sequencers of all ADC groups
1729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (sequencer scan length, ...) is discarded: equivalent to
1730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           scan length of 1 rank.
1731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - If enabled: ADC conversions are performed in sequence conversions
1732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           mode, according to configuration of sequencers of
1733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           each ADC group (sequencer scan length, ...).
1734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Refer to function @ref LL_ADC_REG_SetSequencerLength()
1735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           and to function @ref LL_ADC_INJ_SetSequencerLength().
1736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      SCAN           LL_ADC_SetSequencersScanMode
1737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ScanMode This parameter can be one of the following values:
1739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SEQ_SCAN_DISABLE
1740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SEQ_SCAN_ENABLE
1741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
1742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSequencersScanMode(ADC_TypeDef *ADCx, uint32_t ScanMode)
1744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR1, ADC_CR1_SCAN, ScanMode);
1746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC sequencers scan mode, for all ADC groups
1750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (group regular, group injected).
1751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note  According to sequencers scan mode :
1752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - If disabled: ADC conversion is performed in unitary conversion
1753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           mode (one channel converted, that defined in rank 1).
1754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Configuration of sequencers of all ADC groups
1755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (sequencer scan length, ...) is discarded: equivalent to
1756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           scan length of 1 rank.
1757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - If enabled: ADC conversions are performed in sequence conversions
1758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           mode, according to configuration of sequencers of
1759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           each ADC group (sequencer scan length, ...).
1760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Refer to function @ref LL_ADC_REG_SetSequencerLength()
1761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           and to function @ref LL_ADC_INJ_SetSequencerLength().
1762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      SCAN           LL_ADC_GetSequencersScanMode
1763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SEQ_SCAN_DISABLE
1766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SEQ_SCAN_ENABLE
1767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSequencersScanMode(ADC_TypeDef *ADCx)
1769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR1, ADC_CR1_SCAN));
1771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
1775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
1778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 33


1779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
1783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal (SW start) or from external IP (timer event,
1784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         external interrupt line).
1785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, external trigger is set with trigger polarity:
1786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         rising edge (only trigger polarity available on this STM32 serie).
1787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
1788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         depends on timers availability on the selected device.
1789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      EXTSEL         LL_ADC_REG_SetTriggerSource
1790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
1792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
1793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3       (1)
1794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1       (2)
1795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2       (2)
1796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2       (2)
1797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (2)
1798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4       (2)
1799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (2)
1800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (2)(4)
1801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO_ADC3 (3)
1802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1       (3)
1803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3       (3)
1804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1       (3)
1805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (3)
1806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM5_CH1       (3)
1807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM5_CH3       (3)
1808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available on all ADC instances: ADC1, ADC2, ADC3 (for ADC ins
1810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (2) On STM32F1, parameter available only on ADC instances: ADC1, ADC2 (for ADC instance
1811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (3) On STM32F1, parameter available only on ADC instances: ADC3 (for ADC instances ADCx
1812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (4) On STM32F1, parameter available only on high-density and XL-density devices. A rema
1813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
1814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
1816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: On this STM32 serie, ADC group regular external trigger edge        */
1818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       is used to perform a ADC conversion start.                           */
1819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       This function does not set external trigger edge.                    */
1820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       This feature is set using function                                   */
1821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       @ref LL_ADC_REG_StartConversionExtTrig().                            */
1822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR2, ADC_CR2_EXTSEL, (TriggerSource & ADC_CR2_EXTSEL));
1823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
1827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal (SW start) or from external IP (timer event,
1828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         external interrupt line).
1829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
1830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal (SW start) or external, without detail
1831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
1832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (equivalent to 
1833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
1834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
1835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 34


1836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         depends on timers availability on the selected device.
1837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      EXTSEL         LL_ADC_REG_GetTriggerSource
1838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
1841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3       (1)
1842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1       (2)
1843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2       (2)
1844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2       (2)
1845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (2)
1846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4       (2)
1847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (2)
1848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (2)(4)
1849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO_ADC3 (3)
1850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH1       (3)
1851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3       (3)
1852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_CH1       (3)
1853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (3)
1854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM5_CH1       (3)
1855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM5_CH3       (3)
1856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
1857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available on all ADC instances: ADC1, ADC2, ADC3 (for ADC ins
1858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (2) On STM32F1, parameter available only on ADC instances: ADC1, ADC2 (for ADC instance
1859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (3) On STM32F1, parameter available only on ADC instances: ADC3 (for ADC instances ADCx
1860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (4) On STM32F1, parameter available only on high-density and XL-density devices. A rema
1861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
1863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR2, ADC_CR2_EXTSEL));
1865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
1869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****             or external.
1870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
1871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
1872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
1873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      EXTSEL         LL_ADC_REG_IsTriggerSourceSWStart
1874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
1876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
1877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
1879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (READ_BIT(ADCx->CR2, ADC_CR2_EXTSEL) == (LL_ADC_REG_TRIG_SOFTWARE));
1881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
1886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
1887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
1888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
1889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
1890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           are configurable.
1891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This function performs configuration of:
1892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 35


1893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
1894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
1895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Sequencer ranks are selected using
1896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
1897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
1898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
1899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
1900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           are defined by channel number.
1901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This function performs configuration of:
1902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
1903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
1904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
1905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
1906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
1907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
1908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             highest channel number).
1909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Sequencer ranks are selected using
1910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
1911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, group regular sequencer configuration
1912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC instance sequencer mode.
1913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         If ADC instance sequencer mode is disabled, sequencers of
1914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all groups (group regular, group injected) can be configured
1915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         but their execution is disabled (limited to rank 1).
1916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetSequencersScanMode().
1917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
1918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
1919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
1920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
1922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
1923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
1924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
1925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
1926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
1927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
1928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
1929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
1930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
1931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
1932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
1933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
1934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
1935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
1936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
1937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
1938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
1939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
1940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
1941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
1942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
1943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
1944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
1945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
1946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
1947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
1948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
1949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 36


1950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
1951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           are configurable.
1952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This function retrieves:
1953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
1954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
1955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
1956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Sequencer ranks are selected using
1957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
1958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
1959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
1960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
1961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           are defined by channel number.
1962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This function retrieves:
1963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
1964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
1965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
1966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
1967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
1968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
1969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             highest channel number).
1970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Sequencer ranks are selected using
1971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
1972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, group regular sequencer configuration
1973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC instance sequencer mode.
1974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         If ADC instance sequencer mode is disabled, sequencers of
1975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all groups (group regular, group injected) can be configured
1976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         but their execution is disabled (limited to rank 1).
1977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetSequencersScanMode().
1978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
1979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
1980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
1981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
1982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
1984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
1985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
1986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
1987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
1988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
1989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
1990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
1991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
1992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
1993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
1994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
1995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
1996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
1997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
1998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
1999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
2001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
2003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 37


2007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number of ranks.
2009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular 
2010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
2012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
2013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         CR1      DISCNUM        LL_ADC_REG_SetSequencerDiscont
2015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
2020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
2021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
2022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
2023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
2024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
2025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
2026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR1, ADC_CR1_DISCEN | ADC_CR1_DISCNUM, SeqDiscont);
2031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number of ranks.
2037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         CR1      DISCNUM        LL_ADC_REG_GetSequencerDiscont
2039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
2044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
2045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
2046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
2047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
2048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
2049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
2050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR1, ADC_CR1_DISCEN | ADC_CR1_DISCNUM));
2054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
2058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         scan sequence rank.
2059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This function performs configuration of:
2060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
2062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 38


2064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         affectation to a channel are configurable.
2065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         enabled separately.
2071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SQR3     SQ1            LL_ADC_REG_SetSequencerRanks\n
2073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ2            LL_ADC_REG_SetSequencerRanks\n
2074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ3            LL_ADC_REG_SetSequencerRanks\n
2075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ4            LL_ADC_REG_SetSequencerRanks\n
2076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ5            LL_ADC_REG_SetSequencerRanks\n
2077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ6            LL_ADC_REG_SetSequencerRanks\n
2078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
2079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
2080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
2081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ10           LL_ADC_REG_SetSequencerRanks\n
2082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ11           LL_ADC_REG_SetSequencerRanks\n
2083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ12           LL_ADC_REG_SetSequencerRanks\n
2084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ13           LL_ADC_REG_SetSequencerRanks\n
2085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ14           LL_ADC_REG_SetSequencerRanks\n
2086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ15           LL_ADC_REG_SetSequencerRanks\n
2087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ16           LL_ADC_REG_SetSequencerRanks
2088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
2099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
2100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
2101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
2102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
2103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
2104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
2105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
2106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 39


2121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
2129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
2132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
2134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
2135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
2136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, __ADC_MASK_SHIFT(Rank, ADC_REG_SQ
2138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(*preg,
2140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
2141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              (Channel & ADC_CHANNEL_ID_NUMBER_MASK) << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
2142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
2146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         scan sequence rank.
2147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         affectation to a channel are configurable.
2150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           as parameter for another function.
2161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           process the returned value with the helper macro
2163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SQR3     SQ1            LL_ADC_REG_GetSequencerRanks\n
2165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ2            LL_ADC_REG_GetSequencerRanks\n
2166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ3            LL_ADC_REG_GetSequencerRanks\n
2167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ4            LL_ADC_REG_GetSequencerRanks\n
2168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ5            LL_ADC_REG_GetSequencerRanks\n
2169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR3     SQ6            LL_ADC_REG_GetSequencerRanks\n
2170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
2171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
2172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
2173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ10           LL_ADC_REG_GetSequencerRanks\n
2174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ11           LL_ADC_REG_GetSequencerRanks\n
2175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR2     SQ12           LL_ADC_REG_GetSequencerRanks\n
2176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ13           LL_ADC_REG_GetSequencerRanks\n
2177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ14           LL_ADC_REG_GetSequencerRanks\n
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 40


2178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ15           LL_ADC_REG_GetSequencerRanks\n
2179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SQR1     SQ16           LL_ADC_REG_GetSequencerRanks
2180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
2191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
2192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
2193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
2194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
2195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
2196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
2197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
2198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.\n
2221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) For ADC channel read back from ADC register,
2222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
2226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, __ADC_MASK_SHIFT(Rank, ADC_REG_SQ
2228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t) (READ_BIT(*preg,
2230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
2231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
2232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                     );
2233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 41


2235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
2237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           conversions launched successively automatically.
2241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular 
2242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      CONT           LL_ADC_REG_SetContinuousMode
2244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
2246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
2251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR2, ADC_CR2_CONT, Continuous);
2253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
2257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           conversions launched successively automatically.
2261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      CONT           LL_ADC_REG_GetContinuousMode
2262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
2268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR2, ADC_CR2_CONT));
2270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
2274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         mode:
2277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           ADC conversions) is reached.
2280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           ADC conversions).
2284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         mode non-circular:
2287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
2290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 42


2292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      DMA            LL_ADC_REG_SetDMATransfer
2293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
2295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
2300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR2, ADC_CR2_DMA, DMATransfer);
2302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
2306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         mode:
2309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           ADC conversions) is reached.
2312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           ADC conversions).
2316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         mode non-circular:
2319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
2322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      DMA            LL_ADC_REG_GetDMATransfer
2325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
2331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR2, ADC_CR2_DMA));
2333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
2337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
2340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
2341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
2345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal (SW start) or from external IP (timer event,
2346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         external interrupt line).
2347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, external trigger is set with trigger polarity:
2348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         rising edge (only trigger polarity available on this STM32 serie).
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 43


2349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
2350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      JEXTSEL        LL_ADC_INJ_SetTriggerSource
2352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
2355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO     (1)
2356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4      (1)
2357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO     (2)
2358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1      (2)
2359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4      (2)
2360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO     (2)
2361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15   (2)
2362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4      (2)(4)
2363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4_ADC3 (3)
2364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3      (3)
2365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2      (3)
2366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4      (3)
2367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM5_TRGO     (3)
2368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM5_CH4      (3)
2369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available on all ADC instances: ADC1, ADC2, ADC3 (for ADC ins
2371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (2) On STM32F1, parameter available only on ADC instances: ADC1, ADC2 (for ADC instance
2372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (3) On STM32F1, parameter available only on ADC instances: ADC3 (for ADC instances ADCx
2373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (4) On STM32F1, parameter available only on high-density and XL-density devices. A rema
2374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /* Note: On this STM32 serie, ADC group injected external trigger edge       */
2379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       is used to perform a ADC conversion start.                           */
2380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       This function does not set external trigger edge.                    */
2381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       This feature is set using function                                   */
2382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /*       @ref LL_ADC_INJ_StartConversionExtTrig().                            */
2383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR2, ADC_CR2_JEXTSEL, (TriggerSource & ADC_CR2_JEXTSEL));
2384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
2388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal (SW start) or from external IP (timer event,
2389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         external interrupt line).
2390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
2391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal (SW start) or external, without detail
2392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (equivalent to 
2394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
2395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
2396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
2397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      JEXTSEL        LL_ADC_INJ_GetTriggerSource
2399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
2402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO     (1)
2403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4      (1)
2404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO     (2)
2405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1      (2)
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 44


2406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4      (2)
2407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO     (2)
2408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15   (2)
2409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4      (2)(4)
2410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4_ADC3 (3)
2411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_CH3      (3)
2412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH2      (3)
2413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4      (3)
2414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM5_TRGO     (3)
2415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM5_CH4      (3)
2416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available on all ADC instances: ADC1, ADC2, ADC3 (for ADC ins
2418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (2) On STM32F1, parameter available only on ADC instances: ADC1, ADC2 (for ADC instance
2419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (3) On STM32F1, parameter available only on ADC instances: ADC3 (for ADC instances ADCx
2420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (4) On STM32F1, parameter available only on high-density and XL-density devices. A rema
2421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
2423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR2, ADC_CR2_JEXTSEL));
2425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
2429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****             or external
2430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
2431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
2433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      JEXTSEL        LL_ADC_INJ_IsTriggerSourceSWStart
2434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
2439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (READ_BIT(ADCx->CR2, ADC_CR2_JEXTSEL) == LL_ADC_INJ_TRIG_SOFTWARE);
2441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
2445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This function performs configuration of:
2446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
2447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
2448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
2449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, group injected sequencer configuration
2450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC instance sequencer mode.
2451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         If ADC instance sequencer mode is disabled, sequencers of
2452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all groups (group regular, group injected) can be configured
2453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         but their execution is disabled (limited to rank 1).
2454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetSequencersScanMode().
2455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
2458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
2460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
2461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
2462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 45


2463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
2464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
2467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
2469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
2473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This function retrieves:
2474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
2475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
2476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
2477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, group injected sequencer configuration
2478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is conditioned to ADC instance sequencer mode.
2479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         If ADC instance sequencer mode is disabled, sequencers of
2480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all groups (group regular, group injected) can be configured
2481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         but their execution is disabled (limited to rank 1).
2482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetSequencersScanMode().
2483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
2486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
2489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
2490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
2491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
2492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
2494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
2496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
2500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number of ranks.
2502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
2503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
2504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      DISCEN         LL_ADC_INJ_SetSequencerDiscont
2505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
2508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
2509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR1, ADC_CR1_JDISCEN, SeqDiscont);
2514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
2518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         number of ranks.
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 46


2520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      DISCEN         LL_ADC_REG_GetSequencerDiscont
2521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
2524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
2525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
2527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR1, ADC_CR1_JDISCEN));
2529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
2533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sequence rank.
2534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         enabled separately.
2539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
2541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
2542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
2543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
2544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
2547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
2548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
2549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
2550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
2573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
2576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 47


2577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
2578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
2579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
2580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register uint32_t tmpreg1 = (READ_BIT(ADCx->JSQR, ADC_JSQR_JL) >> ADC_JSQR_JL_Pos) + 1U;
2582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
2584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK << (5U * (uint8_t)(((Rank) + 3U) - (tmpreg1))),
2585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              (Channel & ADC_CHANNEL_ID_NUMBER_MASK) << (5U * (uint8_t)(((Rank) + 3U) - (tmpreg1))))
2586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
2590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sequence rank.
2591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           as parameter for another function.
2601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           process the returned value with the helper macro
2603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
2605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
2606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
2607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
2608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
2611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
2612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
2613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
2614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 48


2634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.\n
2637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) For ADC channel read back from ADC register,
2638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
2642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register uint32_t tmpreg1 = (READ_BIT(ADCx->JSQR, ADC_JSQR_JL) >> ADC_JSQR_JL_Pos)  + 1U;
2644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR,
2646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                              ADC_CHANNEL_ID_NUMBER_MASK << (5U * (uint8_t)(((Rank) + 3U) - (tmpreg1
2647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                     >> (5U * (uint8_t)(((Rank) + 3U) - (tmpreg1)))
2648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                    );
2649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
2653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         independent or from ADC group regular.
2654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
2655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data 
2656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
2657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
2658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
2659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         on ADC group injected.            
2660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
2661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
2662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         independent trigger.
2663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with 
2664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any 
2665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop: 
2666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only 
2667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         from ADC group regular.
2668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
2669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
2670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      JAUTO          LL_ADC_INJ_SetTrigAuto
2671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
2673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
2674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
2675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
2678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR1, ADC_CR1_JAUTO, TrigAuto);
2680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
2684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         independent or from ADC group regular.
2685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      JAUTO          LL_ADC_INJ_GetTrigAuto
2686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
2689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
2690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 49


2691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
2692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR1, ADC_CR1_JAUTO));
2694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC group injected offset.
2698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It sets:
2699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - ADC group injected rank to which the offset programmed
2700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           will be applied
2701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
2702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           converted data).
2703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Caution: Offset format is dependent to ADC resolution:
2704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
2705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         are set to 0.
2706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Offset cannot be enabled or disabled.
2707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         To emulate offset disabled, set an offset value equal to 0.
2708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JOFR1    JOFFSET1       LL_ADC_INJ_SetOffset\n
2709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JOFR2    JOFFSET2       LL_ADC_INJ_SetOffset\n
2710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JOFR3    JOFFSET3       LL_ADC_INJ_SetOffset\n
2711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JOFR4    JOFFSET4       LL_ADC_INJ_SetOffset
2712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
2715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
2716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
2717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
2718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
2719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetOffset(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t OffsetLevel)
2722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JOFR1, __ADC_MASK_SHIFT(Rank, ADC_INJ_J
2724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(*preg,
2726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              ADC_JOFR1_JOFFSET1,
2727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              OffsetLevel);
2728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected offset.
2732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   It gives offset level (offset to be subtracted from the raw converted data).
2733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Caution: Offset format is dependent to ADC resolution:
2734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
2735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         are set to 0.
2736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JOFR1    JOFFSET1       LL_ADC_INJ_GetOffset\n
2737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JOFR2    JOFFSET2       LL_ADC_INJ_GetOffset\n
2738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JOFR3    JOFFSET3       LL_ADC_INJ_GetOffset\n
2739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JOFR4    JOFFSET4       LL_ADC_INJ_GetOffset
2740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
2743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
2744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
2745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
2746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 50


2748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetOffset(ADC_TypeDef *ADCx, uint32_t Rank)
2749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JOFR1, __ADC_MASK_SHIFT(Rank, ADC_INJ_J
2751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
2753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                              ADC_JOFR1_JOFFSET1)
2754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                    );
2755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
2759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
2762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
2763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
2767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Unit: ADC clock cycles.
2768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
2769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
2770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         converted:
2772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         setting).
2775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         TS_temp, ...).
2777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         this STM32 serie.
2780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is required.
2783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet.
2784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SMPR1    SMP17          LL_ADC_SetChannelSamplingTime\n
2785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP16          LL_ADC_SetChannelSamplingTime\n
2786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP15          LL_ADC_SetChannelSamplingTime\n
2787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP14          LL_ADC_SetChannelSamplingTime\n
2788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP13          LL_ADC_SetChannelSamplingTime\n
2789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP12          LL_ADC_SetChannelSamplingTime\n
2790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP11          LL_ADC_SetChannelSamplingTime\n
2791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP10          LL_ADC_SetChannelSamplingTime\n
2792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP9           LL_ADC_SetChannelSamplingTime\n
2793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP8           LL_ADC_SetChannelSamplingTime\n
2794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP7           LL_ADC_SetChannelSamplingTime\n
2795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP6           LL_ADC_SetChannelSamplingTime\n
2796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP5           LL_ADC_SetChannelSamplingTime\n
2797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP4           LL_ADC_SetChannelSamplingTime\n
2798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP3           LL_ADC_SetChannelSamplingTime\n
2799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP2           LL_ADC_SetChannelSamplingTime\n
2800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP1           LL_ADC_SetChannelSamplingTime\n
2801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP0           LL_ADC_SetChannelSamplingTime
2802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 51


2805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
2826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_13CYCLES_5
2830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_28CYCLES_5
2831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_41CYCLES_5
2832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_55CYCLES_5
2833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_71CYCLES_5
2834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_239CYCLES_5
2835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
2836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
2838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
2840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
2841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, __ADC_MASK_SHIFT(Channel, ADC_CH
2844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(*preg,
2846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              ADC_SMPR2_SMP0 << __ADC_MASK_SHIFT(Channel, ADC_CHANNEL_SMPx_BITOFFSET_MASK),
2847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              SamplingTime   << __ADC_MASK_SHIFT(Channel, ADC_CHANNEL_SMPx_BITOFFSET_MASK));
2848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
2849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
2852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Unit: ADC clock cycles.
2853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
2854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
2855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         this STM32 serie.
2858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SMPR1    SMP17          LL_ADC_GetChannelSamplingTime\n
2859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP16          LL_ADC_GetChannelSamplingTime\n
2860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP15          LL_ADC_GetChannelSamplingTime\n
2861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP14          LL_ADC_GetChannelSamplingTime\n
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 52


2862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP13          LL_ADC_GetChannelSamplingTime\n
2863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP12          LL_ADC_GetChannelSamplingTime\n
2864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP11          LL_ADC_GetChannelSamplingTime\n
2865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR1    SMP10          LL_ADC_GetChannelSamplingTime\n
2866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP9           LL_ADC_GetChannelSamplingTime\n
2867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP8           LL_ADC_GetChannelSamplingTime\n
2868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP7           LL_ADC_GetChannelSamplingTime\n
2869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP6           LL_ADC_GetChannelSamplingTime\n
2870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP5           LL_ADC_GetChannelSamplingTime\n
2871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP4           LL_ADC_GetChannelSamplingTime\n
2872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP3           LL_ADC_GetChannelSamplingTime\n
2873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP2           LL_ADC_GetChannelSamplingTime\n
2874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP1           LL_ADC_GetChannelSamplingTime\n
2875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         SMPR2    SMP0           LL_ADC_GetChannelSamplingTime
2876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
2898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
2899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
2900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_13CYCLES_5
2904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_28CYCLES_5
2905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_41CYCLES_5
2906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_55CYCLES_5
2907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_71CYCLES_5
2908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_239CYCLES_5
2909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
2911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
2912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, __ADC_MASK_SHIFT(Channel, ADC_CH
2913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
2914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
2915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                              ADC_SMPR2_SMP0 << __ADC_MASK_SHIFT(Channel, ADC_CHANNEL_SMPx_BITOFFSET
2916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                     >> __ADC_MASK_SHIFT(Channel, ADC_CHANNEL_SMPx_BITOFFSET_MASK)
2917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                    );
2918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 53


2919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
2922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
2925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
2926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
2927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
2928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
2929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
2930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         a single channel or all channels,
2931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
2932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
2933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         is enabled.
2934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
2935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
2936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
2937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
2938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         instance:
2939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
2940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
2941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
2942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             ADC resolution configured).
2944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
2945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         CR1      AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
2946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         CR1      AWD1EN         LL_ADC_SetAnalogWDMonitChannels
2947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
2948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
2949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
2951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ
2952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
2953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
2954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ 
2955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
2956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
2957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ 
2958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
2959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
2960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ 
2961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
2962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
2963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ 
2964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
2965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
2966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ 
2967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
2968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
2969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ 
2970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
2971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
2972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ 
2973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
2974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
2975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 54


2976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
2977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
2978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ 
2979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
2980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
2981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ 
2982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
2984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ
2985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
2987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ
2988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
2989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
2990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ
2991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
2992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
2993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ
2994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
2995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
2996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ
2997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
2998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
2999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ
3000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
3001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ
3003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
3004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ
3006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
3007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (1)
3008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (1)
3009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ      (1)
3010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (1)
3011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (1)
3012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   (1)
3013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         
3014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (1) On STM32F1, parameter available only on ADC instance: ADC1.
3015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDChannelGroup)
3018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCx->CR1,
3020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              (ADC_CR1_AWDEN | ADC_CR1_JAWDEN | ADC_CR1_AWDSGL | ADC_CR1_AWDCH),
3021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              AWDChannelGroup);
3022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
3026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 55


3033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           as parameter for another function.
3034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           process the returned value with the helper macro
3036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
3038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           one channel.
3039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
3040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         instance:
3041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
3044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             ADC resolution configured).
3046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
3047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         CR1      AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
3048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         CR1      AWD1EN         LL_ADC_GetAnalogWDMonitChannels
3049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ
3054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
3055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
3056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ 
3057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
3058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
3059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ 
3060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
3061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
3062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ 
3063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
3064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
3065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ 
3066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
3067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
3068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ 
3069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
3070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
3071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ 
3072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
3073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
3074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ 
3075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
3076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
3077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ 
3078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
3079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
3080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ 
3081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
3082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
3083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ 
3084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
3085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ
3087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
3088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 56


3090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
3091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ
3093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
3094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ
3096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
3097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ
3099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
3100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ
3102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
3103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ
3105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
3106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ
3108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
3109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx)
3111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CR1, (ADC_CR1_AWDEN | ADC_CR1_JAWDEN | ADC_CR1_AWDSGL | ADC_CR1_
3113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
3117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         high or low.
3118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
3119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         instance:
3120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
3123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *             ADC resolution configured).
3125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll HTR      HT             LL_ADC_SetAnalogWDThresholds\n
3126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         LTR      LT             LL_ADC_SetAnalogWDThresholds
3127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  AWDThresholdValue: Value between Min_Data=0x000 and Max_Data=0xFFF
3132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdsHighLow,
3135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->HTR, AWDThresholdsHighLow);
3137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
3138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(*preg,
3139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              ADC_HTR_HT,
3140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****              AWDThresholdValue);
3141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high or
3145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         threshold low.
3146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 57


3147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
3149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll HTR      HT             LL_ADC_GetAnalogWDThresholds\n
3150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         LTR      LT             LL_ADC_GetAnalogWDThresholds
3151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** */
3157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdsHigh
3158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->HTR, AWDThresholdsHighLow);
3160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
3161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg, ADC_HTR_HT));
3162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
3166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
3169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
3170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
3173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
3175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
3176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
3177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         either master or slave depending on hardware.
3178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to reference manual.
3179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      DUALMOD        LL_ADC_SetMultimode
3180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
3183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT             
3184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT         
3185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL_FAST    
3186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL_SLOW    
3187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT         
3188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN         
3189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM    
3190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT    
3191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTFAST_INJ_SIM
3192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTSLOW_INJ_SIM
3193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
3196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CR1, ADC_CR1_DUALMOD, Multimode);
3198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
3202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
3203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 58


3204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         either master or slave depending on hardware.
3205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to reference manual.
3206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR1      DUALMOD        LL_ADC_GetMultimode
3207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
3208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
3211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT         
3212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL_FAST    
3213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL_SLOW    
3214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT         
3215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN         
3216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM    
3217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT    
3218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTFAST_INJ_SIM
3219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTSLOW_INJ_SIM
3220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
3222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CR1, ADC_CR1_DUALMOD));
3224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
3227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
3230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
3232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
3233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
3237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, after ADC enable, a delay for 
3238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
3239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversion start.
3240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
3241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      ADON           LL_ADC_Enable
3242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
3246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   SET_BIT(ADCx->CR2, ADC_CR2_ADON);
3248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
3252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      ADON           LL_ADC_Disable
3253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
3257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR2, ADC_CR2_ADON);
3259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 59


3261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
3263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      ADON           LL_ADC_IsEnabled
3264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
3266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
  40              		.loc 2 3267 26 view .LVU4
  41              	.LBB23:
3268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (READ_BIT(ADCx->CR2, ADC_CR2_ADON) == (ADC_CR2_ADON));
  42              		.loc 2 3269 3 view .LVU5
  43              		.loc 2 3269 11 is_stmt 0 view .LVU6
  44 0000 8368     		ldr	r3, [r0, #8]
  45              	.LVL1:
  46              		.loc 2 3269 11 view .LVU7
  47              	.LBE23:
  48              	.LBE22:
   5:Src/adc.c     **** 	uint32_t ADC_value = 0;
  49              		.loc 1 5 1 view .LVU8
  50 0002 10B4     		push	{r4}
  51              	.LCFI0:
  52              		.cfi_def_cfa_offset 4
  53              		.cfi_offset 4, -4
  54              		.loc 1 8 5 view .LVU9
  55 0004 DC07     		lsls	r4, r3, #31
  56 0006 0AD4     		bmi	.L2
   9:Src/adc.c     **** 	{
  10:Src/adc.c     **** 		/* Enable ADC */
  11:Src/adc.c     **** 		LL_ADC_Enable(ADCx);
  57              		.loc 1 11 3 is_stmt 1 view .LVU10
  58              	.LVL2:
  59              	.LBB24:
  60              	.LBI24:
3245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
  61              		.loc 2 3245 22 view .LVU11
  62              	.LBB25:
3247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
  63              		.loc 2 3247 3 view .LVU12
  64 0008 8368     		ldr	r3, [r0, #8]
  65 000a 43F00103 		orr	r3, r3, #1
  66 000e 8360     		str	r3, [r0, #8]
  67              	.LVL3:
3247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
  68              		.loc 2 3247 3 is_stmt 0 view .LVU13
  69              	.LBE25:
  70              	.LBE24:
  12:Src/adc.c     **** 		LL_ADC_StartCalibration(ADCx);
  71              		.loc 1 12 3 is_stmt 1 view .LVU14
  72              	.LBB26:
  73              	.LBI26:
3270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
3274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, before starting a calibration,
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 60


3276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC must be disabled.
3277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         A minimum number of ADC clock cycles are required
3278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         between ADC disable state and calibration start.
3279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_DISABLE_CALIB_ADC_CYCLES.
3280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, hardware prerequisite before starting a calibration:
3281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****             the ADC must have been in power-on state for at least
3282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****             two ADC clock cycles.
3283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      CAL            LL_ADC_StartCalibration
3284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
  74              		.loc 2 3287 22 view .LVU15
  75              	.LBB27:
3288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   SET_BIT(ADCx->CR2, ADC_CR2_CAL);
  76              		.loc 2 3289 3 view .LVU16
  77 0010 8368     		ldr	r3, [r0, #8]
  78 0012 43F00403 		orr	r3, r3, #4
  79 0016 8360     		str	r3, [r0, #8]
  80              	.L3:
  81              	.LBE27:
  82              	.LBE26:
  13:Src/adc.c     **** 		while ( LL_ADC_IsCalibrationOnGoing(ADCx) ) {}
  83              		.loc 1 13 48 discriminator 1 view .LVU17
  84              	.LVL4:
  85              	.LBB28:
  86              	.LBI28:
3290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC calibration state.
3294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      CAL            LL_ADC_IsCalibrationOnGoing
3295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
3297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
  87              		.loc 2 3298 26 discriminator 1 view .LVU18
  88              	.LBB29:
3299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (READ_BIT(ADCx->CR2, ADC_CR2_CAL) == (ADC_CR2_CAL));
  89              		.loc 2 3300 3 discriminator 1 view .LVU19
  90              		.loc 2 3300 11 is_stmt 0 discriminator 1 view .LVU20
  91 0018 8368     		ldr	r3, [r0, #8]
  92              	.LVL5:
  93              		.loc 2 3300 11 discriminator 1 view .LVU21
  94              	.LBE29:
  95              	.LBE28:
  96              		.loc 1 13 9 discriminator 1 view .LVU22
  97 001a 5A07     		lsls	r2, r3, #29
  98 001c FCD4     		bmi	.L3
  99              	.LVL6:
 100              	.L2:
  14:Src/adc.c     **** 	}
  15:Src/adc.c     **** 	/* Select analog input */
  16:Src/adc.c     **** 	ADCx->SQR3 = channel;
 101              		.loc 1 16 2 is_stmt 1 view .LVU23
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 61


 102              	.LBB30:
 103              	.LBB31:
3301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
3305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
3308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
3309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
3313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant only for
3314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal trigger (SW start), not for external trigger:
3315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
3316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           starts immediately.
3317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
3318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           start must be performed using function 
3319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           @ref LL_ADC_REG_StartConversionExtTrig().
3320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (if external trigger edge would have been set during ADC other 
3321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           settings, ADC conversion would start at trigger event
3322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           as soon as ADC is enabled).
3323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      SWSTART        LL_ADC_REG_StartConversionSWStart
3324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversionSWStart(ADC_TypeDef *ADCx)
3328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   SET_BIT(ADCx->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
3330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Start ADC group regular conversion from external trigger.
3334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   ADC conversion will start at next trigger event (on the selected
3335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         trigger edge) following the ADC start conversion command.
3336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant for 
3337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversion start from external trigger.
3338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         If internal trigger (SW start) is needed, perform ADC conversion
3339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         start using function @ref LL_ADC_REG_StartConversionSWStart().
3340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      EXTEN          LL_ADC_REG_StartConversionExtTrig
3341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversionExtTrig(ADC_TypeDef *ADCx, uint32_t ExternalTriggerE
3347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   SET_BIT(ADCx->CR2, ExternalTriggerEdge);
3349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion from external trigger.
3353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   No more ADC conversion will start at next trigger event
3354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         following the ADC stop conversion command.
3355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         If a conversion is on-going, it will be completed.
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 62


3356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, there is no specific command
3357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         to stop a conversion on-going or to stop ADC converting
3358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         in continuous mode. These actions can be performed
3359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         using function @ref LL_ADC_Disable().
3360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      EXTSEL         LL_ADC_REG_StopConversionExtTrig
3361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversionExtTrig(ADC_TypeDef *ADCx)
3365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR2, ADC_CR2_EXTTRIG);
3367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
3372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all oversampling increased data width (for devices
3373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         with feature oversampling).
3374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
3375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
3377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
3379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC resolution 12 bits.
3386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         can increase data width, function for extended range
3388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
3390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
3394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
3399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
3401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
3402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
3403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         a macro is available to get the conversion data of
3404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
3405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
3406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
3407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
3408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
3409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         separately).
3410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadMultiConversionData32\n
3411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         DR       ADC2DATA       LL_ADC_REG_ReadMultiConversionData32
3412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 63


3413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
3414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
3415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
3416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
3417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
3418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
3419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_TypeDef *ADCx, uint32_t Conversio
3421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR,
3423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                              ADC_DR_ADC2DATA)
3424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                     >> POSITION_VAL(ConversionData)
3425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                    );
3426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
3428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
3431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
3434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
3435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
3439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant only for
3440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         internal trigger (SW start), not for external trigger:
3441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
3442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           starts immediately.
3443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
3444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           start must be performed using function 
3445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           @ref LL_ADC_INJ_StartConversionExtTrig().
3446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           (if external trigger edge would have been set during ADC other 
3447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           settings, ADC conversion would start at trigger event
3448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *           as soon as ADC is enabled).
3449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      JSWSTART       LL_ADC_INJ_StartConversionSWStart
3450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversionSWStart(ADC_TypeDef *ADCx)
3454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   SET_BIT(ADCx->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
3456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Start ADC group injected conversion from external trigger.
3460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   ADC conversion will start at next trigger event (on the selected
3461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         trigger edge) following the ADC start conversion command.
3462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant for 
3463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC conversion start from external trigger.
3464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         If internal trigger (SW start) is needed, perform ADC conversion
3465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         start using function @ref LL_ADC_INJ_StartConversionSWStart().
3466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      JEXTEN         LL_ADC_INJ_StartConversionExtTrig
3467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
3469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 64


3470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversionExtTrig(ADC_TypeDef *ADCx, uint32_t ExternalTriggerE
3473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   SET_BIT(ADCx->CR2, ExternalTriggerEdge);
3475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion from external trigger.
3479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   No more ADC conversion will start at next trigger event
3480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         following the ADC stop conversion command.
3481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         If a conversion is on-going, it will be completed.
3482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   On this STM32 serie, there is no specific command
3483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         to stop a conversion on-going or to stop ADC converting
3484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         in continuous mode. These actions can be performed
3485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         using function @ref LL_ADC_Disable().
3486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll CR2      JEXTSEL        LL_ADC_INJ_StopConversionExtTrig
3487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversionExtTrig(ADC_TypeDef *ADCx)
3491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR2, ADC_CR2_JEXTTRIG);
3493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
3498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         all oversampling increased data width (for devices
3499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         with feature oversampling).
3500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
3501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
3502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
3503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
3504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
3507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
3508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
3509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
3510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
3511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(ADC_TypeDef *ADCx, uint32_t Rank)
3513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, __ADC_MASK_SHIFT(Rank, ADC_INJ_JD
3515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
3516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
3517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                              ADC_JDR1_JDATA)
3518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                    );
3519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
3523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         ADC resolution 12 bits.
3524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         can increase data width, function for extended range
3526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 65


3527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
3528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
3529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
3530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
3531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
3534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
3535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
3536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
3537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(ADC_TypeDef *ADCx, uint32_t Rank)
3540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, __ADC_MASK_SHIFT(Rank, ADC_INJ_JD
3542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   
3543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
3544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                              ADC_JDR1_JDATA)
3545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****                    );
3546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @}
3550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
3553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @{
3554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
3558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SR       EOC            LL_ADC_IsActiveFlag_EOS
3559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
3563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Note: on this STM32 serie, there is no flag ADC group regular           */
3565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /*       end of unitary conversion.                                         */
3566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /*       Flag noted as "EOC" is corresponding to flag "EOS"                 */
3567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /*       in other STM32 families).                                          */
3568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (READ_BIT(ADCx->SR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS));
3569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
3574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SR       JEOC           LL_ADC_IsActiveFlag_JEOS
3575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(ADC_TypeDef *ADCx)
3579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Note: on this STM32 serie, there is no flag ADC group injected          */
3581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /*       end of unitary conversion.                                         */
3582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /*       Flag noted as "JEOC" is corresponding to flag "JEOS"               */
3583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /*       in other STM32 families).                                          */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 66


3584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (READ_BIT(ADCx->SR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS));
3585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
3589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SR       AWD            LL_ADC_IsActiveFlag_AWD1
3590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
3594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   return (READ_BIT(ADCx->SR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1));
3596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
3600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SR       EOC            LL_ADC_ClearFlag_EOS
3601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
3605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Note: on this STM32 serie, there is no flag ADC group regular           */
3607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /*       end of unitary conversion.                                         */
3608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /*       Flag noted as "EOC" is corresponding to flag "EOS"                 */
3609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /*       in other STM32 families).                                          */
3610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   WRITE_REG(ADCx->SR, ~LL_ADC_FLAG_EOS);
3611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
3616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SR       JEOC           LL_ADC_ClearFlag_JEOS
3617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
3620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
3621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /* Note: on this STM32 serie, there is no flag ADC group injected          */
3623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /*       end of unitary conversion.                                         */
3624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /*       Flag noted as "JEOC" is corresponding to flag "JEOS"               */
3625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   /*       in other STM32 families).                                          */
3626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   WRITE_REG(ADCx->SR, ~LL_ADC_FLAG_JEOS);
 104              		.loc 2 3626 3 is_stmt 0 view .LVU24
 105 001e 6FF00403 		mvn	r3, #4
 106              	.LBE31:
 107              	.LBE30:
 108              	.LBB33:
 109              	.LBB34:
3627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
3628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** 
3629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** /**
3630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
3631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @rmtoll SR       AWD            LL_ADC_ClearFlag_AWD1
3632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @param  ADCx ADC instance
3633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   * @retval None
3634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   */
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 67


3635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
3636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
3637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h ****   WRITE_REG(ADCx->SR, ~LL_ADC_FLAG_AWD1);
 110              		.loc 2 3637 3 view .LVU25
 111 0022 6FF00104 		mvn	r4, #1
 112              	.LBE34:
 113              	.LBE33:
 114              	.LBB36:
 115              	.LBB37:
3610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 116              		.loc 2 3610 3 view .LVU26
 117 0026 6FF00202 		mvn	r2, #2
 118              	.LBE37:
 119              	.LBE36:
 120              		.loc 1 16 13 view .LVU27
 121 002a 4163     		str	r1, [r0, #52]
  17:Src/adc.c     **** 	/* Clear status register */
  18:Src/adc.c     **** 	LL_ADC_ClearFlag_AWD1(ADCx);
 122              		.loc 1 18 2 is_stmt 1 view .LVU28
 123              	.LVL7:
 124              	.LBB39:
 125              	.LBI33:
3635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 126              		.loc 2 3635 22 view .LVU29
 127              	.LBB35:
 128              		.loc 2 3637 3 view .LVU30
 129 002c 0460     		str	r4, [r0]
 130              	.LVL8:
 131              		.loc 2 3637 3 is_stmt 0 view .LVU31
 132              	.LBE35:
 133              	.LBE39:
  19:Src/adc.c     **** 	LL_ADC_ClearFlag_EOS(ADCx);
 134              		.loc 1 19 2 is_stmt 1 view .LVU32
 135              	.LBB40:
 136              	.LBI36:
3604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 137              		.loc 2 3604 22 view .LVU33
 138              	.LBB38:
3610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 139              		.loc 2 3610 3 view .LVU34
 140 002e 0260     		str	r2, [r0]
 141              	.LVL9:
3610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 142              		.loc 2 3610 3 is_stmt 0 view .LVU35
 143              	.LBE38:
 144              	.LBE40:
  20:Src/adc.c     **** 	LL_ADC_ClearFlag_JEOS(ADCx);
 145              		.loc 1 20 2 is_stmt 1 view .LVU36
 146              	.LBB41:
 147              	.LBI30:
3620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 148              		.loc 2 3620 22 view .LVU37
 149              	.LBB32:
3626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 150              		.loc 2 3626 3 view .LVU38
 151 0030 0360     		str	r3, [r0]
 152              	.LVL10:
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 68


3626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 153              		.loc 2 3626 3 is_stmt 0 view .LVU39
 154              	.LBE32:
 155              	.LBE41:
  21:Src/adc.c     **** 	/* Start Conversion */
  22:Src/adc.c     **** 	LL_ADC_REG_StartConversionSWStart(ADCx);
 156              		.loc 1 22 2 is_stmt 1 view .LVU40
 157              	.LBB42:
 158              	.LBI42:
3327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 159              		.loc 2 3327 22 view .LVU41
 160              	.LBB43:
3329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 161              		.loc 2 3329 3 view .LVU42
 162 0032 8368     		ldr	r3, [r0, #8]
 163 0034 43F4A003 		orr	r3, r3, #5242880
 164 0038 8360     		str	r3, [r0, #8]
 165              	.L4:
3329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 166              		.loc 2 3329 3 is_stmt 0 view .LVU43
 167              	.LBE43:
 168              	.LBE42:
  23:Src/adc.c     **** 	/* Wait for conversion to complete */
  24:Src/adc.c     **** 	while (!LL_ADC_IsActiveFlag_EOS(ADCx))
  25:Src/adc.c     **** 	{
  26:Src/adc.c     **** 	}
 169              		.loc 1 26 2 is_stmt 1 discriminator 1 view .LVU44
 170              	.LVL11:
 171              	.LBB44:
 172              	.LBI44:
3562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 173              		.loc 2 3562 26 discriminator 1 view .LVU45
 174              	.LBB45:
3568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 175              		.loc 2 3568 3 discriminator 1 view .LVU46
3568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 176              		.loc 2 3568 11 is_stmt 0 discriminator 1 view .LVU47
 177 003a 0368     		ldr	r3, [r0]
 178              	.LVL12:
3568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 179              		.loc 2 3568 11 discriminator 1 view .LVU48
 180              	.LBE45:
 181              	.LBE44:
  24:Src/adc.c     **** 	{
 182              		.loc 1 24 8 discriminator 1 view .LVU49
 183 003c 9B07     		lsls	r3, r3, #30
 184 003e FCD5     		bpl	.L4
  27:Src/adc.c     **** 	ADC_value = LL_ADC_REG_ReadConversionData12(ADCx);
 185              		.loc 1 27 2 is_stmt 1 view .LVU50
 186              	.LVL13:
 187              	.LBB46:
 188              	.LBI46:
3393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** {
 189              		.loc 2 3393 26 view .LVU51
 190              	.LBB47:
3395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 191              		.loc 2 3395 3 view .LVU52
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 69


 192              	.LBE47:
 193              	.LBE46:
  28:Src/adc.c     **** 
  29:Src/adc.c     **** 	static uint32_t oldValue = 0;
  30:Src/adc.c     **** 	ADC_value = (oldValue * 15 + ADC_value) >> 4;  // cumulative moving average filter
  31:Src/adc.c     **** 	voltage = (ADC_value * 330) / 4096; /*   calculate voltage   */
 194              		.loc 1 31 23 is_stmt 0 view .LVU53
 195 0040 4FF4A572 		mov	r2, #330
  30:Src/adc.c     **** 	voltage = (ADC_value * 330) / 4096; /*   calculate voltage   */
 196              		.loc 1 30 24 view .LVU54
 197 0044 074C     		ldr	r4, .L10
 198              	.LBB49:
 199              	.LBB48:
3395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 200              		.loc 2 3395 21 view .LVU55
 201 0046 C16C     		ldr	r1, [r0, #76]
 202              	.LVL14:
3395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_adc.h **** }
 203              		.loc 2 3395 21 view .LVU56
 204              	.LBE48:
 205              	.LBE49:
  29:Src/adc.c     **** 	ADC_value = (oldValue * 15 + ADC_value) >> 4;  // cumulative moving average filter
 206              		.loc 1 29 2 is_stmt 1 view .LVU57
  30:Src/adc.c     **** 	voltage = (ADC_value * 330) / 4096; /*   calculate voltage   */
 207              		.loc 1 30 2 view .LVU58
  30:Src/adc.c     **** 	voltage = (ADC_value * 330) / 4096; /*   calculate voltage   */
 208              		.loc 1 30 24 is_stmt 0 view .LVU59
 209 0048 2368     		ldr	r3, [r4]
  30:Src/adc.c     **** 	voltage = (ADC_value * 330) / 4096; /*   calculate voltage   */
 210              		.loc 1 30 29 view .LVU60
 211 004a 89B2     		uxth	r1, r1
 212              	.LVL15:
  30:Src/adc.c     **** 	voltage = (ADC_value * 330) / 4096; /*   calculate voltage   */
 213              		.loc 1 30 24 view .LVU61
 214 004c C3EB0313 		rsb	r3, r3, r3, lsl #4
  30:Src/adc.c     **** 	voltage = (ADC_value * 330) / 4096; /*   calculate voltage   */
 215              		.loc 1 30 29 view .LVU62
 216 0050 0B44     		add	r3, r3, r1
  30:Src/adc.c     **** 	voltage = (ADC_value * 330) / 4096; /*   calculate voltage   */
 217              		.loc 1 30 12 view .LVU63
 218 0052 1B09     		lsrs	r3, r3, #4
 219              	.LVL16:
 220              		.loc 1 31 2 is_stmt 1 view .LVU64
  32:Src/adc.c     **** 	oldValue = ADC_value;
 221              		.loc 1 32 2 view .LVU65
  31:Src/adc.c     **** 	oldValue = ADC_value;
 222              		.loc 1 31 23 is_stmt 0 view .LVU66
 223 0054 02FB03F0 		mul	r0, r2, r3
 224              	.LVL17:
 225              		.loc 1 32 11 view .LVU67
 226 0058 2360     		str	r3, [r4]
  33:Src/adc.c     **** 
  34:Src/adc.c     **** 	/* Retrieve result */
  35:Src/adc.c     **** 	return (uint16_t) voltage;
 227              		.loc 1 35 2 is_stmt 1 view .LVU68
  36:Src/adc.c     **** }
 228              		.loc 1 36 1 is_stmt 0 view .LVU69
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 70


 229 005a C0F30F30 		ubfx	r0, r0, #12, #16
 230 005e 10BC     		pop	{r4}
 231              	.LCFI1:
 232              		.cfi_restore 4
 233              		.cfi_def_cfa_offset 0
 234 0060 7047     		bx	lr
 235              	.L11:
 236 0062 00BF     		.align	2
 237              	.L10:
 238 0064 00000000 		.word	.LANCHOR0
 239              		.cfi_endproc
 240              	.LFE143:
 242              		.section	.bss.oldValue.6553,"aw",%nobits
 243              		.align	2
 244              		.set	.LANCHOR0,. + 0
 247              	oldValue.6553:
 248 0000 00000000 		.space	4
 249              		.text
 250              	.Letext0:
 251              		.file 3 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/machine/_default_type
 252              		.file 4 "/usr/local/gcc-arm-none-eabi-8-2019-q3-update/arm-none-eabi/include/sys/_stdint.h"
 253              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 254              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 255              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 256              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s 			page 71


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s:16     .text.readVoltage:0000000000000000 $t
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s:25     .text.readVoltage:0000000000000000 readVoltage
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s:238    .text.readVoltage:0000000000000064 $d
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s:243    .bss.oldValue.6553:0000000000000000 $d
/var/folders/20/cstyxln53wn53rr40gj353bh0000gn/T//ccnmkUfH.s:247    .bss.oldValue.6553:0000000000000000 oldValue.6553

NO UNDEFINED SYMBOLS
